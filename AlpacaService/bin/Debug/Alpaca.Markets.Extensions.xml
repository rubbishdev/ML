<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Alpaca.Markets.Extensions</name>
    </assembly>
    <members>
        <member name="T:System.Runtime.CompilerServices.IsExternalInit">
            <summary>
                Reserved to be used by the compiler for tracking metadata.
                This class should not be used by developers in source code.
            </summary>
            <remarks>
                This definition is provided by the <i>IsExternalInit</i> NuGet package (https://www.nuget.org/packages/IsExternalInit).
                Please see https://github.com/manuelroemer/IsExternalInit for more information.
            </remarks>
        </member>
        <member name="T:Alpaca.Markets.Extensions.EnvironmentExtensions">
            <summary>
            Set of extensions methods for replacing target URL for Alpaca data streaming client (
            <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/>) with custom values or with local proxy
            WebSocket URL obtained from environment variables.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Extensions.EnvironmentExtensions.WithProxyForAlpacaDataStreamingClient(Alpaca.Markets.IEnvironment)">
            <summary>
            Replaces <see cref="P:Alpaca.Markets.IEnvironment.AlpacaDataStreamingApi"/> from environment
            variable named <c>DATA_PROXY_WS</c> with default fallback value equal to default
            Alpaca proxy agent local URL (<c>ws://127.0.0.1:8765</c>).
            </summary>
            <param name="environment">Original environment URLs for modification.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="environment"/> argument is <c>null</c>.
            </exception>
            <returns>New environment URLs object.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.EnvironmentExtensions.WithProxyForAlpacaDataStreamingClient(Alpaca.Markets.IEnvironment,System.Uri)">
            <summary>
            Replaces <see cref="P:Alpaca.Markets.IEnvironment.AlpacaDataStreamingApi"/> value with the
            <paramref name="alpacaProxyAgentUrl"/> value or from environment variable
            named <c>DATA_PROXY_WS</c> with default fallback value equal to default
            Alpaca proxy agent local URL (<c>ws://127.0.0.1:8765</c>).
            </summary>
            <param name="environment">Original environment URLs for modification.</param>
            <param name="alpacaProxyAgentUrl">
            New value for the <see cref="P:Alpaca.Markets.IEnvironment.AlpacaDataStreamingApi"/> property
            in the modified <paramref name="environment"/> object.
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="environment"/> or <paramref name="alpacaProxyAgentUrl"/> argument is <c>null</c>.
            </exception>
            <returns>New environment URLs object.</returns>
        </member>
        <member name="T:Alpaca.Markets.Extensions.AlpacaValueTask">
            <summary>
            Helper task-like type for providing cancellation support for `params`-style extension methods.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaValueTask.#ctor">
            <summary>
            Creates new instance of the <see cref="T:Alpaca.Markets.Extensions.AlpacaValueTask"/> structure.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaValueTask.WithCancellation(System.Threading.CancellationToken)">
            <summary>
            Gets a new instance of the <see cref="T:Alpaca.Markets.Extensions.AlpacaValueTask"/> with cancellation token.
            </summary>
            <param name="cancellationToken">Cancellation token for awaited operation.</param>
            <returns>New wrapper over original task with the configured cancellation token.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaValueTask.GetAwaiter">
            <summary>
            Gets the awaiter object for the async state machine generated by compiler.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.Extensions.AlpacaTradingClientExtensions">
            <summary>
            Set of extension methods for the <see cref="T:Alpaca.Markets.IAlpacaTradingClient"/> interface.
            </summary>
            <summary>
            Set of extension methods for the <see cref="T:Alpaca.Markets.IAlpacaTradingClient"/> interface.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaTradingClientExtensions.IsMarketOpenAsync(Alpaca.Markets.IAlpacaTradingClient)">
            <summary>
            Gets the <see cref="P:Alpaca.Markets.IClock.IsOpen"/> state from cached API result call.
            </summary>
            <param name="client">The <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> object instance.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> argument is <c>null</c>.
            </exception>
            <returns>If trading day is open now returns <c>true</c> value.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaTradingClientExtensions.IsMarketOpenAsync(Alpaca.Markets.IAlpacaTradingClient,System.Threading.CancellationToken)">
            <summary>
            Gets the <see cref="P:Alpaca.Markets.IClock.IsOpen"/> state from cached API result call.
            </summary>
            <param name="client">The <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> object instance.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> argument is <c>null</c>.
            </exception>
            <returns>If trading day is open now returns <c>true</c> value.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaTradingClientExtensions.GetClockCachedAsync(Alpaca.Markets.IAlpacaTradingClient)">
            <summary>
            Gets the cached <see cref="T:Alpaca.Markets.IClock"/> instance with the current session state.
            </summary>
            <param name="client">The <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> object instance.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> argument is <c>null</c>.
            </exception>
            <returns>Cached or value of <see cref="T:Alpaca.Markets.IClock"/> instance or result of REST API call.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaTradingClientExtensions.GetClockCachedAsync(Alpaca.Markets.IAlpacaTradingClient,System.Threading.CancellationToken)">
            <summary>
            Gets the cached <see cref="T:Alpaca.Markets.IClock"/> instance with the current session state.
            </summary>
            <param name="client">The <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> object instance.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> argument is <c>null</c>.
            </exception>
            <returns>Cached or value of <see cref="T:Alpaca.Markets.IClock"/> instance or result of REST API call.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaTradingClientExtensions.ListAccountActivitiesAsAsyncEnumerable(Alpaca.Markets.IAlpacaTradingClient,Alpaca.Markets.AccountActivitiesRequest)">
            <summary>
            Gets all account activities from Alpaca REST API endpoint as async enumerable stream.
            </summary>
            <param name="client">The <see cref="T:Alpaca.Markets.IAlpacaTradingClient"/> object instance.</param>
            <param name="request">Account activities request parameters.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Account activity record objects obtained page by page.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaTradingClientExtensions.ListAccountActivitiesAsAsyncEnumerable(Alpaca.Markets.IAlpacaTradingClient,Alpaca.Markets.AccountActivitiesRequest,System.Threading.CancellationToken)">
            <summary>
            Gets all account activities from Alpaca REST API endpoint as async enumerable stream.
            </summary>
            <param name="client">The <see cref="T:Alpaca.Markets.IAlpacaTradingClient"/> object instance.</param>
            <param name="request">Account activities request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Account activity record objects obtained page by page.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaTradingClientExtensions.ListOptionContractsAsAsyncEnumerable(Alpaca.Markets.IAlpacaTradingClient,Alpaca.Markets.OptionContractsRequest)">
            <summary>
            Gets all option contracts from Alpaca REST API endpoint as async enumerable stream.
            </summary>
            <param name="client">The <see cref="T:Alpaca.Markets.IAlpacaTradingClient"/> object instance.</param>
            <param name="request">Account activities request parameters.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Account activity record objects obtained page by page.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaTradingClientExtensions.ListOptionContractsAsAsyncEnumerable(Alpaca.Markets.IAlpacaTradingClient,Alpaca.Markets.OptionContractsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets all option contracts from Alpaca REST API endpoint as async enumerable stream.
            </summary>
            <param name="client">The <see cref="T:Alpaca.Markets.IAlpacaTradingClient"/> object instance.</param>
            <param name="request">Account activities request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Account activity record objects obtained page by page.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaTradingClientExtensions.GetCalendarForSingleDayAsync(Alpaca.Markets.IAlpacaTradingClient,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Get single trading day information from the Alpaca REST API.
            </summary>
            <param name="client">The <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> object instance.</param>
            <param name="date">The trading date (time part will not be used).</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only trading date information object.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaTradingClientExtensions.GetCalendarForSingleDayAsync(Alpaca.Markets.IAlpacaTradingClient,System.DateOnly,System.Threading.CancellationToken)">
            <summary>
            Get single trading day information from the Alpaca REST API.
            </summary>
            <param name="client">The <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> object instance.</param>
            <param name="date">The trading date (time part will not be used).</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only trading date information object.</returns>
        </member>
        <member name="T:Alpaca.Markets.Extensions.AlpacaServiceCollectionExtensions">
            <summary>
            Set of extensions methods for registering the strongly-typed Alpaca REST API clients
            in the default Microsoft dependency injection container used by most .NET hosts.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaServiceCollectionExtensions.AddAlpacaCryptoDataClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Registers the concrete implementation of the <see cref="T:Alpaca.Markets.IAlpacaCryptoDataClient"/>
            interface in the services catalog and make it available in constructors.
            </summary>
            <param name="services">Registered services collection.</param>
            <param name="environment">Alpaca environment data.</param>
            <param name="securityKey">Alpaca security key.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="services"/>, <paramref name="environment"/>, or <paramref name="securityKey"/> argument is <c>null</c>.
            </exception>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder"/> interface for further HTTP client customization.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaServiceCollectionExtensions.AddAlpacaCryptoDataClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,Alpaca.Markets.AlpacaCryptoDataClientConfiguration)">
            <summary>
            Registers the concrete implementation of the <see cref="T:Alpaca.Markets.IAlpacaCryptoDataClient"/>
            interface in the services catalog and make it available in constructors.
            </summary>
            <param name="services">Registered services collection.</param>
            <param name="configuration">Alpaca data client configuration.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="services"/> or <paramref name="configuration"/> argument is <c>null</c>.
            </exception>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder"/> interface for further HTTP client customization.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaServiceCollectionExtensions.AddAlpacaDataClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Registers the concrete implementation of the <see cref="T:Alpaca.Markets.IAlpacaDataClient"/>
            interface in the services catalog and make it available in constructors.
            </summary>
            <param name="services">Registered services collection.</param>
            <param name="environment">Alpaca environment data.</param>
            <param name="securityKey">Alpaca security key.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="services"/>, <paramref name="environment"/>, or <paramref name="securityKey"/> argument is <c>null</c>.
            </exception>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder"/> interface for further HTTP client customization.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaServiceCollectionExtensions.AddAlpacaDataClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,Alpaca.Markets.AlpacaDataClientConfiguration)">
            <summary>
            Registers the concrete implementation of the <see cref="T:Alpaca.Markets.IAlpacaDataClient"/>
            interface in the services catalog and make it available in constructors.
            </summary>
            <param name="services">Registered services collection.</param>
            <param name="configuration">Alpaca data client configuration.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="services"/> or <paramref name="configuration"/> argument is <c>null</c>.
            </exception>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder"/> interface for further HTTP client customization.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaServiceCollectionExtensions.AddAlpacaTradingClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Registers the concrete implementation of the <see cref="T:Alpaca.Markets.IAlpacaTradingClient"/>
            interface in the services catalog and make it available in constructors.
            </summary>
            <param name="services">Registered services collection.</param>
            <param name="environment">Alpaca environment data.</param>
            <param name="securityKey">Alpaca security key.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="services"/>, <paramref name="environment"/>, or <paramref name="securityKey"/> argument is <c>null</c>.
            </exception>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder"/> interface for further HTTP client customization.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaServiceCollectionExtensions.AddAlpacaTradingClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,Alpaca.Markets.AlpacaTradingClientConfiguration)">
            <summary>
            Registers the concrete implementation of the <see cref="T:Alpaca.Markets.IAlpacaTradingClient"/>
            interface in the services catalog and make it available in constructors.
            </summary>
            <param name="services">Registered services collection.</param>
            <param name="configuration">Alpaca trading client configuration.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="services"/> or <paramref name="configuration"/> argument is <c>null</c>.
            </exception>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder"/> interface for further HTTP client customization.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaServiceCollectionExtensions.AddAlpacaOptionsDataClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Registers the concrete implementation of the <see cref="T:Alpaca.Markets.IAlpacaOptionsDataClient"/>
            interface in the services catalog and make it available in constructors.
            </summary>
            <param name="services">Registered services collection.</param>
            <param name="environment">Alpaca environment data.</param>
            <param name="securityKey">Alpaca security key.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="services"/>, <paramref name="environment"/>, or <paramref name="securityKey"/> argument is <c>null</c>.
            </exception>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder"/> interface for further HTTP client customization.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaServiceCollectionExtensions.AddAlpacaOptionsDataClient(Microsoft.Extensions.DependencyInjection.IServiceCollection,Alpaca.Markets.AlpacaOptionsDataClientConfiguration)">
            <summary>
            Registers the concrete implementation of the <see cref="T:Alpaca.Markets.IAlpacaOptionsDataClient"/>
            interface in the services catalog and make it available in constructors.
            </summary>
            <param name="services">Registered services collection.</param>
            <param name="configuration">Alpaca data client configuration.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="services"/> or <paramref name="configuration"/> argument is <c>null</c>.
            </exception>
            <returns>The <see cref="T:Microsoft.Extensions.DependencyInjection.IHttpClientBuilder"/> interface for further HTTP client customization.</returns>
        </member>
        <member name="T:Alpaca.Markets.Extensions.Bracket">
            <summary>
            Set of factory methods for creating the <see cref="T:Alpaca.Markets.BracketOrder"/> instances.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Extensions.Bracket.Buy(System.String,Alpaca.Markets.OrderQuantity,System.Decimal,System.Decimal)">
            <summary>
            Creates a new instance of the buy <see cref="T:Alpaca.Markets.BracketOrder"/> order
            using specified symbol, quantity, take profit, and stop loss prices.
            </summary>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <param name="takeProfitLimitPrice">Take profit order limit price.</param>
            <param name="stopLossStopPrice">Stop loss order stop price.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>
            New advanced order representing an original order plus pair of take profit and stop loss orders.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.Bracket.Buy(System.String,Alpaca.Markets.OrderQuantity,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Creates a new instance of the buy <see cref="T:Alpaca.Markets.BracketOrder"/> order
            using specified symbol, quantity, take profit, and stop loss prices.
            </summary>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <param name="takeProfitLimitPrice">Take profit order limit price.</param>
            <param name="stopLossStopPrice">Stop loss order stop price.</param>
            <param name="stopLossLimitPrice">Stop loss order limit price.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>
            New advanced order representing an original order plus pair of take profit and stop loss orders.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.Bracket.Sell(System.String,Alpaca.Markets.OrderQuantity,System.Decimal,System.Decimal)">
            <summary>
            Creates a new instance of the sell <see cref="T:Alpaca.Markets.BracketOrder"/> order
            using specified symbol, quantity, take profit, and stop loss prices.
            </summary>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <param name="takeProfitLimitPrice">Take profit order limit price.</param>
            <param name="stopLossStopPrice">Stop loss order stop price.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>
            New advanced order representing an original order plus pair of take profit and stop loss orders.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.Bracket.Sell(System.String,Alpaca.Markets.OrderQuantity,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Creates a new instance of the sell <see cref="T:Alpaca.Markets.BracketOrder"/> order
            using specified symbol, quantity, take profit, and stop loss prices.
            </summary>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <param name="takeProfitLimitPrice">Take profit order limit price.</param>
            <param name="stopLossStopPrice">Stop loss order stop price.</param>
            <param name="stopLossLimitPrice">Stop loss order limit price.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>
            New advanced order representing an original order plus pair of take profit and stop loss orders.
            </returns>
        </member>
        <member name="T:Alpaca.Markets.Extensions.OrderSideExtensions">
            <summary>
            Set of extensions methods for creating the <see cref="T:Alpaca.Markets.OrderBase"/> inheritors.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Extensions.OrderSideExtensions.Bracket(Alpaca.Markets.OrderSide,System.String,Alpaca.Markets.OrderQuantity,System.Decimal,System.Decimal)">
            <summary>
            Creates a new instance of the <see cref="T:Alpaca.Markets.BracketOrder"/> order using
            specified side, symbol, quantity, take profit, and stop loss prices.
            </summary>
            <param name="orderSide">Order side (buy or sell).</param>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <param name="takeProfitLimitPrice">Take profit order limit price.</param>
            <param name="stopLossStopPrice">Stop loss order stop price.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>
            New advanced order representing an original order plus pair of take profit and stop loss orders.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.OrderSideExtensions.Bracket(Alpaca.Markets.OrderSide,System.String,Alpaca.Markets.OrderQuantity,System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Creates a new instance of the <see cref="T:Alpaca.Markets.BracketOrder"/> order using
            specified side, symbol, quantity, take profit, and stop loss prices.
            </summary>
            <param name="orderSide">Order side (buy or sell).</param>
            <param name="symbol">Order asset name.</param>
            <param name="quantity">Order quantity.</param>
            <param name="takeProfitLimitPrice">Take profit order limit price.</param>
            <param name="stopLossStopPrice">Stop loss order stop price.</param>
            <param name="stopLossLimitPrice">Stop loss order limit price.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>
            New advanced order representing an original order plus pair of take profit and stop loss orders.
            </returns>
        </member>
        <member name="T:Alpaca.Markets.Extensions.AlpacaDataClientExtensions">
            <summary>
            Set of extension methods for the <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> interface.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetNewsArticlesAsAsyncEnumerable(Alpaca.Markets.IAlpacaDataClient,Alpaca.Markets.NewsArticlesRequest)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IAlpacaDataClient.ListNewsArticlesAsync(Alpaca.Markets.NewsArticlesRequest,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of items (in form of <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> interface) so they
            can be consumed by the <c>await foreach</c> statement on the caller side.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> interface.</param>
            <param name="request">Original historical minute bars request (with empty next page token).</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetNewsArticlesAsAsyncEnumerable(Alpaca.Markets.IAlpacaDataClient,Alpaca.Markets.NewsArticlesRequest,System.Threading.CancellationToken)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IAlpacaDataClient.ListNewsArticlesAsync(Alpaca.Markets.NewsArticlesRequest,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of items (in form of <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> interface) so they
            can be consumed by the <c>await foreach</c> statement on the caller side.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> interface.</param>
            <param name="request">Original historical minute bars request (with empty next page token).</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetNewsArticlesPagesAsAsyncEnumerable(Alpaca.Markets.IAlpacaDataClient,Alpaca.Markets.NewsArticlesRequest)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IAlpacaDataClient.ListNewsArticlesAsync(Alpaca.Markets.NewsArticlesRequest,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of response pages with items so they can be consumed by the <c>await foreach</c>
            statement on the caller side as sequence of 'batches' instead of sequence of items itself.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> interface.</param>
            <param name="request">Original historical news articles request (with empty next page token).</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetNewsArticlesPagesAsAsyncEnumerable(Alpaca.Markets.IAlpacaDataClient,Alpaca.Markets.NewsArticlesRequest,System.Threading.CancellationToken)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IAlpacaDataClient.ListNewsArticlesAsync(Alpaca.Markets.NewsArticlesRequest,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of response pages with items so they can be consumed by the <c>await foreach</c>
            statement on the caller side as sequence of 'batches' instead of sequence of items itself.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> interface.</param>
            <param name="request">Original historical news articles request (with empty next page token).</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalAuctionsAsAsyncEnumerable(Alpaca.Markets.IAlpacaDataClient,Alpaca.Markets.HistoricalAuctionsRequest)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IAlpacaDataClient.ListHistoricalAuctionsAsync(Alpaca.Markets.HistoricalAuctionsRequest,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of items (in form of <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> interface) so they
            can be consumed by the <c>await foreach</c> statement on the caller side.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> interface.</param>
            <param name="request">Original historical auctions request (with empty next page token).</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalAuctionsAsAsyncEnumerable(Alpaca.Markets.IAlpacaDataClient,Alpaca.Markets.HistoricalAuctionsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IAlpacaDataClient.ListHistoricalAuctionsAsync(Alpaca.Markets.HistoricalAuctionsRequest,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of items (in form of <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> interface) so they
            can be consumed by the <c>await foreach</c> statement on the caller side.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> interface.</param>
            <param name="request">Original historical auctions request (with empty next page token).</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalAuctionsDictionaryOfAsyncEnumerable(Alpaca.Markets.IAlpacaDataClient,Alpaca.Markets.HistoricalAuctionsRequest)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IAlpacaDataClient.GetHistoricalAuctionsAsync(Alpaca.Markets.HistoricalAuctionsRequest,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of items (in form of dictionary of the <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/>
            interface instances) so they  can be consumed by the <c>await foreach</c> statement on the caller side.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> interface.</param>
            <param name="request">Original historical auctions request (with empty next page token).</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalAuctionsDictionaryOfAsyncEnumerable(Alpaca.Markets.IAlpacaDataClient,Alpaca.Markets.HistoricalAuctionsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IAlpacaDataClient.GetHistoricalAuctionsAsync(Alpaca.Markets.HistoricalAuctionsRequest,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of items (in form of dictionary of the <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/>
            interface instances) so they  can be consumed by the <c>await foreach</c> statement on the caller side.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> interface.</param>
            <param name="request">Original historical auctions request (with empty next page token).</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalAuctionsPagesAsAsyncEnumerable(Alpaca.Markets.IAlpacaDataClient,Alpaca.Markets.HistoricalAuctionsRequest)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IAlpacaDataClient.ListHistoricalAuctionsAsync(Alpaca.Markets.HistoricalAuctionsRequest,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of response pages with items so they can be consumed by the <c>await foreach</c>
            statement on the caller side as sequence of 'batches' instead of sequence of items itself.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> interface.</param>
            <param name="request">Original historical auctions request (with empty next page token).</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalAuctionsPagesAsAsyncEnumerable(Alpaca.Markets.IAlpacaDataClient,Alpaca.Markets.HistoricalAuctionsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IAlpacaDataClient.ListHistoricalAuctionsAsync(Alpaca.Markets.HistoricalAuctionsRequest,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of response pages with items so they can be consumed by the <c>await foreach</c>
            statement on the caller side as sequence of 'batches' instead of sequence of items itself.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> interface.</param>
            <param name="request">Original historical auctions request (with empty next page token).</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalAuctionsMultiPagesAsAsyncEnumerable(Alpaca.Markets.IAlpacaDataClient,Alpaca.Markets.HistoricalAuctionsRequest)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IAlpacaDataClient.GetHistoricalAuctionsAsync(Alpaca.Markets.HistoricalAuctionsRequest,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of response pages with items so they can be consumed by the <c>await foreach</c>
            statement on the caller side as sequence of 'batches' instead of sequence of items itself.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> interface.</param>
            <param name="request">Original historical auctions request (with empty next page token).</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataClientExtensions.GetHistoricalAuctionsMultiPagesAsAsyncEnumerable(Alpaca.Markets.IAlpacaDataClient,Alpaca.Markets.HistoricalAuctionsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IAlpacaDataClient.GetHistoricalAuctionsAsync(Alpaca.Markets.HistoricalAuctionsRequest,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of response pages with items so they can be consumed by the <c>await foreach</c>
            statement on the caller side as sequence of 'batches' instead of sequence of items itself.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> interface.</param>
            <param name="request">Original historical auctions request (with empty next page token).</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataClientExtensions.ListCorporateActionsAsAsyncEnumerable(Alpaca.Markets.IAlpacaDataClient,Alpaca.Markets.CorporateActionsRequest)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IAlpacaDataClient.ListCorporateActionsAsync(Alpaca.Markets.CorporateActionsRequest,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of items (in form of <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> interface) so they
            can be consumed by the <c>await foreach</c> statement on the caller side.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> interface.</param>
            <param name="request">Original historical minute bars request (with empty next page token).</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataClientExtensions.ListCorporateActionsAsAsyncEnumerable(Alpaca.Markets.IAlpacaDataClient,Alpaca.Markets.CorporateActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IAlpacaDataClient.ListCorporateActionsAsync(Alpaca.Markets.CorporateActionsRequest,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of items (in form of <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> interface) so they
            can be consumed by the <c>await foreach</c> statement on the caller side.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> interface.</param>
            <param name="request">Original historical minute bars request (with empty next page token).</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="T:Alpaca.Markets.Extensions.AlpacaOptionsDataClientExtensions">
            <summary>
            Set of extension methods for the <see cref="T:Alpaca.Markets.IAlpacaOptionsDataClient"/> interface.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaOptionsDataClientExtensions.ListSnapshotsAsAsyncEnumerable(Alpaca.Markets.IAlpacaOptionsDataClient,Alpaca.Markets.OptionSnapshotRequest)">
            <summary>
            Gets all option snapshots from Alpaca REST API endpoint as async enumerable stream.
            </summary>
            <param name="client">The <see cref="T:Alpaca.Markets.IAlpacaOptionsDataClient"/> object instance.</param>
            <param name="request">Account activities request parameters.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Option contacts' snapshots obtained page by page.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaOptionsDataClientExtensions.ListSnapshotsAsAsyncEnumerable(Alpaca.Markets.IAlpacaOptionsDataClient,Alpaca.Markets.OptionSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Gets all option snapshots from Alpaca REST API endpoint as async enumerable stream.
            </summary>
            <param name="client">The <see cref="T:Alpaca.Markets.IAlpacaOptionsDataClient"/> object instance.</param>
            <param name="request">Account activities request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Option contacts' snapshots obtained page by page.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaOptionsDataClientExtensions.GetOptionChainAsyncAsAsyncEnumerable(Alpaca.Markets.IAlpacaOptionsDataClient,Alpaca.Markets.OptionChainRequest)">
            <summary>
            Gets all option snapshots from Alpaca REST API endpoint as async enumerable stream.
            </summary>
            <param name="client">The <see cref="T:Alpaca.Markets.IAlpacaOptionsDataClient"/> object instance.</param>
            <param name="request">Account activities request parameters.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Option contacts' snapshots obtained page by page.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaOptionsDataClientExtensions.GetOptionChainAsyncAsAsyncEnumerable(Alpaca.Markets.IAlpacaOptionsDataClient,Alpaca.Markets.OptionChainRequest,System.Threading.CancellationToken)">
            <summary>
            Gets all option snapshots from Alpaca REST API endpoint as async enumerable stream.
            </summary>
            <param name="client">The <see cref="T:Alpaca.Markets.IAlpacaOptionsDataClient"/> object instance.</param>
            <param name="request">Account activities request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Option contacts' snapshots obtained page by page.</returns>
        </member>
        <member name="T:Alpaca.Markets.Extensions.HistoricalBarsClientExtensions">
            <summary>
            Set of extension methods for the <see cref="T:Alpaca.Markets.IHistoricalBarsClient`1"/> interface.
            </summary>
            <summary>
            Set of extension methods for the <see cref="T:Alpaca.Markets.IHistoricalBarsClient`1"/> interface.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalBarsClientExtensions.GetHistoricalBarsAsAsyncEnumerable``1(Alpaca.Markets.IHistoricalBarsClient{``0},``0)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalBarsClient`1.ListHistoricalBarsAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of items (in form of <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> interface) so they
            can be consumed by the <c>await foreach</c> statement on the caller side.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalBarsClient`1"/> interface.</param>
            <param name="request">Original historical bars request (with empty next page token).</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalBarsClientExtensions.GetHistoricalBarsAsAsyncEnumerable``1(Alpaca.Markets.IHistoricalBarsClient{``0},``0,System.Threading.CancellationToken)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalBarsClient`1.ListHistoricalBarsAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of items (in form of <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> interface) so they
            can be consumed by the <c>await foreach</c> statement on the caller side.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalBarsClient`1"/> interface.</param>
            <param name="request">Original historical bars request (with empty next page token).</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalBarsClientExtensions.GetHistoricalBarsDictionaryOfAsyncEnumerable``1(Alpaca.Markets.IHistoricalBarsClient{``0},``0)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalBarsClient`1.GetHistoricalBarsAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of items (in form of dictionary of the <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/>
            interface instances) so they  can be consumed by the <c>await foreach</c> statement on the caller side.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalBarsClient`1"/> interface.</param>
            <param name="request">Original historical bars request (with empty next page token).</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalBarsClientExtensions.GetHistoricalBarsDictionaryOfAsyncEnumerable``1(Alpaca.Markets.IHistoricalBarsClient{``0},``0,System.Threading.CancellationToken)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalBarsClient`1.GetHistoricalBarsAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of items (in form of dictionary of the <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/>
            interface instances) so they  can be consumed by the <c>await foreach</c> statement on the caller side.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalBarsClient`1"/> interface.</param>
            <param name="request">Original historical bars request (with empty next page token).</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalBarsClientExtensions.GetHistoricalBarsPagesAsAsyncEnumerable``1(Alpaca.Markets.IHistoricalBarsClient{``0},``0)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalBarsClient`1.ListHistoricalBarsAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of response pages with items so they can be consumed by the <c>await foreach</c>
            statement on the caller side as sequence of 'batches' instead of sequence of items itself.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalBarsClient`1"/> interface.</param>
            <param name="request">Original historical bars request (with empty next page token).</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalBarsClientExtensions.GetHistoricalBarsPagesAsAsyncEnumerable``1(Alpaca.Markets.IHistoricalBarsClient{``0},``0,System.Threading.CancellationToken)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalBarsClient`1.ListHistoricalBarsAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of response pages with items so they can be consumed by the <c>await foreach</c>
            statement on the caller side as sequence of 'batches' instead of sequence of items itself.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalBarsClient`1"/> interface.</param>
            <param name="request">Original historical bars request (with empty next page token).</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalBarsClientExtensions.GetHistoricalBarsMultiPagesAsAsyncEnumerable``1(Alpaca.Markets.IHistoricalBarsClient{``0},``0)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalBarsClient`1.GetHistoricalBarsAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of response pages with items so they can be consumed by the <c>await foreach</c>
            statement on the caller side as sequence of 'batches' instead of sequence of items itself.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalBarsClient`1"/> interface.</param>
            <param name="request">Original historical bars request (with empty next page token).</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalBarsClientExtensions.GetHistoricalBarsMultiPagesAsAsyncEnumerable``1(Alpaca.Markets.IHistoricalBarsClient{``0},``0,System.Threading.CancellationToken)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalBarsClient`1.GetHistoricalBarsAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of response pages with items so they can be consumed by the <c>await foreach</c>
            statement on the caller side as sequence of 'batches' instead of sequence of items itself.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalBarsClient`1"/> interface.</param>
            <param name="request">Original historical bars request (with empty next page token).</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalBarsClientExtensions.GetAverageDailyTradeVolumeAsync``1(Alpaca.Markets.IHistoricalBarsClient{``0},System.String,System.DateTime,System.DateTime)">
            <summary>
            Gets the average trade volume for the given <paramref name="symbol"/> and time interval
            between <paramref name="from"/> date to the <paramref name="into"/> date (inclusive).
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalBarsClient`1"/> interface.</param>
            <param name="symbol">Asset name for the data retrieval.</param>
            <param name="from">Filter data equal to or after this time.</param>
            <param name="into">Filter data equal to or before this time.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>The pair of ADTV value and number of processed day bars.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalBarsClientExtensions.GetAverageDailyTradeVolumeAsync``1(Alpaca.Markets.IHistoricalBarsClient{``0},System.String,System.DateOnly,System.DateOnly)">
            <summary>
            Gets the average trade volume for the given <paramref name="symbol"/> and time interval
            between <paramref name="from"/> date to the <paramref name="into"/> date (inclusive).
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalBarsClient`1"/> interface.</param>
            <param name="symbol">Asset name for the data retrieval.</param>
            <param name="from">Filter data equal to or after this time.</param>
            <param name="into">Filter data equal to or before this time.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>The pair of ADTV value and number of processed day bars.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalBarsClientExtensions.GetAverageDailyTradeVolumeAsync``1(Alpaca.Markets.IHistoricalBarsClient{``0},System.String,System.DateTime,System.DateTime,System.Threading.CancellationToken)">
            <summary>
            Gets the average trade volume for the given <paramref name="symbol"/> and time interval
            between <paramref name="from"/> date to the <paramref name="into"/> date (inclusive).
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalBarsClient`1"/> interface.</param>
            <param name="symbol">Asset name for the data retrieval.</param>
            <param name="from">Filter data equal to or after this time.</param>
            <param name="into">Filter data equal to or before this time.</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>The pair of ADTV value and number of processed day bars.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalBarsClientExtensions.GetAverageDailyTradeVolumeAsync``1(Alpaca.Markets.IHistoricalBarsClient{``0},System.String,System.DateOnly,System.DateOnly,System.Threading.CancellationToken)">
            <summary>
            Gets the average trade volume for the given <paramref name="symbol"/> and time interval
            between <paramref name="from"/> date to the <paramref name="into"/> date (inclusive).
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalBarsClient`1"/> interface.</param>
            <param name="symbol">Asset name for the data retrieval.</param>
            <param name="from">Filter data equal to or after this time.</param>
            <param name="into">Filter data equal to or before this time.</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>The pair of ADTV value and number of processed day bars.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalBarsClientExtensions.GetAverageDailyTradeVolumeAsync``1(Alpaca.Markets.IHistoricalBarsClient{``0},System.String,Alpaca.Markets.IInclusiveTimeInterval)">
            <summary>
            Gets the average trade volume for the given <paramref name="symbol"/> and <paramref name="timeInterval"/>.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalBarsClient`1"/> interface.</param>
            <param name="symbol">Asset name for the data retrieval.</param>
            <param name="timeInterval">Inclusive time interval for the ADTV calculation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>The pair of ADTV value and number of processed day bars.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalBarsClientExtensions.GetAverageDailyTradeVolumeAsync``1(Alpaca.Markets.IHistoricalBarsClient{``0},System.String,Alpaca.Markets.Interval{System.DateOnly})">
            <summary>
            Gets the average trade volume for the given <paramref name="symbol"/> and <paramref name="timeInterval"/>.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalBarsClient`1"/> interface.</param>
            <param name="symbol">Asset name for the data retrieval.</param>
            <param name="timeInterval">Inclusive time interval for the ADTV calculation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>The pair of ADTV value and number of processed day bars.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalBarsClientExtensions.GetAverageDailyTradeVolumeAsync``1(Alpaca.Markets.IHistoricalBarsClient{``0},System.String,Alpaca.Markets.IInclusiveTimeInterval,System.Threading.CancellationToken)">
            <summary>
            Gets the average trade volume for the given <paramref name="symbol"/> and <paramref name="timeInterval"/>.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalBarsClient`1"/> interface.</param>
            <param name="symbol">Asset name for the data retrieval.</param>
            <param name="timeInterval">Inclusive time interval for the ADTV calculation.</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>The pair of ADTV value and number of processed day bars.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalBarsClientExtensions.GetAverageDailyTradeVolumeAsync``1(Alpaca.Markets.IHistoricalBarsClient{``0},System.String,Alpaca.Markets.Interval{System.DateOnly},System.Threading.CancellationToken)">
            <summary>
            Gets the average trade volume for the given <paramref name="symbol"/> and <paramref name="timeInterval"/>.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalBarsClient`1"/> interface.</param>
            <param name="symbol">Asset name for the data retrieval.</param>
            <param name="timeInterval">Inclusive time interval for the ADTV calculation.</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>The pair of ADTV value and number of processed day bars.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalBarsClientExtensions.GetSimpleMovingAverageAsync``1(Alpaca.Markets.IHistoricalBarsClient{``0},``0,System.Int32)">
            <summary>
            Gets the simple moving average values for the given list of <see cref="T:Alpaca.Markets.IBar"/> objects.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalBarsClient`1"/> interface.</param>
            <param name="request">Original historical minute bars request (with empty next page token).</param>
            <param name="window">Size of the moving average window.</param>
            <returns>The list of bars with SMA values for all <see cref="T:Alpaca.Markets.IBar"/> properties.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalBarsClientExtensions.GetSimpleMovingAverageAsync``1(Alpaca.Markets.IHistoricalBarsClient{``0},``0,System.Int32,System.Threading.CancellationToken)">
            <summary>
            Gets the simple moving average values for the given list of <see cref="T:Alpaca.Markets.IBar"/> objects.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalBarsClient`1"/> interface.</param>
            <param name="request">Original historical minute bars request (with empty next page token).</param>
            <param name="window">Size of the moving average window.</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>The list of bars with SMA values for all <see cref="T:Alpaca.Markets.IBar"/> properties.</returns>
        </member>
        <member name="T:Alpaca.Markets.Extensions.HistoricalQuotesClientExtensions">
            <summary>
            Set of extension methods for the <see cref="T:Alpaca.Markets.IHistoricalQuotesClient`1"/> interface.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalQuotesClientExtensions.GetHistoricalQuotesAsAsyncEnumerable``1(Alpaca.Markets.IHistoricalQuotesClient{``0},``0)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalQuotesClient`1.ListHistoricalQuotesAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of items (in form of <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> interface)
            so they can be consumed by the <c>await foreach</c> statement on the caller side.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalQuotesClient`1"/> interface.</param>
            <param name="request">Original historical quotes request (with empty next page token).</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalQuotesClientExtensions.GetHistoricalQuotesAsAsyncEnumerable``1(Alpaca.Markets.IHistoricalQuotesClient{``0},``0,System.Threading.CancellationToken)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalQuotesClient`1.ListHistoricalQuotesAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of items (in form of <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> interface)
            so they can be consumed by the <c>await foreach</c> statement on the caller side.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalQuotesClient`1"/> interface.</param>
            <param name="request">Original historical quotes request (with empty next page token).</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalQuotesClientExtensions.GetHistoricalQuotesDictionaryOfAsyncEnumerable``1(Alpaca.Markets.IHistoricalQuotesClient{``0},``0)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalQuotesClient`1.GetHistoricalQuotesAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of items (in form of dictionary of the <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/>
            interface instances) so they  can be consumed by the <c>await foreach</c> statement on the caller side.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalQuotesClient`1"/> interface.</param>
            <param name="request">Original historical minute bars request (with empty next page token).</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalQuotesClientExtensions.GetHistoricalQuotesDictionaryOfAsyncEnumerable``1(Alpaca.Markets.IHistoricalQuotesClient{``0},``0,System.Threading.CancellationToken)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalQuotesClient`1.GetHistoricalQuotesAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of items (in form of dictionary of the <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/>
            interface instances) so they  can be consumed by the <c>await foreach</c> statement on the caller side.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalQuotesClient`1"/> interface.</param>
            <param name="request">Original historical minute bars request (with empty next page token).</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalQuotesClientExtensions.GetHistoricalQuotesPagesAsAsyncEnumerable``1(Alpaca.Markets.IHistoricalQuotesClient{``0},``0)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalQuotesClient`1.ListHistoricalQuotesAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of response pages with items so they can be consumed by the <c>await foreach</c>
            statement on the caller side as sequence of 'batches' instead of sequence of items itself.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalQuotesClient`1"/> interface.</param>
            <param name="request">Original historical quotes request (with empty next page token).</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalQuotesClientExtensions.GetHistoricalQuotesPagesAsAsyncEnumerable``1(Alpaca.Markets.IHistoricalQuotesClient{``0},``0,System.Threading.CancellationToken)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalQuotesClient`1.ListHistoricalQuotesAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of response pages with items so they can be consumed by the <c>await foreach</c>
            statement on the caller side as sequence of 'batches' instead of sequence of items itself.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalQuotesClient`1"/> interface.</param>
            <param name="request">Original historical quotes request (with empty next page token).</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalQuotesClientExtensions.GetHistoricalQuotesMultiPagesAsAsyncEnumerable``1(Alpaca.Markets.IHistoricalQuotesClient{``0},``0)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalQuotesClient`1.ListHistoricalQuotesAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of response pages with items so they can be consumed by the <c>await foreach</c>
            statement on the caller side as sequence of 'batches' instead of sequence of items itself.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalQuotesClient`1"/> interface.</param>
            <param name="request">Original historical quotes request (with empty next page token).</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalQuotesClientExtensions.GetHistoricalQuotesMultiPagesAsAsyncEnumerable``1(Alpaca.Markets.IHistoricalQuotesClient{``0},``0,System.Threading.CancellationToken)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalQuotesClient`1.ListHistoricalQuotesAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of response pages with items so they can be consumed by the <c>await foreach</c>
            statement on the caller side as sequence of 'batches' instead of sequence of items itself.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalQuotesClient`1"/> interface.</param>
            <param name="request">Original historical quotes request (with empty next page token).</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="T:Alpaca.Markets.Extensions.HistoricalTradesClientExtensions">
            <summary>
            Set of extension methods for the <see cref="T:Alpaca.Markets.IHistoricalTradesClient`1"/> interface.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalTradesClientExtensions.GetHistoricalTradesAsAsyncEnumerable``1(Alpaca.Markets.IHistoricalTradesClient{``0},``0)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalTradesClient`1.ListHistoricalTradesAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of items (in form of <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> interface)
            so they can be consumed by the <c>await foreach</c> statement on the caller side.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalTradesClient`1"/> interface.</param>
            <param name="request">Original historical trades request (with empty next page token).</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalTradesClientExtensions.GetHistoricalTradesAsAsyncEnumerable``1(Alpaca.Markets.IHistoricalTradesClient{``0},``0,System.Threading.CancellationToken)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalTradesClient`1.ListHistoricalTradesAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of items (in form of <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/> interface)
            so they can be consumed by the <c>await foreach</c> statement on the caller side.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalTradesClient`1"/> interface.</param>
            <param name="request">Original historical trades request (with empty next page token).</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalTradesClientExtensions.GetHistoricalTradesDictionaryOfAsyncEnumerable``1(Alpaca.Markets.IHistoricalTradesClient{``0},``0)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalTradesClient`1.GetHistoricalTradesAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of items (in form of dictionary of the <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/>
            interface instances) so they  can be consumed by the <c>await foreach</c> statement on the caller side.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalTradesClient`1"/> interface.</param>
            <param name="request">Original historical minute bars request (with empty next page token).</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalTradesClientExtensions.GetHistoricalTradesDictionaryOfAsyncEnumerable``1(Alpaca.Markets.IHistoricalTradesClient{``0},``0,System.Threading.CancellationToken)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalTradesClient`1.GetHistoricalTradesAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of items (in form of dictionary of the <see cref="T:System.Collections.Generic.IAsyncEnumerable`1"/>
            interface instances) so they  can be consumed by the <c>await foreach</c> statement on the caller side.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalTradesClient`1"/> interface.</param>
            <param name="request">Original historical minute bars request (with empty next page token).</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalTradesClientExtensions.GetHistoricalTradesPagesAsAsyncEnumerable``1(Alpaca.Markets.IHistoricalTradesClient{``0},``0)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalTradesClient`1.ListHistoricalTradesAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of response pages with items so they can be consumed by the <c>await foreach</c>
            statement on the caller side as sequence of 'batches' instead of sequence of items itself.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalTradesClient`1"/> interface.</param>
            <param name="request">Original historical trades request (with empty next page token).</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalTradesClientExtensions.GetHistoricalTradesPagesAsAsyncEnumerable``1(Alpaca.Markets.IHistoricalTradesClient{``0},``0,System.Threading.CancellationToken)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalTradesClient`1.ListHistoricalTradesAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of response pages with items so they can be consumed by the <c>await foreach</c>
            statement on the caller side as sequence of 'batches' instead of sequence of items itself.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalTradesClient`1"/> interface.</param>
            <param name="request">Original historical trades request (with empty next page token).</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalTradesClientExtensions.GetHistoricalTradesMultiPagesAsAsyncEnumerable``1(Alpaca.Markets.IHistoricalTradesClient{``0},``0)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalTradesClient`1.ListHistoricalTradesAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of response pages with items so they can be consumed by the <c>await foreach</c>
            statement on the caller side as sequence of 'batches' instead of sequence of items itself.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalTradesClient`1"/> interface.</param>
            <param name="request">Original historical trades request (with empty next page token).</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.HistoricalTradesClientExtensions.GetHistoricalTradesMultiPagesAsAsyncEnumerable``1(Alpaca.Markets.IHistoricalTradesClient{``0},``0,System.Threading.CancellationToken)">
            <summary>
            Gets all items provided by <see cref="M:Alpaca.Markets.IHistoricalTradesClient`1.ListHistoricalTradesAsync(`0,System.Threading.CancellationToken)"/> in pagination
            mode as single stream of response pages with items so they can be consumed by the <c>await foreach</c>
            statement on the caller side as sequence of 'batches' instead of sequence of items itself.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IHistoricalTradesClient`1"/> interface.</param>
            <param name="request">Original historical trades request (with empty next page token).</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="request"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="T:Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions">
            <summary>
            Helper extension method for creating special version of the <see cref="T:Alpaca.Markets.IAlpacaCryptoStreamingClient"/>
            implementation with automatic reconnection (with configurable delay and number of attempts) support.
            </summary>
            <summary>
            Set of extension methods for the <see cref="T:Alpaca.Markets.IAlpacaCryptoStreamingClient"/> interface.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.WithReconnect(Alpaca.Markets.IAlpacaCryptoStreamingClient)">
            <summary>
            Wraps instance of <see cref="T:Alpaca.Markets.IAlpacaCryptoStreamingClient"/> into the helper class
            with automatic reconnection support and provide optional reconnection parameters.
            </summary>
            <param name="client">Original streaming client for wrapping.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> argument is <c>null</c>.
            </exception>
            <returns>Wrapped version of the <paramref name="client"/> object with reconnect.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.WithReconnect(Alpaca.Markets.IAlpacaCryptoStreamingClient,Alpaca.Markets.Extensions.ReconnectionParameters)">
            <summary>
            Wraps instance of <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> into the helper class
            with automatic reconnection support with the default reconnection parameters.
            </summary>
            <param name="client">Original streaming client for wrapping.</param>
            <param name="parameters">Reconnection parameters.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="parameters"/> argument is <c>null</c>.
            </exception>
            <returns>Wrapped version of the <paramref name="client"/> object with reconnect.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.GetOrderBookSubscription(Alpaca.Markets.IAlpacaCryptoStreamingClient,System.String[])">
            <summary>
            Gets the order book updates subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaCryptoStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for order book updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.GetOrderBookSubscription(Alpaca.Markets.IAlpacaCryptoStreamingClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the order book updates subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaCryptoStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for order book updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.SubscribeOrderBookAsync(Alpaca.Markets.IAlpacaCryptoStreamingClient,System.String)">
            <summary>
            Gets the order book updates subscription for the <paramref name="symbol"/> asset. This subscription is
            returned with pending subscription state and will be unsubscribed on disposing so you can use it
            inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaCryptoStreamingClient"/> interface.</param>
            <param name="symbol">Alpaca asset name for order book updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.SubscribeOrderBookAsync(Alpaca.Markets.IAlpacaCryptoStreamingClient,System.String[])">
            <summary>
            Gets the order book updates subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaCryptoStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for order book updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaCryptoStreamingClientExtensions.SubscribeOrderBookAsync(Alpaca.Markets.IAlpacaCryptoStreamingClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the order book updates subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaCryptoStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for order book updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="T:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions">
            <summary>
            Helper extension method for creating special version of the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/>
            implementation with automatic reconnection (with configurable delay and number of attempts) support.
            </summary>
            <summary>
            Set of extension methods for the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.WithReconnect(Alpaca.Markets.IAlpacaDataStreamingClient)">
            <summary>
            Wraps instance of <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> into the helper class
            with automatic reconnection support and provide optional reconnection parameters.
            </summary>
            <param name="client">Original streaming client for wrapping.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> argument is <c>null</c>.
            </exception>
            <returns>Wrapped version of the <paramref name="client"/> object with reconnect.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.WithReconnect(Alpaca.Markets.IAlpacaDataStreamingClient,Alpaca.Markets.Extensions.ReconnectionParameters)">
            <summary>
            Wraps instance of <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> into the helper class
            with automatic reconnection support with the default reconnection parameters.
            </summary>
            <param name="client">Original streaming client for wrapping.</param>
            <param name="parameters">Reconnection parameters.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="parameters"/> argument is <c>null</c>.
            </exception>
            <returns>Wrapped version of the <paramref name="client"/> object with reconnect.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.GetStatusSubscription(Alpaca.Markets.IAlpacaDataStreamingClient,System.String[])">
            <summary>
            Gets the trading statuses updates subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute aggregate (bar) updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.GetStatusSubscription(Alpaca.Markets.IAlpacaDataStreamingClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the trading statuses subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute aggregate (bar) updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.GetCorrectionSubscription(Alpaca.Markets.IAlpacaDataStreamingClient,System.String[])">
            <summary>
            Gets the trade corrections subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute aggregate (bar) updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.GetCorrectionSubscription(Alpaca.Markets.IAlpacaDataStreamingClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the trade corrections subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute aggregate (bar) updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.GetCancellationSubscription(Alpaca.Markets.IAlpacaDataStreamingClient,System.String[])">
            <summary>
            Gets the trade cancellation subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute aggregate (bar) updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.GetCancellationSubscription(Alpaca.Markets.IAlpacaDataStreamingClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the trade cancellation subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute aggregate (bar) updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.GetLimitUpLimitDownSubscription(Alpaca.Markets.IAlpacaDataStreamingClient,System.String[])">
            <summary>
            Gets the LULD (limit up / limit down) updates subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute aggregate (bar) updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.GetLimitUpLimitDownSubscription(Alpaca.Markets.IAlpacaDataStreamingClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the LULD (limit up / limit down) subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute aggregate (bar) updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeStatusAsync(Alpaca.Markets.IAlpacaDataStreamingClient,System.String)">
            <summary>
            Gets the trading status updates subscription for the <paramref name="symbol"/> asset. This subscription is
            returned with pending subscription state and will be unsubscribed on disposing so you can use it
            inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface.</param>
            <param name="symbol">Alpaca asset name for minute bar updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeStatusAsync(Alpaca.Markets.IAlpacaDataStreamingClient,System.String[])">
            <summary>
            Gets the trading status updates subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute bar updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeStatusAsync(Alpaca.Markets.IAlpacaDataStreamingClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the trade corrections updates subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute bar updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeCorrectionAsync(Alpaca.Markets.IAlpacaDataStreamingClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the trade corrections updates subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute bar updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeCorrectionAsync(Alpaca.Markets.IAlpacaDataStreamingClient,System.String)">
            <summary>
            Gets the trade corrections subscription for the <paramref name="symbol"/> asset. This subscription is
            returned with pending subscription state and will be unsubscribed on disposing so you can use it
            inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface.</param>
            <param name="symbol">Alpaca asset name for minute bar updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeCorrectionAsync(Alpaca.Markets.IAlpacaDataStreamingClient,System.String[])">
            <summary>
            Gets the trade corrections updates subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute bar updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeCancellationAsync(Alpaca.Markets.IAlpacaDataStreamingClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the trade cancellations updates subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute bar updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeCancellationAsync(Alpaca.Markets.IAlpacaDataStreamingClient,System.String)">
            <summary>
            Gets the trade cancellations subscription for the <paramref name="symbol"/> asset. This subscription is
            returned with pending subscription state and will be unsubscribed on disposing so you can use it
            inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface.</param>
            <param name="symbol">Alpaca asset name for minute bar updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeCancellationAsync(Alpaca.Markets.IAlpacaDataStreamingClient,System.String[])">
            <summary>
            Gets the trade cancellations updates subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute bar updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeLimitUpLimitDownAsync(Alpaca.Markets.IAlpacaDataStreamingClient,System.String)">
            <summary>
            Gets the LULD (limit up / limit down) subscription for the <paramref name="symbol"/> asset. This subscription is
            returned with pending subscription state and will be unsubscribed on disposing so you can use it
            inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface.</param>
            <param name="symbol">Alpaca asset name for minute bar updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeLimitUpLimitDownAsync(Alpaca.Markets.IAlpacaDataStreamingClient,System.String[])">
            <summary>
            Gets the LULD (limit up / limit down) subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute bar updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataStreamingClientExtensions.SubscribeLimitUpLimitDownAsync(Alpaca.Markets.IAlpacaDataStreamingClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the LULD (limit up / limit down) subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute bar updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="T:Alpaca.Markets.Extensions.AlpacaNewsStreamingClientExtensions">
            <summary>
            Helper extension method for creating special version of the <see cref="T:Alpaca.Markets.IAlpacaNewsStreamingClient"/>
            implementation with automatic reconnection (with configurable delay and number of attempts) support.
            </summary>
            <summary>
            Set of extension methods for the <see cref="T:Alpaca.Markets.IAlpacaNewsStreamingClient"/> interface.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaNewsStreamingClientExtensions.WithReconnect(Alpaca.Markets.IAlpacaNewsStreamingClient)">
            <summary>
            Wraps instance of <see cref="T:Alpaca.Markets.IAlpacaNewsStreamingClient"/> into the helper class
            with automatic reconnection support and provide optional reconnection parameters.
            </summary>
            <param name="client">Original streaming client for wrapping.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> argument is <c>null</c>.
            </exception>
            <returns>Wrapped version of the <paramref name="client"/> object with reconnect.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaNewsStreamingClientExtensions.WithReconnect(Alpaca.Markets.IAlpacaNewsStreamingClient,Alpaca.Markets.Extensions.ReconnectionParameters)">
            <summary>
            Wraps instance of <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> into the helper class
            with automatic reconnection support with the default reconnection parameters.
            </summary>
            <param name="client">Original streaming client for wrapping.</param>
            <param name="parameters">Reconnection parameters.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="parameters"/> argument is <c>null</c>.
            </exception>
            <returns>Wrapped version of the <paramref name="client"/> object with reconnect.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaNewsStreamingClientExtensions.GetNewsSubscription(Alpaca.Markets.IAlpacaNewsStreamingClient,System.String[])">
            <summary>
            Gets the news articles updates subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaNewsStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for news articles updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaNewsStreamingClientExtensions.GetNewsSubscription(Alpaca.Markets.IAlpacaNewsStreamingClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the news articles updates subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaNewsStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for news articles updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaNewsStreamingClientExtensions.SubscribeNewsAsync(Alpaca.Markets.IAlpacaNewsStreamingClient,System.String)">
            <summary>
            Gets the news articles updates subscription for the <paramref name="symbol"/> asset. This subscription is
            returned with pending subscription state and will be unsubscribed on disposing so you can use it
            inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaNewsStreamingClient"/> interface.</param>
            <param name="symbol">Alpaca asset name for news articles updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaNewsStreamingClientExtensions.SubscribeNewsAsync(Alpaca.Markets.IAlpacaNewsStreamingClient,System.String[])">
            <summary>
            Gets the news articles updates subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaNewsStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for news articles updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaNewsStreamingClientExtensions.SubscribeNewsAsync(Alpaca.Markets.IAlpacaNewsStreamingClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the news articles updates subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IAlpacaNewsStreamingClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for news articles updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="T:Alpaca.Markets.Extensions.AlpacaStreamingClientExtensions">
            <summary>
            Helper extension method for creating special version of the <see cref="T:Alpaca.Markets.IAlpacaStreamingClient"/>
            implementation with automatic reconnection (with configurable delay and number of attempts) support.
            </summary>
        </member>
        <member name="E:Alpaca.Markets.Extensions.AlpacaStreamingClientExtensions.ClientWithReconnection.OnTradeUpdate">
            <inheritdoc cref="E:Alpaca.Markets.IAlpacaStreamingClient.OnTradeUpdate"/>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaStreamingClientExtensions.WithReconnect(Alpaca.Markets.IAlpacaStreamingClient)">
            <summary>
            Wraps instance of <see cref="T:Alpaca.Markets.IAlpacaStreamingClient"/> into the helper class
            with automatic reconnection support with the default reconnection parameters.
            </summary>
            <param name="client">Original streaming client for wrapping.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> argument is <c>null</c>.
            </exception>
            <returns>Wrapped version of the <paramref name="client"/> object with reconnect.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaStreamingClientExtensions.WithReconnect(Alpaca.Markets.IAlpacaStreamingClient,Alpaca.Markets.Extensions.ReconnectionParameters)">
            <summary>
            Wraps instance of <see cref="T:Alpaca.Markets.IAlpacaStreamingClient"/> into the helper class
            with automatic reconnection support and provide optional reconnection parameters.
            </summary>
            <param name="client">Original streaming client for wrapping.</param>
            <param name="parameters">Reconnection parameters (or default if missing).</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="parameters"/> argument is <c>null</c>.
            </exception>
            <returns>Wrapped version of the <paramref name="client"/> object with reconnect.</returns>
        </member>
        <member name="T:Alpaca.Markets.Extensions.ReconnectionParameters">
            <summary>
            Automatic reconnection parameters for streaming client with auto-reconnection support.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.Extensions.ReconnectionParameters.MaxReconnectionAttempts">
            <summary>
            Gets or sets the maximum number of reconnection attempts in case of a connection closing.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.Extensions.ReconnectionParameters.MinReconnectionDelay">
            <summary>
            Gets or sets the minimum delay between different reconnection attempts.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.Extensions.ReconnectionParameters.MaxReconnectionDelay">
            <summary>
            Gets or sets the maximum delay between repeated reconnection attempts.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.Extensions.ReconnectionParameters.RetryWebSocketErrorCodes">
            <summary>
            Gets set of web socket error codes which when received should initiate a retry of the affected request.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.Extensions.ReconnectionParameters.Default">
            <summary>
            Gets the default reconnection parameters - 5 attempts with delay from 1 to 5 seconds.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.Extensions.EnumerableExtensions">
            <summary>
            Set of extensions methods for obtaining simple statistical functions from bars list.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Extensions.EnumerableExtensions.GetAverageDailyTradeVolumeAsync(System.Collections.Generic.IAsyncEnumerable{Alpaca.Markets.IBar})">
            <summary>
            Gets the average trade volume for the given list of <see cref="T:Alpaca.Markets.IBar"/> objects.
            </summary>
            <param name="bars">Target list of the <see cref="T:Alpaca.Markets.IBar"/> instances.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="bars"/> argument is <c>null</c>.
            </exception>
            <returns>The pair of ADTV value and number of processed day bars.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.EnumerableExtensions.GetAverageDailyTradeVolumeAsync(System.Collections.Generic.IAsyncEnumerable{Alpaca.Markets.IBar},System.Threading.CancellationToken)">
            <summary>
            Gets the average trade volume for the given list of <see cref="T:Alpaca.Markets.IBar"/> objects.
            </summary>
            <param name="bars">Target list of the <see cref="T:Alpaca.Markets.IBar"/> instances.</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="bars"/> argument is <c>null</c>.
            </exception>
            <returns>The pair of ADTV value and number of processed day bars.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.EnumerableExtensions.GetAverageDailyTradeVolume(System.Collections.Generic.IEnumerable{Alpaca.Markets.IBar})">
            <summary>
            Gets the average trade volume for the given list of <see cref="T:Alpaca.Markets.IBar"/> objects.
            </summary>
            <param name="bars">Target list of the <see cref="T:Alpaca.Markets.IBar"/> instances.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="bars"/> argument is <c>null</c>.
            </exception>
            <returns>The pair of ADTV value and number of processed day bars.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.EnumerableExtensions.GetSimpleMovingAverageAsync(System.Collections.Generic.IAsyncEnumerable{Alpaca.Markets.IBar},System.Int32)">
            <summary>
            Gets the simple moving average values for the given list of <see cref="T:Alpaca.Markets.IBar"/> objects.
            </summary>
            <param name="bars">Target list of the <see cref="T:Alpaca.Markets.IBar"/> instances.</param>
            <param name="window">Size of the moving average window.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="bars"/> argument is <c>null</c>.
            </exception>
            <returns>The list of bars with SMA values for all <see cref="T:Alpaca.Markets.IBar"/> properties.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.EnumerableExtensions.GetSimpleMovingAverageAsync(System.Collections.Generic.IAsyncEnumerable{Alpaca.Markets.IBar},System.Int32,System.Threading.CancellationToken)">
            <summary>
            Gets the simple moving average values for the given list of <see cref="T:Alpaca.Markets.IBar"/> objects.
            </summary>
            <param name="bars">Target list of the <see cref="T:Alpaca.Markets.IBar"/> instances.</param>
            <param name="window">Size of the moving average window.</param>
            <param name="cancellationToken">
            A cancellation token that can be used by other objects or threads to receive notice of cancellation.
            </param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="bars"/> argument is <c>null</c>.
            </exception>
            <returns>The list of bars with SMA values for all <see cref="T:Alpaca.Markets.IBar"/> properties.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.EnumerableExtensions.GetSimpleMovingAverage(System.Collections.Generic.IEnumerable{Alpaca.Markets.IBar},System.Int32)">
            <summary>
            Gets the simple moving average values for the given list of <see cref="T:Alpaca.Markets.IBar"/> objects.
            </summary>
            <param name="bars">Target list of the <see cref="T:Alpaca.Markets.IBar"/> instances.</param>
            <param name="window">Size of the moving average window.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="bars"/> argument is <c>null</c>.
            </exception>
            <returns>The list of bars with SMA values for all <see cref="T:Alpaca.Markets.IBar"/> properties.</returns>
        </member>
        <member name="T:Alpaca.Markets.Extensions.AlpacaDataSubscriptionExtensions">
            <summary>
            Set of extension methods for the <see cref="T:Alpaca.Markets.IAlpacaDataSubscription`1"/> interface.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataSubscriptionExtensions.AsAsyncEnumerable``1(Alpaca.Markets.IAlpacaDataSubscription{``0})">
            <summary>
            Converts <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event into
            asynchronous enumerable (reactive event consuming style) using unbound channel.
            </summary>
            <param name="subscription">Original subscription object for wrapping.</param>
            <typeparam name="TItem">Type of streaming item provided via <paramref name="subscription"/> object.</typeparam>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="subscription"/> argument is <c>null</c>.
            </exception>
            <returns>Stream of items received from server in form of async enumerable.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.AlpacaDataSubscriptionExtensions.AsAsyncEnumerable``1(Alpaca.Markets.IAlpacaDataSubscription{``0},System.Threading.CancellationToken)">
            <summary>
            Converts <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event into
            asynchronous enumerable (reactive event consuming style) using unbound channel.
            </summary>
            <param name="subscription">Original subscription object for wrapping.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <typeparam name="TItem">Type of streaming item provided via <paramref name="subscription"/> object.</typeparam>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="subscription"/> argument is <c>null</c>.
            </exception>
            <returns>Stream of items received from server in form of async enumerable.</returns>
        </member>
        <member name="T:Alpaca.Markets.Extensions.IDisposableAlpacaDataSubscription`1">
            <summary>
            Extends the <see cref="T:Alpaca.Markets.IAlpacaDataSubscription`1"/> interface with disposing support
            so caller can use instance of this interface in <c>using</c> and <c>await using</c> statements.
            </summary>
            <typeparam name="TItem"></typeparam>
        </member>
        <member name="T:Alpaca.Markets.Extensions.StreamingClientExtensions">
            <summary>
            Set of extension methods for the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.GetTradeSubscription(Alpaca.Markets.IStreamingDataClient,System.String[])">
            <summary>
            Gets the trade updates subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for trade updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.GetTradeSubscription(Alpaca.Markets.IStreamingDataClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the trade updates subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for trade updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.GetQuoteSubscription(Alpaca.Markets.IStreamingDataClient,System.String[])">
            <summary>
            Gets the quote updates subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for quote updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.GetQuoteSubscription(Alpaca.Markets.IStreamingDataClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the quote updates subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for quote updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.GetMinuteBarSubscription(Alpaca.Markets.IStreamingDataClient,System.String[])">
            <summary>
            Gets the minute aggregate (bar) updates subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute aggregate (bar) updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.GetMinuteBarSubscription(Alpaca.Markets.IStreamingDataClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the minute aggregate (bar) updates subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute aggregate (bar) updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.GetDailyBarSubscription(Alpaca.Markets.IStreamingDataClient,System.String[])">
            <summary>
            Gets the daily aggregate (bar) updates subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute aggregate (bar) updates subscribing.</param>
            <returns>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.GetDailyBarSubscription(Alpaca.Markets.IStreamingDataClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the updated aggregate (bar) updates subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute aggregate (bar) updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.GetUpdatedBarSubscription(Alpaca.Markets.IStreamingDataClient,System.String[])">
            <summary>
            Gets the updated aggregate (bar) updates subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute aggregate (bar) updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.GetUpdatedBarSubscription(Alpaca.Markets.IStreamingDataClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the daily aggregate (bar) updates subscription for the all assets from the <paramref name="symbols"/> list.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute aggregate (bar) updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.SubscribeTradeAsync(Alpaca.Markets.IStreamingDataClient,System.String)">
            <summary>
            Gets the trade updates subscription for the <paramref name="symbol"/> asset. This subscription is
            returned with pending subscription state and will be unsubscribed on disposing so you can use it
            inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbol">Alpaca asset name for trade updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.SubscribeTradeAsync(Alpaca.Markets.IStreamingDataClient,System.String[])">
            <summary>
            Gets the trade updates subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for trade updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.SubscribeTradeAsync(Alpaca.Markets.IStreamingDataClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the trade updates subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for trade updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.SubscribeQuoteAsync(Alpaca.Markets.IStreamingDataClient,System.String)">
            <summary>
            Gets the quote updates subscription for the <paramref name="symbol"/> asset. This subscription is
            returned with pending subscription state and will be unsubscribed on disposing so you can use it
            inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbol">Alpaca asset name for quote updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.SubscribeQuoteAsync(Alpaca.Markets.IStreamingDataClient,System.String[])">
            <summary>
            Gets the quote updates subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for quote updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.SubscribeQuoteAsync(Alpaca.Markets.IStreamingDataClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the quote updates subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for quote updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.SubscribeMinuteBarAsync(Alpaca.Markets.IStreamingDataClient,System.String)">
            <summary>
            Gets the minute bar updates subscription for the <paramref name="symbol"/> asset. This subscription is
            returned with pending subscription state and will be unsubscribed on disposing so you can use it
            inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbol">Alpaca asset name for minute bar updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.SubscribeMinuteBarAsync(Alpaca.Markets.IStreamingDataClient,System.String[])">
            <summary>
            Gets the minute bar updates subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute bar updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.SubscribeMinuteBarAsync(Alpaca.Markets.IStreamingDataClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the minute bar updates subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute bar updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.SubscribeDailyBarAsync(Alpaca.Markets.IStreamingDataClient,System.String)">
            <summary>
            Gets the daily bar updates subscription for the <paramref name="symbol"/> asset. This subscription is
            returned with pending subscription state and will be unsubscribed on disposing so you can use it
            inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbol">Alpaca asset name for minute bar updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.SubscribeDailyBarAsync(Alpaca.Markets.IStreamingDataClient,System.String[])">
            <summary>
            Gets the daily bar updates subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute bar updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.SubscribeDailyBarAsync(Alpaca.Markets.IStreamingDataClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the daily bar updates subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute bar updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.SubscribeUpdatedBarAsync(Alpaca.Markets.IStreamingDataClient,System.String)">
            <summary>
            Gets the updated bar updates subscription for the <paramref name="symbol"/> asset. This subscription is
            returned with pending subscription state and will be unsubscribed on disposing so you can use it
            inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbol">Alpaca asset name for minute bar updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.SubscribeUpdatedBarAsync(Alpaca.Markets.IStreamingDataClient,System.String[])">
            <summary>
            Gets the updated bar updates subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute bar updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingClientExtensions.SubscribeUpdatedBarAsync(Alpaca.Markets.IStreamingDataClient,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the updated bar updates subscription for all assets from the <paramref name="symbols"/> list.
            This subscription is returned with pending subscription state and will be unsubscribed on disposing
            so you can use it inside the <c>using</c> or <c>await using</c> statements for more clear resource management.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="symbols">Alpaca asset names list (non-empty) for minute bar updates subscribing.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="T:Alpaca.Markets.Extensions.StreamingDataClientExtensions">
            <summary>
            Set of extension methods for the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingDataClientExtensions.SubscribeAsync(Alpaca.Markets.IStreamingDataClient,Alpaca.Markets.IAlpacaDataSubscription[])">
            <summary>
            Subscribes several <paramref name="subscriptions"/> objects for receiving data from the server.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="subscriptions">List of subscription targets - assets and update type holders.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="subscriptions"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.Extensions.StreamingDataClientExtensions.UnsubscribeAsync(Alpaca.Markets.IStreamingDataClient,Alpaca.Markets.IAlpacaDataSubscription[])">
            <summary>
            Unsubscribes several <paramref name="subscriptions"/> objects for receiving data from the server.
            </summary>
            <param name="client">Target instance of the <see cref="T:Alpaca.Markets.IStreamingDataClient"/> interface.</param>
            <param name="subscriptions">List of subscription targets - assets and update type holders.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="client"/> or <paramref name="subscriptions"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="T:Alpaca.Markets.Extensions.CalendarExtensions">
            <summary>
            Set of extension methods for the <see cref="T:Alpaca.Markets.ICalendar"/> interface.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Extensions.CalendarExtensions.AsIntervalUtc(Alpaca.Markets.ICalendar)">
            <summary>
            Converts the <see cref="T:Alpaca.Markets.ICalendar"/> open/close times into the
            <see cref="T:Alpaca.Markets.Interval`1"/> instance for using in requests.
            </summary>
            <param name="calendar">The source open/close times information.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="calendar"/> argument is <c>null</c>.
            </exception>
            <returns>The inclusive time interval constructed from the <paramref name="calendar"/> data.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.CalendarExtensions.AsInclusiveTimeIntervalUtc(Alpaca.Markets.ICalendar)">
            <summary>
            Converts the <see cref="T:Alpaca.Markets.ICalendar"/> open/close times into the
            <see cref="T:Alpaca.Markets.IInclusiveTimeInterval"/> instance for using in requests.
            </summary>
            <param name="calendar">The source open/close times information.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="calendar"/> argument is <c>null</c>.
            </exception>
            <returns>The inclusive time interval constructed from the <paramref name="calendar"/> data.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.CalendarExtensions.AsExclusiveTimeIntervalUtc(Alpaca.Markets.ICalendar)">
            <summary>
            Converts the <see cref="T:Alpaca.Markets.ICalendar"/> open/close times into the
            <see cref="T:Alpaca.Markets.IExclusiveTimeInterval"/> instance for using in requests.
            </summary>
            <param name="calendar">The source open/close times information.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="calendar"/> argument is <c>null</c>.
            </exception>
            <returns>The exclusive time interval constructed from the <paramref name="calendar"/> data.</returns>
        </member>
    </members>
</doc>
