<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Alpaca.Markets</name>
    </assembly>
    <members>
        <member name="T:System.Runtime.CompilerServices.IsExternalInit">
            <summary>
                Reserved to be used by the compiler for tracking metadata.
                This class should not be used by developers in source code.
            </summary>
            <remarks>
                This definition is provided by the <i>IsExternalInit</i> NuGet package (https://www.nuget.org/packages/IsExternalInit).
                Please see https://github.com/manuelroemer/IsExternalInit for more information.
            </remarks>
        </member>
        <member name="E:Alpaca.Markets.AlpacaStreamingClient.OnTradeUpdate">
            <inheritdoc cref="E:Alpaca.Markets.IAlpacaStreamingClient.OnTradeUpdate"/>
        </member>
        <member name="T:Alpaca.Markets.OAuthKey">
            <summary>
            OAuth key for Alpaca API authentication.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.OAuthKey.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.OAuthKey"/> object.
            </summary>
            <param name="value">OAuth key.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="T:Alpaca.Markets.SecretKey">
            <summary>
            Secret API key for Alpaca API authentication.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.SecretKey.#ctor(System.String,System.String)">
            <summary>
            Creates a new instance of <see cref="T:Alpaca.Markets.SecretKey"/> object.
            </summary>
            <param name="keyId">Secret API key identifier.</param>
            <param name="value">Secret API key value.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="keyId"/> or <paramref name="value"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="T:Alpaca.Markets.SecurityKey">
            <summary>
            Base class for 'security key' abstraction.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.SecurityKey.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.SecurityKey"/> object.
            </summary>
            <param name="value">Security key value.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="value"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="T:Alpaca.Markets.AccountActivityType">
            <summary>
            Types of account activities
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.Fill">
            <summary>
            Order fills (both partial and full fills)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.Transaction">
            <summary>
            Cash transactions (both <see cref="F:Alpaca.Markets.AccountActivityType.CashDeposit"/> and <see cref="F:Alpaca.Markets.AccountActivityType.CashWithdrawal"/>)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.Miscellaneous">
            <summary>
            Miscellaneous or rarely used activity types (All types except those in
            <see cref="F:Alpaca.Markets.AccountActivityType.Transaction"/>, <see cref="F:Alpaca.Markets.AccountActivityType.Dividend"/>, or <see cref="F:Alpaca.Markets.AccountActivityType.Fill"/>)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.ACATCash">
            <summary>
            ACATS IN/OUT (Cash)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.ACATSecurities">
            <summary>
            ACATS IN/OUT (Securities)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.CashDeposit">
            <summary>
            Cash deposit (+)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.CashWithdrawal">
            <summary>
            Cash withdrawal (-)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.Dividend">
            <summary>
            Dividends
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.DividendCapitalGainsLongTerm">
            <summary>
            Dividend (capital gains long term)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.DividendCapitalGainsShortTerm">
            <summary>
            Dividend (capital gain short term)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.DividendFee">
            <summary>
            Dividend fee
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.DividendForeignTaxWithheld">
            <summary>
            Dividend adjusted (Foreign Tax Withheld)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.DividendNRAWithheld">
            <summary>
            Dividend adjusted (NRA Withheld)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.DividendReturnOfCapital">
            <summary>
            Dividend return of capital
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.DividendTefraWithheld">
            <summary>
            Dividend adjusted (Tefra Withheld)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.DividendTaxExempt">
            <summary>
            Dividend (tax exempt)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.Interest">
            <summary>
            Interest (credit/margin)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.InterestNRAWithheld">
            <summary>
            Interest adjusted (NRA Withheld)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.InterestTefraWithheld">
            <summary>
            Interest adjusted (Tefra Withheld)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.JournalEntry">
            <summary>
            Journal entry
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.JournalEntryCash">
            <summary>
            Journal entry (cash)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.JournalEntryStock">
            <summary>
            Journal entry (stock)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.MergerAcquisition">
            <summary>
            Merger/Acquisition
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.NameChange">
            <summary>
            Name change
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.PassThruCharge">
            <summary>
            Pass Thru Charge
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.PassThruRebate">
            <summary>
            Pass Thru Rebate
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.Reorg">
            <summary>
            Reorganization
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.SymbolChange">
            <summary>
            Symbol change
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.StockSpinoff">
            <summary>
            Stock spinoff
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.StockSplit">
            <summary>
            Stock split
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.RefTafFee">
            <summary>
            REG/TAF fees
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.OptionAssignment">
            <summary>
            Option assignment
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.OptionExpiration">
            <summary>
            Option expiration
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.OptionExercise">
            <summary>
            Option exercise
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.OptionTrade">
            <summary>
            Option trade
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.FeeInUsd">
            <summary>
            Fee denominated in USD
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.CryptoFee">
            <summary>
            Crypto Fee
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountActivityType.Unknown">
            <summary>
            Unknown account activity type (i.e. one not supported by this version of SDK).
            </summary>
        </member>
        <member name="T:Alpaca.Markets.AccountStatus">
            <summary>
            User account status in Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.Onboarding">
            <summary>
            Account opened but not verified.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.SubmissionFailed">
            <summary>
            Missed important information.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.Submitted">
            <summary>
            Additional information added.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.AccountUpdated">
            <summary>
            Account data updated.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.ApprovalPending">
            <summary>
            Approval request sent.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.Active">
            <summary>
            Account approved and working.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.Rejected">
            <summary>
            Account approval rejected.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.Disabled">
            <summary>
            Account disabled.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.DisablePending">
            <summary>
            Disable request sent.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.Approved">
            <summary>
            Account approved but still not active.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.Inactive">
            <summary>
            Account approved but not active.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.Edited">
            <summary>
            Application was edited (e.g. to match info from uploaded docs).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.ActionRequired">
            <summary>
            Application requires manual action.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.AccountClosed">
            <summary>
            Account is closed.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AccountStatus.PaperOnly">
            <summary>
            Account approved only for paper trading.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.Adjustment">
            <summary>
            Supported bar corporate action adjustment types for Alpaca Data API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Adjustment.Nothing">
            <summary>
            Raw data - no adjustment.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Adjustment.SplitsOnly">
            <summary>
            Stock split adjustments.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Adjustment.DividendsOnly">
            <summary>
            Stock dividend adjustments.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Adjustment.SplitsAndDividends">
            <summary>
            Stock splits and dividend adjustments.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.AssetAttributes">
            <summary>
            Unique asset characteristics for Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AssetAttributes.Unknown">
            <summary>
            Unknown asset attribute.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AssetAttributes.PtpNoException">
            <summary>
            PTP asset accepting orders without exception.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AssetAttributes.PtpWithException">
            <summary>
            PTP asset accepting orders with exception.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AssetAttributes.Ipo">
            <summary>
            IPO asset, only limit orders are allowed prior to an IPO being traded on secondary market
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AssetAttributes.OptionsEnabled">
            <summary>
            Asset supports options trading.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AssetAttributes.FractionalAtExtended">
            <summary>
            Asset supports fractional trading at extended hours.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.AssetClass">
            <summary>
            Supported asset classes for Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AssetClass.UsEquity">
            <summary>
            US equity asset class.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AssetClass.Crypto">
            <summary>
            Cryptocurrency asset class.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AssetClass.UsOption">
            <summary>
            US option asset class.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.AssetStatus">
            <summary>
            Single asset status in Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AssetStatus.Active">
            <summary>
            Active asset.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AssetStatus.Inactive">
            <summary>
            Inactive asset.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AssetStatus.Delisted">
            <summary>
            Delisted asset.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.AuthStatus">
            <summary>
            Authorization status for Alpaca streaming API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AuthStatus.Authorized">
            <summary>
            Client successfully authorized.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AuthStatus.Unauthorized">
            <summary>
            Client is not authorized.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.AuthStatus.TooManyConnections">
            <summary>
            Connection limit exceeded.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.BarTimeFrame">
            <summary>
            Supported bar duration for Alpaca Data API.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.BarTimeFrame.#ctor(System.Int32,Alpaca.Markets.BarTimeFrameUnit)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.BarTimeFrame"/> object.
            </summary>
            <param name="value">Duration value in units.</param>
            <param name="unit">Duration units (minutes, hours, days)</param>
        </member>
        <member name="P:Alpaca.Markets.BarTimeFrame.Unit">
            <summary>
            Gets specified duration units.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.BarTimeFrame.Value">
            <summary>
            Gets specified duration value.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.BarTimeFrame.ToString">
            <inheritdoc />
        </member>
        <member name="P:Alpaca.Markets.BarTimeFrame.Minute">
            <summary>
            Minute bars.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.BarTimeFrame.Hour">
            <summary>
            Hour bars.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.BarTimeFrame.Day">
            <summary>
            Daily bars.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.BarTimeFrame.Week">
            <summary>
            Weekly bars.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.BarTimeFrame.Month">
            <summary>
            Monthly bars.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.BarTimeFrame.Quarter">
            <summary>
            Quarterly (3 months) bars.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.BarTimeFrame.HalfYear">
            <summary>
            Half year (6 month) bars.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.BarTimeFrame.Year">
            <summary>
            Year (12 months) bars.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.BarTimeFrameUnit">
            <summary>
            Supported bar duration for Alpaca Data API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.BarTimeFrameUnit.Minute">
            <summary>
            Minute bars.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.BarTimeFrameUnit.Hour">
            <summary>
            Hour bars.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.BarTimeFrameUnit.Day">
            <summary>
            Daily bars.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.BarTimeFrameUnit.Week">
            <summary>
            Weekly bars.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.BarTimeFrameUnit.Month">
            <summary>
            Monthly bars.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ConnectionStatus">
            <summary>
            Connection and authentication status for Alpaca streaming API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ConnectionStatus.Connected">
            <summary>
            Client successfully connected.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ConnectionStatus.AuthenticationSuccess">
            <summary>
            Client successfully authorized.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ConnectionStatus.AuthenticationRequired">
            <summary>
            Client authentication required.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ConnectionStatus.AuthenticationFailed">
            <summary>
            Client authentication failed.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ConnectionStatus.Success">
            <summary>
            Requested operation successfully completed.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ConnectionStatus.Failed">
            <summary>
            Requested operation failed.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ConnectionStatus.AlpacaDataStreamingAuthorized">
            <summary>
            Client successfully authorized.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ConnectionStatus.AlpacaDataStreamingUnauthorized">
            <summary>
            Client authentication failed.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.ConnectionStatus.Authenticated">
            <summary>
            Client authentication completed.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.CorporateActionDateType">
            <summary>
            Corporate action type in Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionDateType.DeclarationDate">
            <summary>
            Date the corporate action or subsequent terms update was announced.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionDateType.ExecutionDate">
            <summary>
            The first date that purchasing a security will not
            result in a corporate action entitlement.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionDateType.RecordDate">
            <summary>
            The date an account must hold a settled position in the security
            in order to receive the corporate action entitlement.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionDateType.PayableDate">
            <summary>
            The date the announcement will take effect. On this date, account
            stock and cash balances are expected to be processed accordingly.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.CorporateActionFilterType">
            <summary>
            Supported bar corporate action adjustment types for Alpaca Data API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionFilterType.ReverseSplit">
            <summary>
            
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionFilterType.ForwardSplit">
            <summary>
            
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionFilterType.UnitSplit">
            <summary>
            
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionFilterType.CashDividend">
            <summary>
            
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionFilterType.StockDividend">
            <summary>
            
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionFilterType.SpinOff">
            <summary>
            
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionFilterType.CashMerger">
            <summary>
            
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionFilterType.StockMerger">
            <summary>
            
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionFilterType.StockAndCashMerger">
            <summary>
            
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionFilterType.Redemption">
            <summary>
            
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionFilterType.NameChange">
            <summary>
            
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionFilterType.WorthlessRemoval">
            <summary>
            
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionFilterType.RightsDistribution">
            <summary>
            
            </summary>
        </member>
        <member name="T:Alpaca.Markets.CorporateActionSubType">
            <summary>
            Corporate action sub type in Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionSubType.DividendCash">
            <summary>
            Sub type for the <see cref="F:Alpaca.Markets.CorporateActionType.Dividend"/> type.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionSubType.DividendStock">
            <summary>
            Sub type for the <see cref="F:Alpaca.Markets.CorporateActionType.Dividend"/> type.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionSubType.MergerUpdate">
            <summary>
            Sub type for the <see cref="F:Alpaca.Markets.CorporateActionType.Merger"/> type.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionSubType.MergerCompletion">
            <summary>
            Sub type for the <see cref="F:Alpaca.Markets.CorporateActionType.Merger"/> type.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionSubType.SpinOff">
            <summary>
            Sub type for the <see cref="F:Alpaca.Markets.CorporateActionType.SpinOff"/> type.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionSubType.StockSplit">
            <summary>
            Sub type for the <see cref="F:Alpaca.Markets.CorporateActionType.Split"/> type.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionSubType.UnitSplit">
            <summary>
            Sub type for the <see cref="F:Alpaca.Markets.CorporateActionType.Split"/> type.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionSubType.ReverseSplit">
            <summary>
            Sub type for the <see cref="F:Alpaca.Markets.CorporateActionType.Split"/> type.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionSubType.Recapitalizaiton">
            <summary>
            Sub type for the <see cref="F:Alpaca.Markets.CorporateActionType.Split"/> type.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.CorporateActionType">
            <summary>
            Corporate action type in Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionType.Dividend">
            <summary>
            Dividends payment.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionType.Merger">
            <summary>
            Merge another symbol.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionType.SpinOff">
            <summary>
            Spin off another symbol.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CorporateActionType.Split">
            <summary>
            Split company shares.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.CryptoExchange">
            <summary>
            Crypto currency exchanges supported by Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CryptoExchange.Unknown">
            <summary>
            Unknown exchange (i.e. one not supported by this version of SDK).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CryptoExchange.Ersx">
            <summary>
            ErisX Exchange.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CryptoExchange.Ftx">
            <summary>
            FTX US Exchange.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.CryptoExchange.Cbse">
            <summary>
            Coinbase Exchange.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.DayTradeMarginCallProtection">
            <summary>
            Day trade margin call protection mode for account. See more information here:
            https://docs.alpaca.markets/user-protections/#day-trade-margin-call-dtmc-protection-at-alpaca
            </summary>
        </member>
        <member name="F:Alpaca.Markets.DayTradeMarginCallProtection.Entry">
            <summary>
            Check rules on position entry.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.DayTradeMarginCallProtection.Exit">
            <summary>
            Check rules on position exit.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.DayTradeMarginCallProtection.Both">
            <summary>
            Check rules on position entry and exit.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.Exchange">
            <summary>
            Exchanges supported by Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Exchange.Unknown">
            <summary>
            Unknown exchange (i.e. one not supported by this version of SDK).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Exchange.NyseMkt">
            <summary>
            NYSE American Stock Exchange.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Exchange.NyseArca">
            <summary>
            NYSE Arca Stock Exchange.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Exchange.Nyse">
            <summary>
            New York Stock Exchange (NYSE)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Exchange.Nasdaq">
            <summary>
            Nasdaq Stock Market.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Exchange.Bats">
            <summary>
            BATS Global Market.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Exchange.Amex">
            <summary>
            American Stock Exchange (AMEX)
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Exchange.Arca">
            <summary>
            Archipelago Stock Exchange (ARCA).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Exchange.Iex">
            <summary>
            International Exchange (IEX).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Exchange.Otc">
            <summary>
            Over the counter (OTC).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Exchange.Crypto">
            <summary>
            Alpaca crypto Exchange.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.HistoryPeriodUnit">
            <summary>
            Period units for portfolio history in the Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.HistoryPeriodUnit.Day">
            <summary>
            Day
            </summary>
        </member>
        <member name="F:Alpaca.Markets.HistoryPeriodUnit.Week">
            <summary>
            Week
            </summary>
        </member>
        <member name="F:Alpaca.Markets.HistoryPeriodUnit.Month">
            <summary>
            Month
            </summary>
        </member>
        <member name="F:Alpaca.Markets.HistoryPeriodUnit.Year">
            <summary>
            Year
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IntradayProfitLoss">
            <summary>
            Intraday profit/loss calculation for portfolio history in the Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.IntradayProfitLoss.NoReset">
            <summary>
            Don't reset the profit/los value to the previous day's closing equity for each trading day.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.IntradayProfitLoss.PerDay">
            <summary>
            Reset the profit/los value to the previous day's closing equity for each trading day.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IntradayReporting">
            <summary>
            Intraday reporting styles for portfolio history in the Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.IntradayReporting.MarketHours">
            <summary>
            Only timestamps for the core equity trading hours are returned (usually 9:30am to 4:00pm, trading days only).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.IntradayReporting.ExtendedHours">
            <summary>
            Returns timestamps for the whole session including extended hours (usually 4:00am to 8:00pm, trading days only).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.IntradayReporting.Continuous">
            <summary>
            Returns price data points 24/7 (for off-session times too). To calculate the equity values we are using the following prices:
            - Between 4:00am and 10:00pm on trading days the valuation will be calculated based on the last trade (extended hours and normal hours respectively).
            - After 10:00pm, until the next session open the equities will be valued at their official closing price on the primary exchange.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.MarketDataFeed">
            <summary>
            Supported market feed data types for Alpaca Data API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.MarketDataFeed.Iex">
            <summary>
            IEX feed - the only option available for the free data (no subscription).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.MarketDataFeed.Sip">
            <summary>
            SIP feed - option available for the subscribed clients.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.MarketDataFeed.Otc">
            <summary>
            OTC feed - option available for the subscribed clients.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.Multiplier">
            <summary>
            Account multiplier value (enum values can be cast to related integer values).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Multiplier.None">
            <summary>
            Invalid default value of enum.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Multiplier.Single">
            <summary>
            Standard limited margin account with 1x buying power.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Multiplier.Double">
            <summary>
            Regular T margin account with 2x intraday and overnight buying power;
            this is the default for all non-PDT accounts with $2,000 or more equity.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Multiplier.Quadruple">
            <summary>
            PDT account with 4x intraday buying power and 2x reg T overnight buying power.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.OptionsFeed">
            <summary>
            Supported options feed for Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OptionsFeed.Opra">
            <summary>
            Options Price Reporting Authority.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OptionsFeed.Indicative">
            <summary>
            Indicative options data.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.OptionsTradingLevel">
            <summary>
            Options trading level for Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OptionsTradingLevel.Disabled">
            <summary>
            US options trading completely disabled.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OptionsTradingLevel.CoveredCallCashSecuredPut">
            <summary>
            Us options trading with covered call / cash-secured put.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OptionsTradingLevel.LongCallPut">
            <summary>
            US options trading with long call and put support.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.OptionStyle">
            <summary>
            Supported option contract styles for Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OptionStyle.American">
            <summary>
            American option contract execution style.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OptionStyle.European">
            <summary>
            European option contract execution style.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.OptionType">
            <summary>
            Supported option contract types for Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OptionType.Call">
            <summary>
            Call option contract.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OptionType.Put">
            <summary>
            Put option contract.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.OrderClass">
            <summary>
            Order class for advanced orders in the Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderClass.Simple">
            <summary>
            Simple order
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderClass.Bracket">
            <summary>
            Bracket order
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderClass.OneCancelsOther">
            <summary>
            One Cancels Other order
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderClass.OneTriggersOther">
            <summary>
            One Triggers Other order
            </summary>
        </member>
        <member name="T:Alpaca.Markets.OrderSide">
            <summary>
            Order side in Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderSide.Buy">
            <summary>
            Buy order.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderSide.Sell">
            <summary>
            Sell order.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.OrderStatus">
            <summary>
            Order status in Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Accepted">
            <summary>
            Order accepted by server.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.New">
            <summary>
            New working order.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.PartialFill">
            <summary>
            Partial fill (event) on order.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.PartiallyFilled">
            <summary>
            Order partially filled (status).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Filled">
            <summary>
            Order completely filled.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.DoneForDay">
            <summary>
            Order processing done.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Canceled">
            <summary>
            Order cancelled.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Replaced">
            <summary>
            Order replaced (modified).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.PendingCancel">
            <summary>
            Order cancellation request pending.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Stopped">
            <summary>
            Order processing stopped by server.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Rejected">
            <summary>
            Order rejected by server.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Suspended">
            <summary>
            Order processing suspended by server.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.PendingNew">
            <summary>
            Initial new order request pending.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Calculated">
            <summary>
            Order information calculated by server.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Expired">
            <summary>
            Order expired.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.AcceptedForBidding">
            <summary>
            Order accepted for bidding by server.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.PendingReplace">
            <summary>
            Order replacement request pending.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Fill">
            <summary>
            Order completely filled.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatus.Held">
            <summary>
            Order held pending trigger event.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.OrderStatusFilter">
            <summary>
            Order statuses filter for <see cref="M:Alpaca.Markets.IAlpacaTradingClient.ListOrdersAsync(Alpaca.Markets.ListOrdersRequest,System.Threading.CancellationToken)"/> call from Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatusFilter.Open">
            <summary>
            Returns only open orders.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatusFilter.Closed">
            <summary>
            Returns only closed orders.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderStatusFilter.All">
            <summary>
            Returns all orders.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.OrderType">
            <summary>
            Supported order types in Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderType.Market">
            <summary>
            Market order (no prices required).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderType.Stop">
            <summary>
            Stop order (stop price required).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderType.Limit">
            <summary>
            Limit order (limit price required).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderType.StopLimit">
            <summary>
            Stop limit order (both stop and limit prices required).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.OrderType.TrailingStop">
            <summary>
            Trailing stop order (dollars or percent offset required).
            </summary>
        </member>
        <member name="T:Alpaca.Markets.PositionIntent">
            <summary>
            Position intent for order placement in Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.PositionIntent.BuyToOpen">
            <summary>
            Buy to open a long position.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.PositionIntent.BuyToClose">
            <summary>
            Buy to close a short position.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.PositionIntent.SellToOpen">
            <summary>
            Sell to open a short position.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.PositionIntent.SellToClose">
            <summary>
            Sell to close a long position.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.PositionSide">
            <summary>
            Position side in Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.PositionSide.Long">
            <summary>
            Long position.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.PositionSide.Short">
            <summary>
            Short position.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.SortDirection">
            <summary>
            Supported sort directions in Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.SortDirection.Descending">
            <summary>
            Descending sort order
            </summary>
        </member>
        <member name="F:Alpaca.Markets.SortDirection.Ascending">
            <summary>
            Ascending sort order
            </summary>
        </member>
        <member name="T:Alpaca.Markets.TakerSide">
            <summary>
            Possible crypto taker side types for Alpaca Crypto Data API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TakerSide.Unknown">
            <summary>
            Unspecified crypto trade take side.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TakerSide.Buy">
            <summary>
            Buy crypto trade take side.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TakerSide.Sell">
            <summary>
            Sell crypto trade take side.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.Tape">
            <summary>
            Supported tape types for Alpaca Data API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Tape.A">
            <summary>
            Tape A - NYSE.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Tape.B">
            <summary>
            Tape B - NYSE Arca and NYSE Amex.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.Tape.C">
            <summary>
            Tape C - NASDAQ.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.TimeFrame">
            <summary>
            Supported bar duration for Alpaca REST API.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TimeFrame.Minute">
            <summary>
            One minute bars.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TimeFrame.FiveMinutes">
            <summary>
            Five minutes bars.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TimeFrame.FifteenMinutes">
            <summary>
            Fifteen minutes bars.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TimeFrame.Day">
            <summary>
            Daily bars.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.TimeInForce">
            <summary>
            Supported order durations in Alpaca REST API.
            See <a href="https://alpaca.markets/docs/trading/orders/#time-in-force">Alpaca Trading Documentation</a> for more information.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TimeInForce.Day">
            <summary>
            The order is good for the day and it will be canceled automatically at the end of market hours.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TimeInForce.Gtc">
            <summary>
            The order is good until canceled.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TimeInForce.Opg">
            <summary>
            The order is placed at the time the market opens.
            </summary>
            <remarks>
            Not supported for crypto trading.
            </remarks>
        </member>
        <member name="F:Alpaca.Markets.TimeInForce.Ioc">
            <summary>
            The order is immediately filled or canceled after being placed (may partial fill).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TimeInForce.Fok">
            <summary>
            The order is immediately filled or canceled after being placed (may not partial fill).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TimeInForce.Cls">
            <summary>
            The order will become a limit order if a limit price is specified or a market order otherwise at market close.
            </summary>
            <remarks>
            Not supported for crypto trading.
            </remarks>
        </member>
        <member name="T:Alpaca.Markets.TradeConfirmEmail">
            <summary>
            Notification level for order fill emails.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeConfirmEmail.None">
            <summary>
            Never send email notification for order fills.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeConfirmEmail.All">
            <summary>
            Send email notification for all order fills.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.TradeEvent">
            <summary>
            Trade event in Alpaca trade update stream
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.New">
            <summary>
            New working order.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.PartialFill">
            <summary>
            Partial fill (event) on order.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.Fill">
            <summary>
            Order completely filled.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.DoneForDay">
            <summary>
            Order processing done.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.Canceled">
            <summary>
            Order cancelled.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.PendingCancel">
            <summary>
            Order cancellation request pending.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.Stopped">
            <summary>
            Order processing stopped by server.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.Rejected">
            <summary>
            Order rejected by server side.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.Suspended">
            <summary>
            Order processing suspended by server.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.PendingNew">
            <summary>
            Initial new order request pending.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.Calculated">
            <summary>
            Order information calculated by server.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.Expired">
            <summary>
            Order expired.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.OrderCancelRejected">
            <summary>
            Order cancellation was rejected.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.Replaced">
            <summary>
            Requested replacement of an order was processed.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.PendingReplace">
            <summary>
            The order is awaiting replacement.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.ReplaceRejected">
            <summary>
            The order replace has been rejected.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.PartiallyFilled">
            <summary>
            Order partially filled (status).
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.Accepted">
            <summary>
            Order accepted by server.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.Held">
            <summary>
            Order held pending trigger event.
            </summary>
        </member>
        <member name="F:Alpaca.Markets.TradeEvent.PendingReview">
            <summary>
            Order review pending (order cost basis is large).
            </summary>
        </member>
        <member name="T:Alpaca.Markets.EnvironmentExtensions">
            <summary>
            Collection of helper extension methods for <see cref="T:Alpaca.Markets.IEnvironment"/> interface.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaTradingClient(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates the new instance of <see cref="T:Alpaca.Markets.IAlpacaTradingClient"/> interface
            implementation for specific environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="environment"/> or <paramref name="securityKey"/> argument is <c>null</c>.
            </exception>
            <returns>The new instance of <see cref="T:Alpaca.Markets.IAlpacaTradingClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaTradingClientConfiguration(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AlpacaTradingClientConfiguration"/> for specific
            environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="environment"/> or <paramref name="securityKey"/> argument is <c>null</c>.
            </exception>
            <returns>New instance of <see cref="T:Alpaca.Markets.AlpacaTradingClientConfiguration"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaDataClient(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates the new instance of <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> interface
            implementation for specific environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="environment"/> or <paramref name="securityKey"/> argument is <c>null</c>.
            </exception>
            <returns>The new instance of <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaDataClientConfiguration(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AlpacaDataClientConfiguration"/> for specific
            environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="environment"/> or <paramref name="securityKey"/> argument is <c>null</c>.
            </exception>
            <returns>New instance of <see cref="T:Alpaca.Markets.AlpacaDataClientConfiguration"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaCryptoDataClient(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates the new instance of <see cref="T:Alpaca.Markets.IAlpacaCryptoDataClient"/> interface
            implementation for specific environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="environment"/> or <paramref name="securityKey"/> argument is <c>null</c>.
            </exception>
            <returns>The new instance of <see cref="T:Alpaca.Markets.IAlpacaCryptoDataClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaCryptoDataClientConfiguration(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AlpacaCryptoDataClientConfiguration"/> for specific
            environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="environment"/> or <paramref name="securityKey"/> argument is <c>null</c>.
            </exception>
            <returns>New instance of <see cref="T:Alpaca.Markets.AlpacaCryptoDataClientConfiguration"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaStreamingClient(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates the new instance of <see cref="T:Alpaca.Markets.IAlpacaStreamingClient"/> interface
            implementation for specific environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="environment"/> or <paramref name="securityKey"/> argument is <c>null</c>.
            </exception>
            <returns>The new instance of <see cref="T:Alpaca.Markets.IAlpacaStreamingClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaStreamingClientConfiguration(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AlpacaStreamingClientConfiguration"/> for specific
            environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="environment"/> or <paramref name="securityKey"/> argument is <c>null</c>.
            </exception>
            <returns>New instance of <see cref="T:Alpaca.Markets.AlpacaStreamingClientConfiguration"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaDataStreamingClient(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates the new instance of <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface
            implementation for specific environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="environment"/> or <paramref name="securityKey"/> argument is <c>null</c>.
            </exception>
            <returns>The new instance of <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaDataStreamingClientConfiguration(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AlpacaDataStreamingClientConfiguration"/> for specific
            environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="environment"/> or <paramref name="securityKey"/> argument is <c>null</c>.
            </exception>
            <returns>New instance of <see cref="T:Alpaca.Markets.AlpacaDataStreamingClientConfiguration"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaCryptoStreamingClient(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates the new instance of <see cref="T:Alpaca.Markets.IAlpacaCryptoStreamingClient"/> interface
            implementation for specific environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="environment"/> or <paramref name="securityKey"/> argument is <c>null</c>.
            </exception>
            <returns>The new instance of <see cref="T:Alpaca.Markets.IAlpacaCryptoStreamingClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaCryptoStreamingClientConfiguration(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AlpacaCryptoStreamingClientConfiguration"/> for specific
            environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="environment"/> or <paramref name="securityKey"/> argument is <c>null</c>.
            </exception>
            <returns>New instance of <see cref="T:Alpaca.Markets.AlpacaCryptoStreamingClientConfiguration"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaNewsStreamingClient(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates the new instance of <see cref="T:Alpaca.Markets.IAlpacaNewsStreamingClient"/> interface
            implementation for specific environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="environment"/> or <paramref name="securityKey"/> argument is <c>null</c>.
            </exception>
            <returns>The new instance of <see cref="T:Alpaca.Markets.IAlpacaNewsStreamingClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaNewsStreamingClientConfiguration(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AlpacaNewsStreamingClientConfiguration"/> for specific
            environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="environment"/> or <paramref name="securityKey"/> argument is <c>null</c>.
            </exception>
            <returns>New instance of <see cref="T:Alpaca.Markets.AlpacaNewsStreamingClientConfiguration"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaOptionsDataClient(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates the new instance of <see cref="T:Alpaca.Markets.IAlpacaOptionsDataClient"/> interface
            implementation for specific environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="environment"/> or <paramref name="securityKey"/> argument is <c>null</c>.
            </exception>
            <returns>The new instance of <see cref="T:Alpaca.Markets.IAlpacaOptionsDataClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.EnvironmentExtensions.GetAlpacaOptionsDataClientConfiguration(Alpaca.Markets.IEnvironment,Alpaca.Markets.SecurityKey)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.AlpacaOptionsDataClientConfiguration"/> for specific
            environment provided as <paramref name="environment"/> argument.
            </summary>
            <param name="environment">Target environment for new object.</param>
            <param name="securityKey">Alpaca API security key.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="environment"/> or <paramref name="securityKey"/> argument is <c>null</c>.
            </exception>
            <returns>New instance of <see cref="T:Alpaca.Markets.AlpacaOptionsDataClientConfiguration"/> object.</returns>
        </member>
        <member name="T:Alpaca.Markets.Environments">
            <summary>
            Provides single entry point for obtaining information about different environments.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.Environments.Live">
            <summary>
            Gets live trading environment. 
            </summary>
        </member>
        <member name="P:Alpaca.Markets.Environments.Paper">
            <summary>
            Gets paper trading environment. Paper trading is a simulation environment that does not use real money.
            See <a href="https://alpaca.markets/docs/trading/paper-trading/">Alpaca Paper Trading Documentation</a> for more information.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IEnvironment">
            <summary>
            Provides URLs for different APIs available for this SDK on specific environment.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IEnvironment.AlpacaTradingApi">
            <summary>
            Gets Alpaca trading REST API base URL for this environment.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IEnvironment.AlpacaDataApi">
            <summary>
            Gets Alpaca data REST API base URL for this environment.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IEnvironment.AlpacaStreamingApi">
            <summary>
            Gets Alpaca streaming API base URL for this environment.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IEnvironment.AlpacaDataStreamingApi">
            <summary>
            Gets Alpaca data streaming API base URL for this environment.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IEnvironment.AlpacaCryptoStreamingApi">
            <summary>
            Gets Alpaca crypto streaming API base URL for this environment.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IEnvironment.AlpacaNewsStreamingApi">
            <summary>
            Gets Alpaca news streaming API base URL for this environment.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.RequestValidationException">
            <summary>
            Represents exception information for request input data validation errors.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.RequestValidationException.#ctor">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.RequestValidationException"/> class.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.RequestValidationException.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.RequestValidationException"/> class with specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Alpaca.Markets.RequestValidationException.#ctor(System.String,System.Exception)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.RequestValidationException"/> class with
            specified error message and reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The exception that is the cause of this exception.</param>
        </member>
        <member name="M:Alpaca.Markets.RequestValidationException.#ctor(System.String,System.String)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.RequestValidationException"/> class with specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="propertyName">The invalid property name.</param>
        </member>
        <member name="P:Alpaca.Markets.RequestValidationException.PropertyName">
            <summary>
            Gets the invalid property name that causes this validation exception.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.RestClientErrorException">
            <summary>
            Represents Alpaca REST and Streaming API specific error information.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.RestClientErrorException.#ctor">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.RestClientErrorException"/> class.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.RestClientErrorException.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.RestClientErrorException"/> class with specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Alpaca.Markets.RestClientErrorException.#ctor(System.String,System.Exception)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.RestClientErrorException"/> class with
            specified error message and reference to the inner exception that is the cause of this exception.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="inner">The exception that is the cause of this exception.</param>
        </member>
        <member name="P:Alpaca.Markets.RestClientErrorException.ErrorCode">
            <summary>
            Gets original error code returned by REST API endpoint.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.RestClientErrorException.HttpStatusCode">
            <summary>
            Gets original HTTP status code returned by REST API endpoint.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.RestClientErrorException.ErrorInformation">
            <summary>
            Gets extended error information if it provided by server.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.Extensions.ConfigurationExtensions">
            <summary>
            Set of extensions methods for creating strongly-typed Alpaca REST API clients.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.Extensions.ConfigurationExtensions.GetClient(Alpaca.Markets.AlpacaCryptoDataClientConfiguration)">
            <summary>
            Creates a new instance of <see cref="T:Alpaca.Markets.IAlpacaCryptoDataClient"/> interface
            implementation using the <paramref name="configuration"/> argument.
            </summary>
            <param name="configuration">Client configuration parameters.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="configuration"/> argument is <c>null</c>.
            </exception>
            <returns>A new instance of <see cref="T:Alpaca.Markets.IAlpacaCryptoDataClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.ConfigurationExtensions.GetClient(Alpaca.Markets.AlpacaCryptoStreamingClientConfiguration)">
            <summary>
            Creates a new instance of <see cref="T:Alpaca.Markets.IAlpacaCryptoStreamingClient"/> interface
            implementation using the <paramref name="configuration"/> argument.
            </summary>
            <param name="configuration">Client configuration parameters.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="configuration"/> argument is <c>null</c>.
            </exception>
            <returns>A new instance of <see cref="T:Alpaca.Markets.IAlpacaCryptoStreamingClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.ConfigurationExtensions.GetClient(Alpaca.Markets.AlpacaNewsStreamingClientConfiguration)">
            <summary>
            Creates a new instance of <see cref="T:Alpaca.Markets.IAlpacaNewsStreamingClient"/> interface
            implementation using the <paramref name="configuration"/> argument.
            </summary>
            <param name="configuration">Client configuration parameters.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="configuration"/> argument is <c>null</c>.
            </exception>
            <returns>A new instance of <see cref="T:Alpaca.Markets.IAlpacaNewsStreamingClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.ConfigurationExtensions.GetClient(Alpaca.Markets.AlpacaDataClientConfiguration)">
            <summary>
            Creates a new instance of <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> interface
            implementation using the <paramref name="configuration"/> argument.
            </summary>
            <param name="configuration">Client configuration parameters.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="configuration"/> argument is <c>null</c>.
            </exception>
            <returns>A new instance of <see cref="T:Alpaca.Markets.IAlpacaDataClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.ConfigurationExtensions.GetClient(Alpaca.Markets.AlpacaOptionsDataClientConfiguration)">
            <summary>
            Creates a new instance of <see cref="T:Alpaca.Markets.IAlpacaOptionsDataClient"/> interface
            implementation using the <paramref name="configuration"/> argument.
            </summary>
            <param name="configuration">Client configuration parameters.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="configuration"/> argument is <c>null</c>.
            </exception>
            <returns>A new instance of <see cref="T:Alpaca.Markets.IAlpacaOptionsDataClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.ConfigurationExtensions.GetClient(Alpaca.Markets.AlpacaDataStreamingClientConfiguration)">
            <summary>
            Creates a new instance of <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface
            implementation using the <paramref name="configuration"/> argument.
            </summary>
            <param name="configuration">Client configuration parameters.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="configuration"/> argument is <c>null</c>.
            </exception>
            <returns>A new instance of <see cref="T:Alpaca.Markets.IAlpacaDataStreamingClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.ConfigurationExtensions.GetClient(Alpaca.Markets.AlpacaStreamingClientConfiguration)">
            <summary>
            Creates a new instance of <see cref="T:Alpaca.Markets.IAlpacaStreamingClient"/> interface
            implementation using the <paramref name="configuration"/> argument.
            </summary>
            <param name="configuration">Client configuration parameters.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="configuration"/> argument is <c>null</c>.
            </exception>
            <returns>A new instance of <see cref="T:Alpaca.Markets.IAlpacaStreamingClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.ConfigurationExtensions.GetClient(Alpaca.Markets.AlpacaTradingClientConfiguration)">
            <summary>
            Creates a new instance of <see cref="T:Alpaca.Markets.IAlpacaTradingClient"/> interface
            implementation using the <paramref name="configuration"/> argument.
            </summary>
            <param name="configuration">Client configuration parameters.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="configuration"/> argument is <c>null</c>.
            </exception>
            <returns>A new instance of <see cref="T:Alpaca.Markets.IAlpacaTradingClient"/> interface implementation.</returns>
        </member>
        <member name="M:Alpaca.Markets.Extensions.ConfigurationExtensions.WithHttpMessageHandlerFactory``1(``0,System.Func{System.Net.Http.HttpMessageHandler,System.Net.Http.HttpMessageHandler})">
            <summary>
            Creates a new instance of <typeparamref name="TClientConfiguration"/> object with
            configured custom <see cref="T:System.Net.Http.HttpMessageHandler"/> factory method.
            </summary>
            <typeparam name="TClientConfiguration">Type of configuration parameters.</typeparam>
            <param name="configuration">Client configuration parameters.</param>
            <param name="httpMessageHandlerFactory">
            Factory method for creating custom (delegating) instance of <see cref="T:System.Net.Http.HttpMessageHandler"/> inheritor.
            </param>
            <returns>An original <paramref name="configuration"/> object with configured factory method.</returns>
        </member>
        <member name="T:Alpaca.Markets.AnnouncementExtensions">
            <summary>
            Set of extensions methods for the <see cref="T:Alpaca.Markets.IAnnouncement"/> interface.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.AnnouncementExtensions.GetDeclarationDate(Alpaca.Markets.IAnnouncement)">
            <summary>
            Gets the corporate action declaration date (<see cref="F:Alpaca.Markets.CorporateActionDateType.DeclarationDate"/>)
            or <c>null</c> if date not specified or not applicable for this corporate action type.
            </summary>
            <param name="announcement">Corporate action announcement record.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="announcement"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.AnnouncementExtensions.GetExecutionDate(Alpaca.Markets.IAnnouncement)">
            <summary>
            Gets the corporate action execution date (<see cref="F:Alpaca.Markets.CorporateActionDateType.ExecutionDate"/>)
            or <c>null</c> if date not specified or not applicable for this corporate action type.
            </summary>
            <param name="announcement">Corporate action announcement record.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="announcement"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.AnnouncementExtensions.GetPayableDate(Alpaca.Markets.IAnnouncement)">
            <summary>
            Gets the corporate action payable date (<see cref="F:Alpaca.Markets.CorporateActionDateType.PayableDate"/>)
            or <c>null</c> if date not specified or not applicable for this corporate action type.
            </summary>
            <param name="announcement">Corporate action announcement record.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="announcement"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.AnnouncementExtensions.GetRecordDate(Alpaca.Markets.IAnnouncement)">
            <summary>
            Gets the corporate action record date (<see cref="F:Alpaca.Markets.CorporateActionDateType.RecordDate"/>)
            or <c>null</c> if date not specified or not applicable for this corporate action type.
            </summary>
            <param name="announcement">Corporate action announcement record.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="announcement"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="T:Alpaca.Markets.HistoricalRequestBaseExtensions">
            <summary>
            Set of extension methods for <see cref="T:Alpaca.Markets.HistoricalRequestBase"/> inheritors' initialization.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.HistoricalRequestBaseExtensions.WithPageSize``1(``0,System.UInt32)">
            <summary>
            Sets the request page size using the fluent interface approach.
            </summary>
            <param name="request">Request parameters object.</param>
            <param name="pageSize">The request page size.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>The original request parameters object.</returns>
        </member>
        <member name="M:Alpaca.Markets.HistoricalRequestBaseExtensions.WithPageToken``1(``0,System.String)">
            <summary>
            Sets the request page token using the fluent interface approach.
            </summary>
            <param name="request">Request parameters object.</param>
            <param name="pageToken">The request page token.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>The original request parameters object.</returns>
        </member>
        <member name="T:Alpaca.Markets.IntervalCalenderExtensions">
            <summary>
            Set of extensions methods for the <see cref="T:Alpaca.Markets.IIntervalCalendar"/> interface.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IntervalCalenderExtensions.GetTradingDate(Alpaca.Markets.IIntervalCalendar)">
            <summary>
            Gets trading date (midnight or 00:00 time point).
            </summary>
            <param name="calendar">Alpaca calendar data.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="calendar"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.IntervalCalenderExtensions.GetTradingOpenTimeEst(Alpaca.Markets.IIntervalCalendar)">
            <summary>
            Gets trading open time in EST time zone.
            </summary>
            <param name="calendar">Alpaca calendar data.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="calendar"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.IntervalCalenderExtensions.GetTradingCloseTimeEst(Alpaca.Markets.IIntervalCalendar)">
            <summary>
            Gets trading close time in EST time zone.
            </summary>
            <param name="calendar">Alpaca calendar data.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="calendar"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.IntervalCalenderExtensions.GetTradingOpenTimeUtc(Alpaca.Markets.IIntervalCalendar)">
            <summary>
            Gets trading open time in UTC time zone.
            </summary>
            <param name="calendar">Alpaca calendar data.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="calendar"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.IntervalCalenderExtensions.GetTradingCloseTimeUtc(Alpaca.Markets.IIntervalCalendar)">
            <summary>
            Gets trading close time in UTC time zone.
            </summary>
            <param name="calendar">Alpaca calendar data.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="calendar"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.IntervalCalenderExtensions.GetSessionOpenTimeEst(Alpaca.Markets.IIntervalCalendar)">
            <summary>
            Gets session open time in EST time zone.
            </summary>
            <param name="calendar">Alpaca calendar data.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="calendar"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.IntervalCalenderExtensions.GetSessionCloseTimeEst(Alpaca.Markets.IIntervalCalendar)">
            <summary>
            Gets session close time in EST time zone.
            </summary>
            <param name="calendar">Alpaca calendar data.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="calendar"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.IntervalCalenderExtensions.GetSessionOpenTimeUtc(Alpaca.Markets.IIntervalCalendar)">
            <summary>
            Gets session open time in UTC time zone.
            </summary>
            <param name="calendar">Alpaca calendar data.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="calendar"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.IntervalCalenderExtensions.GetSessionCloseTimeUtc(Alpaca.Markets.IIntervalCalendar)">
            <summary>
            Gets session close time in UTC time zone.
            </summary>
            <param name="calendar">Alpaca calendar data.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="calendar"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="T:Alpaca.Markets.IntervalExtensions">
            <summary>
            Set of extensions methods for the <see cref="T:Alpaca.Markets.Interval`1"/> structure.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IntervalExtensions.AsDateInterval(Alpaca.Markets.Interval{System.DateTime})">
            <summary>
            Converts a <see cref="T:Alpaca.Markets.Interval`1"/> Interval into a <see cref="T:Alpaca.Markets.Interval`1"/> Interval.
            </summary>
            <param name="interval">Input inclusive time interval for converting.</param>
            <returns>Date interval initialized with data from the original inclusive time interval.</returns>
        </member>
        <member name="M:Alpaca.Markets.IntervalExtensions.AsTimeInterval(Alpaca.Markets.Interval{System.DateOnly})">
            <summary>
            Converts a <see cref="T:Alpaca.Markets.Interval`1"/> Interval into a <see cref="T:Alpaca.Markets.Interval`1"/> Interval.
            </summary>
            <param name="interval">Input date interval for converting.</param>
            <returns>Inclusive time interval initialized with data from the original date interval.</returns>
        </member>
        <member name="M:Alpaca.Markets.IntervalExtensions.GetIntervalFromThat``1(``0)">
            <summary>
            Gets exclusive open time interval starting from the <paramref name="from"/> date/time point.
            </summary>
            <param name="from">Starting point for filtering.</param>
            <returns>Exclusive open time interval.</returns>
        </member>
        <member name="M:Alpaca.Markets.IntervalExtensions.GetIntervalTillThat``1(``0)">
            <summary>
            Gets exclusive open time interval ending at the <paramref name="into"/> date/time point.
            </summary>
            <param name="into">Ending point for filtering.</param>
            <returns>Exclusive open time interval.</returns>
        </member>
        <member name="T:Alpaca.Markets.OpenClose">
            <summary>
            Encapsulates session starting and ending points - session open and close time in EST time zone.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.OpenClose.#ctor">
            <summary>
            Creates new instance of the <see cref="T:Alpaca.Markets.OpenClose"/> structure.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.OpenClose.#ctor(System.DateOnly,System.TimeOnly,System.TimeOnly)">
            <summary>
            Creates new instance of the <see cref="T:Alpaca.Markets.OpenClose"/> structure from date and two time points.
            </summary>
            <param name="date">Session date</param>
            <param name="open">Open time in EST time zone.</param>
            <param name="close">Close time in EST time zone.</param>
        </member>
        <member name="P:Alpaca.Markets.OpenClose.OpenEst">
            <summary>
            Gets open time in EST time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.OpenClose.CloseEst">
            <summary>
            Gets close time in EST time zone.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.OpenClose.ToInterval">
            <summary>
            Gets session open and close time as <see cref="T:Alpaca.Markets.Interval`1"/> instance with UTC times.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Alpaca.Markets.OpenClose.op_Implicit(Alpaca.Markets.OpenClose)~Alpaca.Markets.Interval{System.DateTime}">
            <summary>
            Gets session open and close time as <see cref="T:Alpaca.Markets.Interval`1"/> instance with UTC times.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.OrderExtensions">
            <summary>
            Set of extension methods for <see cref="T:Alpaca.Markets.IOrder"/> interface.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.OrderExtensions.GetOrderQuantity(Alpaca.Markets.IOrder)">
            <summary>
            Gets order quantity as instance of the <see cref="T:Alpaca.Markets.OrderQuantity"/> structure.
            </summary>
            <param name="order">Order for reading quantity value.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="order"/> argument is <c>null</c>.
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Both fractional and notional order quantity values are null.
            </exception>
            <returns>Fractional or notional order quantity value.</returns>
        </member>
        <member name="T:Alpaca.Markets.OrderQuantity">
            <summary>
            Represents the market day order quantity in dollars or as (possible fractional) number of shares.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.OrderQuantity.#ctor">
            <summary>
            Creates new instance of the <see cref="T:Alpaca.Markets.OrderQuantity"/> structure.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.OrderQuantity.Value">
            <summary>
            Gets the market day order quantity or notional value.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.OrderQuantity.IsInDollars">
            <summary>
            Returns <c>true</c> if <see cref="P:Alpaca.Markets.OrderQuantity.Value"/> is an amount in dollars.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.OrderQuantity.IsInShares">
            <summary>
            Returns <c>true</c> if <see cref="P:Alpaca.Markets.OrderQuantity.Value"/> is a number of shares (fractional or integer).
            </summary>
        </member>
        <member name="M:Alpaca.Markets.OrderQuantity.Notional(System.Decimal)">
            <summary>
            Creates new instance of the <see cref="T:Alpaca.Markets.OrderQuantity"/> object
            initialized with <paramref name="value"/> as dollars amount.
            </summary>
            <param name="value">Amount of dollars to buy or sell.</param>
            <returns>Initialized <see cref="T:Alpaca.Markets.OrderQuantity"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.OrderQuantity.Fractional(System.Decimal)">
            <summary>
            Creates new instance of the <see cref="T:Alpaca.Markets.OrderQuantity"/> object
            initialized with <paramref name="value"/> as number of shares.
            </summary>
            <param name="value">Number of shares (integer or fractional).</param>
            <returns>Initialized <see cref="T:Alpaca.Markets.OrderQuantity"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.OrderQuantity.op_Implicit(System.Int64)~Alpaca.Markets.OrderQuantity">
            <summary>
            Creates new instance of the <see cref="T:Alpaca.Markets.OrderQuantity"/> object
            initialized with <paramref name="value"/> as number of shares.
            </summary>
            <param name="value">Integer number of shares.</param>
            <returns>Initialized <see cref="T:Alpaca.Markets.OrderQuantity"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.OrderQuantity.FromInt64(System.Int64)">
            <summary>
            Creates new instance of the <see cref="T:Alpaca.Markets.OrderQuantity"/> object
            initialized with <paramref name="value"/> as number of shares.
            </summary>
            <param name="value">Integer number of shares.</param>
            <returns>Initialized <see cref="T:Alpaca.Markets.OrderQuantity"/> object.</returns>
        </member>
        <member name="T:Alpaca.Markets.PositionQuantity">
            <summary>
            Represents the position liquidation quantity in (possible fractional) number of shares or in percents.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.PositionQuantity.#ctor">
            <summary>
            Creates new instance of the <see cref="T:Alpaca.Markets.PositionQuantity"/> structure.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.PositionQuantity.Value">
            <summary>
            Gets the position liquidation quantity in shares or in percentage value.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.PositionQuantity.IsInShares">
            <summary>
            Returns <c>true</c> if <see cref="P:Alpaca.Markets.PositionQuantity.Value"/> is a number of shares (fractional or integer).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.PositionQuantity.IsInPercents">
            <summary>
            Returns <c>true</c> if <see cref="P:Alpaca.Markets.PositionQuantity.Value"/> is an amount in percents (from 0 to 100).
            </summary>
        </member>
        <member name="M:Alpaca.Markets.PositionQuantity.InShares(System.Decimal)">
            <summary>
            Creates new instance of the <see cref="T:Alpaca.Markets.PositionQuantity"/> object
            initialized with <paramref name="value"/> as number of shares.
            </summary>
            <param name="value">Amount of dollars to buy or sell.</param>
            <returns>Initialized <see cref="T:Alpaca.Markets.PositionQuantity"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.PositionQuantity.InPercents(System.Decimal)">
            <summary>
            Creates new instance of the <see cref="T:Alpaca.Markets.PositionQuantity"/> object
            initialized with <paramref name="value"/> as percentage value.
            </summary>
            <param name="value">Number of shares (integer or fractional).</param>
            <exception cref="T:System.ArgumentException">
            The <paramref name="value"/> argument is less than 0 or greater than 100.
            </exception>
            <returns>Initialized <see cref="T:Alpaca.Markets.PositionQuantity"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.Validation.IRequest.GetExceptions">
            <summary>
            Gets all validation exceptions (inconsistent request data errors).
            </summary>
            <returns>Lazy-evaluated list of validation errors.</returns>
        </member>
        <member name="T:Alpaca.Markets.IAccount">
            <summary>
            Encapsulates full account information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.AccountId">
            <summary>
            Gets unique account identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.Status">
            <summary>
            Gets updated account status.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.CryptoStatus">
            <summary>
            Gets updated crypto account status.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.Currency">
            <summary>
            Gets main account currency.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.TradableCash">
            <summary>
            Gets amount of money available for trading.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.CreatedAtUtc">
            <summary>
            Gets timestamp of account creation event in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.AccountNumber">
            <summary>
            Gets account number (string identifier).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.IsDayPatternTrader">
            <summary>
            Returns <c>true</c> if account is linked to pattern day trader.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.IsTradingBlocked">
            <summary>
            Returns <c>true</c> if account trading functions are blocked.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.IsTransfersBlocked">
            <summary>
             Returns <c>true</c> if account transfer functions are blocked.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.TradeSuspendedByUser">
            <summary>
            User setting. If <c>true</c>, the account is not allowed to place orders.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.ShortingEnabled">
            <summary>
            Flag to denote whether or not the account is permitted to short.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.Multiplier">
            <summary>
            Buying power multiplier that represents account margin classification.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.BuyingPower">
            <summary>
            Current available buying power.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.DayTradingBuyingPower">
            <summary>
            Your buying power for day trades (continuously updated value).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.RegulationBuyingPower">
            <summary>
            Your buying power under Regulation T (your excess equity - equity minus margin value - times your margin multiplier).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.NonMarginableBuyingPower">
            <summary>
            Your non-marginable buying power for day trades (useful for crypto-trading).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.LongMarketValue">
            <summary>
            Real-time MtM value of all long positions held in the account.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.ShortMarketValue">
            <summary>
            Real-time MtM value of all short positions held in the account.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.Equity">
            <summary>
            Cash + LongMarketValue + ShortMarketValue.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.LastEquity">
            <summary>
            Equity as of previous trading day at 16:00:00 ET.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.InitialMargin">
            <summary>
            Reg T initial margin requirement (continuously updated value).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.MaintenanceMargin">
            <summary>
            Maintenance margin requirement (continuously updated value).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.LastMaintenanceMargin">
            <summary>
            Your maintenance margin requirement on the previous trading day
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.DayTradeCount">
            <summary>
            the current number of day trades that have been made in the last 5 trading days (inclusive of today).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.Sma">
            <summary>
            Value of special memorandum account.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.IsAccountBlocked">
            <summary>
            Returns <c>true</c> if account is completely blocked.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.AccruedFees">
            <summary>
            Gets fees collected value (if any).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.PendingTransferIn">
            <summary>
            Gets cash pending transfer in.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.PendingTransferOut">
            <summary>
            Gets cash pending transfer out.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.OptionsTradingLevel">
            <summary>
            Gets the effective options trading level of the account. This is the minimum between the
            <see cref="P:Alpaca.Markets.IAccount.OptionsApprovedLevel"/> and the <see cref="P:Alpaca.Markets.IAccountConfiguration.MaxOptionsTradingLevel"/>.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.OptionsApprovedLevel">
            <summary>
            Gets the options trading level that was approved for this account.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccount.OptionsBuyingPower">
            <summary>
            Gets the option buying power that was approved for this account.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IAccountActivity">
            <summary>
            Encapsulates account activity information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.ActivityType">
            <summary>
            Activity type.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.ActivityId">
            <summary>
            An ID for the activity, always in "{date}::{uuid}" format. Can be sent as page_token in requests to facilitate the paging of results.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.ActivityDateTimeUtc">
            <summary>
            An activity timestamp (date and time) from <see cref="P:Alpaca.Markets.IAccountActivity.ActivityId"/> in the UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.ActivityGuid">
            <summary>
            An activity unique identifier from <see cref="P:Alpaca.Markets.IAccountActivity.ActivityId"/>.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.Symbol">
            <summary>
            The symbol of the security involved with the activity. Not present for all activity types.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.ActivityDate">
            <summary>
            The date on which the activity occurred or on which the transaction associated with the activity settled in the UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.NetAmount">
            <summary>
            The net amount of money (positive or negative) associated with the activity.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.PerShareAmount">
            <summary>
            For dividend activities, the average amount paid per share. Not present for other activity types.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.Quantity">
            <summary>
            The number of shares that contributed to the transaction (with the fractional part). Not present for all activity types.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.CumulativeQuantity">
            <summary>
            The cumulative quantity of shares involved in the execution (with the fractional part).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.LeavesQuantity">
            <summary>
            For partially_filled orders, the quantity of shares that are left to be filled (with the fractional part).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.IntegerQuantity">
            <summary>
            The number of shares that contributed to the transaction (rounded to the nearest integer). Not present for all activity types.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.IntegerCumulativeQuantity">
            <summary>
            The cumulative quantity of shares involved in the execution (rounded to the nearest integer).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.IntegerLeavesQuantity">
            <summary>
            For partially_filled orders, the quantity of shares that are left to be filled (rounded to the nearest integer).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.Price">
            <summary>
            The per-share price that a trade was executed at.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.Side">
            <summary>
            The order side of a trade execution.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.TransactionTimeUtc">
            <summary>
            The time at which an execution occurred in the UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.Type">
            <summary>
            The type of trade event associated with an execution.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountActivity.OrderId">
            <summary>
            Gets the id for the order that filled (for the trade activity).
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IAccountConfiguration">
            <summary>
            Encapsulates account configuration settings from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountConfiguration.DayTradeMarginCallProtection">
            <summary>
            Gets or sets day trade margin call protection mode for account.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountConfiguration.TradeConfirmEmail">
            <summary>
            Gets or sets notification level for order fill emails.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountConfiguration.IsSuspendTrade">
            <summary>
            Gets or sets control flag for blocking new orders placement.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountConfiguration.IsNoShorting">
            <summary>
            Gets or sets control flag for enabling long-only account mode.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountConfiguration.IsPtpNoExceptionEntry">
            <summary>
            Gets or sets control flag for enabling orders acceptance for PTP symbols with no exception.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAccountConfiguration.MaxOptionsTradingLevel">
            <summary>
            Gets the desired maximum options trading level.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IActiveStock">
            <summary>
            Encapsulates the single active stock information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IActiveStock.Symbol">
            <summary>
            Gets the stock instrument symbol name.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IActiveStock.Volume">
            <summary>
            Gets the current instrument volume value.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IActiveStock.TradeCount">
            <summary>
            Gets the current instrument trade count value.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IAlpacaCryptoDataClient">
            <summary>
            Provides unified type-safe access for Alpaca Crypto Data API via HTTP/REST.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaCryptoDataClient.GetLatestBarAsync(Alpaca.Markets.LatestDataRequest,System.Threading.CancellationToken)">
            <summary>
            Gets most recent bar for a single asset from Alpaca REST API endpoint.
            </summary>
            <param name="request">Asset symbol and exchange pair for data retrieval.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only latest bar information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaCryptoDataClient.ListLatestBarsAsync(Alpaca.Markets.LatestDataListRequest,System.Threading.CancellationToken)">
            <summary>
            Gets most recent bar for several assets from Alpaca REST API endpoint.
            </summary>
            <param name="request">Asset symbols list for data retrieval.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only dictionary with the latest bars information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaCryptoDataClient.GetLatestTradeAsync(Alpaca.Markets.LatestDataRequest,System.Threading.CancellationToken)">
            <summary>
            Gets most recent trade for a single asset from Alpaca REST API endpoint.
            </summary>
            <param name="request">Asset symbol and exchange pair for data retrieval.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only latest trade information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaCryptoDataClient.ListLatestTradesAsync(Alpaca.Markets.LatestDataListRequest,System.Threading.CancellationToken)">
            <summary>
            Gets most recent trade for several assets from Alpaca REST API endpoint.
            </summary>
            <param name="request">Asset symbols list for data retrieval.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only dictionary with the latest trades information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaCryptoDataClient.GetLatestQuoteAsync(Alpaca.Markets.LatestDataRequest,System.Threading.CancellationToken)">
            <summary>
            Gets current quote for single asset from Alpaca REST API endpoint.
            </summary>
            <param name="request">Asset symbol and exchange pair for data retrieval.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only current quote information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaCryptoDataClient.ListLatestQuotesAsync(Alpaca.Markets.LatestDataListRequest,System.Threading.CancellationToken)">
            <summary>
            Gets most recent quote for several assets from Alpaca REST API endpoint.
            </summary>
            <param name="request">Asset symbols list for data retrieval.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only dictionary with the latest quotes information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaCryptoDataClient.GetLatestBestBidOfferAsync(Alpaca.Markets.LatestBestBidOfferRequest,System.Threading.CancellationToken)">
            <summary>
            Gets current cross-exchange best bid/offer (XBBO) for single asset from Alpaca REST API endpoint.
            </summary>
            <param name="request">Asset symbol and exchanges list pair for data retrieval.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only current XBBO information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaCryptoDataClient.ListLatestBestBidOffersAsync(Alpaca.Markets.LatestBestBidOfferListRequest,System.Threading.CancellationToken)">
            <summary>
            Gets current cross-exchange best bid/offer (XBBO) for several assets from Alpaca REST API endpoint.
            </summary>
            <param name="request">Asset symbol and exchanges list pair for data retrieval.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only dictionary with the current XBBO information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaCryptoDataClient.GetSnapshotAsync(Alpaca.Markets.SnapshotDataRequest,System.Threading.CancellationToken)">
            <summary>
            Gets current snapshot data for single asset from Alpaca REST API endpoint.
            </summary>
            <param name="request">Asset symbol and exchange pair for data retrieval.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only current snapshot information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaCryptoDataClient.ListSnapshotsAsync(Alpaca.Markets.SnapshotDataListRequest,System.Threading.CancellationToken)">
            <summary>
            Gets current snapshot data for several assets from Alpaca REST API endpoint.
            </summary>
            <param name="request">Asset symbol for data retrieval.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only dictionary with the current snapshot information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaCryptoDataClient.ListLatestOrderBooksAsync(Alpaca.Markets.LatestOrderBooksRequest,System.Threading.CancellationToken)">
            <summary>
            Gets current order books for several assets from Alpaca REST API endpoint.
            </summary>
            <param name="request">Asset symbols list for data retrieval.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only dictionary with the current order book information.</returns>
        </member>
        <member name="T:Alpaca.Markets.IAlpacaCryptoStreamingClient">
            <summary>
            Provides unified type-safe access for Alpaca crypto data streaming API via websockets.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaCryptoStreamingClient.GetOrderBookSubscription(System.String)">
            <summary>
            Gets the order book updates subscription for the <paramref name="symbol"/> asset.
            </summary>
            <param name="symbol">Alpaca asset name.</param>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="T:Alpaca.Markets.IAlpacaDataClient">
            <summary>
            Provides unified type-safe access for Alpaca Data API via HTTP/REST.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataClient.GetLatestBarAsync(Alpaca.Markets.LatestMarketDataRequest,System.Threading.CancellationToken)">
            <summary>
            Gets most recent bar for single asset from Alpaca REST API endpoint.
            </summary>
            <param name="request">Latest bar data request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only latest bar information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataClient.ListLatestBarsAsync(Alpaca.Markets.LatestMarketDataListRequest,System.Threading.CancellationToken)">
            <summary>
            Gets most recent bars for several assets from Alpaca REST API endpoint.
            </summary>
            <param name="request">Latest bar data request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only dictionary with the latest bars information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataClient.GetLatestTradeAsync(Alpaca.Markets.LatestMarketDataRequest,System.Threading.CancellationToken)">
            <summary>
            Gets most recent trade for singe asset from Alpaca REST API endpoint.
            </summary>
            <param name="request">Latest trade data request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only latest trade information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataClient.ListLatestTradesAsync(Alpaca.Markets.LatestMarketDataListRequest,System.Threading.CancellationToken)">
            <summary>
            Gets most recent trades for several assets from Alpaca REST API endpoint.
            </summary>
            <param name="request">Latest trade data request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only dictionary with the latest trades information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataClient.GetLatestQuoteAsync(Alpaca.Markets.LatestMarketDataRequest,System.Threading.CancellationToken)">
            <summary>
            Gets most recent quote for singe asset from Alpaca REST API endpoint.
            </summary>
            <param name="request">Latest quote data request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only current quote information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataClient.ListLatestQuotesAsync(Alpaca.Markets.LatestMarketDataListRequest,System.Threading.CancellationToken)">
            <summary>
            Gets most recent quotes for several assets from Alpaca REST API endpoint.
            </summary>
            <param name="request">Latest quote data request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only dictionary with the latest quotes information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataClient.GetSnapshotAsync(Alpaca.Markets.LatestMarketDataRequest,System.Threading.CancellationToken)">
            <summary>
            Gets current snapshot (latest trade/quote and minute/days bars) for singe asset from Alpaca REST API endpoint.
            </summary>
            <param name="request">Latest snapshot data request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only current snapshot information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataClient.ListSnapshotsAsync(Alpaca.Markets.LatestMarketDataListRequest,System.Threading.CancellationToken)">
            <summary>
            Gets current snapshot (latest trade/quote and minute/days bars) for several assets from Alpaca REST API endpoint.
            </summary>
            <param name="request">Latest snapshot data request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only dictionary with the current snapshot information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataClient.ListExchangesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets dictionary with exchange code to the exchange name mappings.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns>Read-only dictionary where the key is the exchange code and the value is the code's corresponding exchange name.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataClient.ListTradeConditionsAsync(Alpaca.Markets.Tape,System.Threading.CancellationToken)">
            <summary>
            Gets dictionary with trades conditions code to the condition description mappings.
            </summary>
            <param name="tape">SIP tape identifier for retrieving trade conditions.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns>Read-only dictionary where the key is the trade conditions code and the value is the corresponding condition description.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataClient.ListQuoteConditionsAsync(Alpaca.Markets.Tape,System.Threading.CancellationToken)">
            <summary>
            Gets dictionary with quotes conditions code to the condition description mappings.
            </summary>
            <param name="tape">SIP tape identifier for retrieving quote conditions.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns>Read-only dictionary where the key is the quote conditions code and the value is the corresponding condition description.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataClient.ListNewsArticlesAsync(Alpaca.Markets.NewsArticlesRequest,System.Threading.CancellationToken)">
            <summary>
            Gets historical news articles list from Alpaca REST API endpoint.
            </summary>
            <param name="request">Historical news articles request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only list of historical news articles for specified parameters (with pagination data).</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataClient.ListHistoricalAuctionsAsync(Alpaca.Markets.HistoricalAuctionsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets historical auctions list for single asset from Alpaca REST API endpoint.
            </summary>
            <param name="request">Historical auctions request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only list of historical auctions for specified asset (with pagination data).</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataClient.GetHistoricalAuctionsAsync(Alpaca.Markets.HistoricalAuctionsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets historical auctions dictionary for several assets from Alpaca REST API endpoint.
            </summary>
            <param name="request">Historical auctions request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only dictionary of historical auctions for specified assets (with pagination data).</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataClient.ListMostActiveStocksByVolumeAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Returns the most active stocks by volume for the current trading session.
            </summary>
            <param name="numberOfTopMostActiveStocks">
            Number of top most active stocks to fetch per day.
            </param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns>Read-only list of most active stocks ranked by volume.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataClient.ListMostActiveStocksByTradeCountAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Returns the most active stocks by trade count for the current trading session.
            </summary>
            <param name="numberOfTopMostActiveStocks">
            Number of top most active stocks to fetch per day.
            </param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns>Read-only list of most active stocks ranked by trade count.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataClient.ListCorporateActionsAsync(Alpaca.Markets.CorporateActionsRequest,System.Threading.CancellationToken)">
            <summary>
            Returns the historical corporate actions for the current trading session according to request parameters.
            </summary>
            <param name="request">Historical auctions request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only list of most active stocks ranked by trade count.</returns>
        </member>
        <member name="T:Alpaca.Markets.IAlpacaDataStreamingClient">
            <summary>
            Provides unified type-safe access for Alpaca data streaming API via websockets.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataStreamingClient.GetStatusSubscription(System.String)">
            <summary>
            Gets the trading statuses subscription for the <paramref name="symbol"/> asset.
            </summary>
            <param name="symbol">Alpaca asset symbol.</param>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataStreamingClient.GetCancellationSubscription(System.String)">
            <summary>
            Gets the trade cancellations subscription for the <paramref name="symbol"/> asset.
            </summary>
            <param name="symbol">Alpaca asset symbol.</param>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataStreamingClient.GetCorrectionSubscription(System.String)">
            <summary>
            Gets the trade corrections subscription for the <paramref name="symbol"/> asset.
            </summary>
            <param name="symbol">Alpaca asset symbol.</param>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaDataStreamingClient.GetLimitUpLimitDownSubscription(System.String)">
            <summary>
            Gets the LULD (limit up / limit down) subscription for the <paramref name="symbol"/> asset.
            </summary>
            <param name="symbol">Alpaca asset symbol.</param>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="T:Alpaca.Markets.IAlpacaDataSubscription">
            <summary>
            Encapsulates generic Alpaca Data streaming API subscription item.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAlpacaDataSubscription.Streams">
            <summary>
            Gets the stream names - updates type (channel name) and asset name (symbol) list.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAlpacaDataSubscription.Subscribed">
            <summary>
            Gets boolean flag indicating the current subscription status of this item.
            An unsubscribed subscription does not receive streaming data.
            </summary>
        </member>
        <member name="E:Alpaca.Markets.IAlpacaDataSubscription.OnSubscribedChanged">
            <summary>
            Occurs when a <see cref="P:Alpaca.Markets.IAlpacaDataSubscription.Subscribed"/> property value has changed.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IAlpacaDataSubscription`1">
            <summary>
            Encapsulates strongly-typed Alpaca Data streaming API subscription item.
            </summary>
            <typeparam name="TApi">Streaming update concrete type.</typeparam>
        </member>
        <member name="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received">
            <summary>
            Occurs when a new <typeparamref name="TApi"/> item is received from the stream.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IAlpacaNewsStreamingClient">
            <summary>
            Provides unified type-safe access for Alpaca data streaming API via websockets.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaNewsStreamingClient.GetNewsSubscription">
            <summary>
            Gets the news articles' updates subscription for all stock and crypto assets.
            </summary>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaNewsStreamingClient.GetNewsSubscription(System.String)">
            <summary>
            Gets the news articles' updates subscription for the <paramref name="symbol"/> asset.
            </summary>
            <param name="symbol">Alpaca asset symbol.</param>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="T:Alpaca.Markets.IAlpacaOptionsDataClient">
            <summary>
            Provides unified type-safe access for Alpaca Options Data API via HTTP/REST.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaOptionsDataClient.ListExchangesAsync(System.Threading.CancellationToken)">
            <summary>
            Gets dictionary with exchange code to the exchange name mappings.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns>Read-only dictionary where the key is the exchange code and the value is the code's corresponding exchange name.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaOptionsDataClient.ListLatestQuotesAsync(Alpaca.Markets.LatestOptionsDataRequest,System.Threading.CancellationToken)">
            <summary>
            Gets most recent quotes for several option contracts from Alpaca REST API endpoint.
            </summary>
            <param name="request">Option contracts latest data request.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only dictionary with the latest quotes information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaOptionsDataClient.ListLatestTradesAsync(Alpaca.Markets.LatestOptionsDataRequest,System.Threading.CancellationToken)">
            <summary>
            Gets most recent trades for several option contracts from Alpaca REST API endpoint.
            </summary>
            <param name="request">Option contracts latest data request.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only dictionary with the latest trades information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaOptionsDataClient.ListSnapshotsAsync(Alpaca.Markets.OptionSnapshotRequest,System.Threading.CancellationToken)">
            <summary>
            Gets current snapshot (latest trade/quote) for several option contracts from Alpaca REST API endpoint.
            </summary>
            <param name="request">Option contracts latest data request.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only dictionary with the current snapshot information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaOptionsDataClient.GetOptionChainAsync(Alpaca.Markets.OptionChainRequest,System.Threading.CancellationToken)">
            <summary>
            Gets option chain (snapshots list) for option contracts with same underlying symbol from Alpaca REST API endpoint.
            </summary>
            <param name="request">Option contracts latest data request.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only dictionary with the current snapshot information.</returns>
        </member>
        <member name="T:Alpaca.Markets.IAlpacaScreenerClient">
            <summary>
            Provides unified type-safe access for Alpaca Screener API via HTTP/REST.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaScreenerClient.GetTopMarketMoversAsync(System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
            Returns top market movers (gainers and losers) and corresponding price change values.
            </summary>
            <param name="numberOfLosersAndGainersInResponse">
            Number of top market movers to fetch (gainers and losers). Will return number top for each. By default 10 gainers and 10 losers.
            </param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns>Read-only market movers collections.</returns>
        </member>
        <member name="T:Alpaca.Markets.IAlpacaStreamingClient">
            <summary>
            Provides unified type-safe access for Alpaca streaming API.
            </summary>
        </member>
        <member name="E:Alpaca.Markets.IAlpacaStreamingClient.OnTradeUpdate">
            <summary>
            Occurs when a new trade update is received from the stream.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IAlpacaTradingClient">
            <summary>
            Provides unified type-safe access for Alpaca Trading API via HTTP/REST.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.ListWatchListsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets list of watch list objects from Alpaca REST API endpoint.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns>Read-only list of watch list objects.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.CreateWatchListAsync(Alpaca.Markets.NewWatchListRequest,System.Threading.CancellationToken)">
            <summary>
            Add new watch list object into Alpaca REST API endpoint.
            </summary>
            <param name="request">New watch list request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Newly created watch list object.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetWatchListByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get watch list object from Alpaca REST API endpoint by watch list identifier.
            </summary>
            <param name="watchListId">Unique watch list identifier.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns>Watch list object with proper <paramref name="watchListId"/> value.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetWatchListByNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get watch list object from Alpaca REST API endpoint by watch list user-defined name.
            </summary>
            <param name="name">User defined watch list name.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="name"/> argument is <c>null</c>.
            </exception>
            <returns>Watch list object with proper <paramref name="name"/> value.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.UpdateWatchListByIdAsync(Alpaca.Markets.UpdateWatchListRequest,System.Threading.CancellationToken)">
            <summary>
            Updates watch list object from Alpaca REST API endpoint by watch list identifier.
            </summary>
            <param name="request">Update watch list request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Updated watch list object with proper <paramref name="request.WatchListId.WatchListId"/> value.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.AddAssetIntoWatchListByIdAsync(Alpaca.Markets.ChangeWatchListRequest{System.Guid},System.Threading.CancellationToken)">
            <summary>
            Adds asset into watch list using Alpaca REST API endpoint by watch list identifier.
            </summary>
            <param name="request">Asset adding request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Updated watch list object with proper <paramref name="request.Key.Key"/> value.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.AddAssetIntoWatchListByNameAsync(Alpaca.Markets.ChangeWatchListRequest{System.String},System.Threading.CancellationToken)">
            <summary>
            Adds asset into watch list using Alpaca REST API endpoint by watch list name.
            </summary>
            <param name="request">Asset adding request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Updated watch list object with proper <paramref name="request.Key.Key"/> value.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.DeleteAssetFromWatchListByIdAsync(Alpaca.Markets.ChangeWatchListRequest{System.Guid},System.Threading.CancellationToken)">
            <summary>
            Deletes asset from watch list using Alpaca REST API endpoint by watch list identifier.
            </summary>
            <param name="request">Asset deleting request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Updated watch list object with proper <paramref name="request.Key.Key"/> value.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.DeleteAssetFromWatchListByNameAsync(Alpaca.Markets.ChangeWatchListRequest{System.String},System.Threading.CancellationToken)">
            <summary>
            Deletes asset from watch list using Alpaca REST API endpoint by watch list name.
            </summary>
            <param name="request">Asset deleting request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Updated watch list object with proper <paramref name="request.Key.Key"/> value.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.DeleteWatchListByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Deletes watch list from Alpaca REST API endpoint by watch list identifier.
            </summary>
            <param name="watchListId">Unique watch list identifier.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns>Returns <c>true</c> if operation completed successfully.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.DeleteWatchListByNameAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Deletes watch list from Alpaca REST API endpoint by watch list name.
            </summary>
            <param name="name">User defined watch list name.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="name"/> argument is <c>null</c>.
            </exception>
            <returns>Returns <c>true</c> if operation completed successfully.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.ListOrdersAsync(Alpaca.Markets.ListOrdersRequest,System.Threading.CancellationToken)">
            <summary>
            Gets list of available orders from Alpaca REST API endpoint.
            </summary>
            <param name="request">List orders request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only list of order information objects.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.PostOrderAsync(Alpaca.Markets.NewOrderRequest,System.Threading.CancellationToken)">
            <summary>
            Creates new order for execution using Alpaca REST API endpoint.
            </summary>
            <param name="request">New order placement request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only order information object for newly created order.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.PostOrderAsync(Alpaca.Markets.OrderBase,System.Threading.CancellationToken)">
            <summary>
            Creates new order for execution using Alpaca REST API endpoint.
            </summary>
            <param name="orderBase">New order placement request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="orderBase"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="orderBase"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only order information object for newly created order.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.PatchOrderAsync(Alpaca.Markets.ChangeOrderRequest,System.Threading.CancellationToken)">
            <summary>
            Updates existing order using Alpaca REST API endpoint.
            </summary>
            <param name="request">Patch order request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only order information object for updated order.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetOrderAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get single order information by client order ID from Alpaca REST API endpoint.
            </summary>
            <param name="clientOrderId">Client order ID for searching.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="clientOrderId"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only order information object.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetOrderAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Get single order information by server order ID from Alpaca REST API endpoint.
            </summary>
            <param name="orderId">Server order ID for searching.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns>Read-only order information object.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.CancelOrderAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Cancels order on server by server order ID using Alpaca REST API endpoint.
            </summary>
            <param name="orderId">Server order ID for cancelling.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns><c>True</c> if order cancellation was accepted.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.CancelAllOrdersAsync(System.Threading.CancellationToken)">
            <summary>
            Cancels all open orders using Alpaca REST API endpoint.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns>List of order cancellation status objects.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetAccountAsync(System.Threading.CancellationToken)">
            <summary>
            Gets account information from Alpaca REST API endpoint.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns>Read-only account information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetAccountConfigurationAsync(System.Threading.CancellationToken)">
            <summary>
            Gets account configuration settings from Alpaca REST API endpoint.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns>Mutable version of account configuration object.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.PatchAccountConfigurationAsync(Alpaca.Markets.IAccountConfiguration,System.Threading.CancellationToken)">
            <summary>
            Updates account configuration settings using Alpaca REST API endpoint.
            </summary>
            <param name="accountConfiguration">New account configuration object for updating.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="accountConfiguration"/> argument is <c>null</c>.
            </exception>
            <returns>Mutable version of updated account configuration object.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.ListAccountActivitiesAsync(Alpaca.Markets.AccountActivitiesRequest,System.Threading.CancellationToken)">
            <summary>
            Gets list of account activities from Alpaca REST API endpoint by specific activity.
            </summary>
            <param name="request">Account activities request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only list of account activity record objects.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetPortfolioHistoryAsync(Alpaca.Markets.PortfolioHistoryRequest,System.Threading.CancellationToken)">
            <summary>
            Gets portfolio equity history from Alpaca REST API endpoint.
            </summary>
            <param name="request">Portfolio history request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only portfolio history information object.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.ListAssetsAsync(Alpaca.Markets.AssetsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets list of available assets from Alpaca REST API endpoint.
            </summary>
            <param name="request">Asset list request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only list of asset information objects.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetAssetAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Get single asset information by asset symbol from Alpaca REST API endpoint.
            </summary>
            <param name="symbol">Asset symbol for searching.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only asset information.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.ListPositionsAsync(System.Threading.CancellationToken)">
            <summary>
            Gets list of available positions from Alpaca REST API endpoint.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns>Read-only list of position information objects.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetPositionAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets position information by asset symbol from Alpaca REST API endpoint.
            </summary>
            <param name="symbol">Position asset symbol.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only position information object.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.DeleteAllPositionsAsync(System.Threading.CancellationToken)">
            <summary>
            Liquidates all open positions at market price using Alpaca REST API endpoint.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns>List of position cancellation status objects.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.DeleteAllPositionsAsync(Alpaca.Markets.DeleteAllPositionsRequest,System.Threading.CancellationToken)">
            <summary>
            Liquidates all open positions at market price using Alpaca REST API endpoint.
            </summary>
            <param name="request">All positions deletion request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>List of position cancellation status objects.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.DeletePositionAsync(Alpaca.Markets.DeletePositionRequest,System.Threading.CancellationToken)">
            <summary>
            Liquidate an open position at market price using Alpaca REST API endpoint.
            </summary>
            <param name="request">Position deletion request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>The <see cref="T:Alpaca.Markets.IOrder"/> object that represents the position liquidation order (for tracking).</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetClockAsync(System.Threading.CancellationToken)">
            <summary>
            Get current time information from Alpaca REST API endpoint.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns>Read-only clock information object.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.ListCalendarAsync(Alpaca.Markets.CalendarRequest,System.Threading.CancellationToken)">
            <summary>
            Gets list of trading days from Alpaca REST API endpoint.
            </summary>
            <param name="request">Calendar items request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only list of trading date information object.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.ListIntervalCalendarAsync(Alpaca.Markets.CalendarRequest,System.Threading.CancellationToken)">
            <summary>
            Gets list of trading open/close intervals for each day from Alpaca REST API endpoint.
            </summary>
            <param name="request">Calendar items request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only list of trading date information object.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetAnnouncementAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets single corporate action information from Alpaca REST API endpoint.
            </summary>
            <param name="announcementId">Corporate action identifier.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns>Read-only corporate action information object.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.ListAnnouncementsAsync(Alpaca.Markets.AnnouncementsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets list of different corporate actions from Alpaca REST API endpoint.
            </summary>
            <param name="request">Corporate actions request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only list of corporate action information objects.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.ListOptionContractsAsync(Alpaca.Markets.OptionContractsRequest,System.Threading.CancellationToken)">
            <summary>
            Gets list of active option contracts from Alpaca REST API endpoint. By default, only active contracts that expire before the upcoming weekend are returned.
            </summary>
            <param name="request">Option contracts request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only list of corporate action information objects.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetOptionContractByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Gets option contract from Alpaca REST API endpoint using contract identifier.
            </summary>
            <param name="contractId">Option contract unique identifier.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns>Read-only list of corporate action information objects.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.GetOptionContractBySymbolAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Gets option contract from Alpaca REST API endpoint using contract symbol name.
            </summary>
            <param name="symbol">Option contract unique symbol name.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns>Read-only list of corporate action information objects.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.ExerciseOptionsPositionByIdAsync(System.Guid,System.Threading.CancellationToken)">
            <summary>
            Exercises a held option contract, converting it into the underlying asset based on the specified terms.
            </summary>
            <param name="contractId">Option contract unique identifier.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <returns>Returns <c>true</c> if operation completed successfully.</returns>
        </member>
        <member name="M:Alpaca.Markets.IAlpacaTradingClient.ExerciseOptionsPositionBySymbolAsync(System.String,System.Threading.CancellationToken)">
            <summary>
            Exercises a held option contract, converting it into the underlying asset based on the specified terms.
            </summary>
            <param name="symbol">Option contract unique symbol name.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>Returns <c>true</c> if operation completed successfully.</returns>
        </member>
        <member name="T:Alpaca.Markets.IAnnouncement">
            <summary>
            Encapsulates corporate action announcement information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAnnouncement.Id">
            <summary>
            Gets ID that is specific to a single announcement.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAnnouncement.CorporateActionId">
            <summary>
            Gets ID that remains consistent across all announcements for the same corporate action.
            Unlike <see cref="P:Alpaca.Markets.IAnnouncement.Id"/>, this can be used to connect multiple announcements to see how
            the terms have changed throughout the lifecycle of the corporate action event.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAnnouncement.Type">
            <summary>
            Gets corporate action type.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAnnouncement.SubType">
            <summary>
            Gets corporate action sub-type.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAnnouncement.InitiatingSymbol">
            <summary>
            Gets symbol of the company initiating the announcement.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAnnouncement.InitiatingCusip">
            <summary>
            Gets CUSIP of the company initiating the announcement.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAnnouncement.TargetSymbol">
            <summary>
            Gets symbol of the child company involved in the announcement.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAnnouncement.TargetCusip">
            <summary>
            Gets CUSIP of the child company involved in the announcement.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAnnouncement.Cash">
            <summary>
            Gets the amount of cash to be paid per share held by an account on the record date.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAnnouncement.OldRate">
            <summary>
            Gets the denominator to determine any quantity change ratios in positions.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAnnouncement.NewRate">
            <summary>
            Gets the numerator to determine any quantity change ratios in positions.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IAnnouncement.GetDate(Alpaca.Markets.CorporateActionDateType)">
            <summary>
            Gets the corporate action date by date type or <c>null</c> if date not specified.
            </summary>
            <param name="dateType">Corporate action date type.</param>
            <returns>Specific date for this corporate action if it's applicable and specified.</returns>
        </member>
        <member name="T:Alpaca.Markets.IAsset">
            <summary>
            Encapsulates asset information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.AssetId">
            <summary>
            Gets unique asset identifier used by Alpaca.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.Class">
            <summary>
            Gets asset class.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.Exchange">
            <summary>
            Gets asset source exchange.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.Symbol">
            <summary>
            Gets asset symbol.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.Name">
            <summary>
            Gets asset name.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.Status">
            <summary>
            Get asset status in API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.IsTradable">
            <summary>
            Returns <c>true</c> if asset is tradable.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.Marginable">
            <summary>
            Returns <c>true</c> if asset is marginable.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.Shortable">
            <summary>
            Returns <c>true</c> if asset is shortable.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.EasyToBorrow">
            <summary>
            Returns <c>true</c> if asset is easy-to-borrow.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.Fractionable">
            <summary>
            Returns <c>true</c> if asset is fractionable.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.MinOrderSize">
            <summary>
            Gets minimum order size. This property is valid only for crypto assets.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.MinTradeIncrement">
            <summary>
            Gets amount a trade quantity can be incremented by. This property is valid only for crypto assets.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.PriceIncrement">
            <summary>
            Gets amount the price can be incremented by. This property is valid only for crypto assets.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.MaintenanceMarginRequirement">
            <summary>
            Gets the % margin requirement for the asset. This property is valid only for equity assets.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAsset.Attributes">
            <summary>
            Gets the list of asset attributes (unique asset characteristics like PTP order acceptance mode).
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IAuction">
            <summary>
            Encapsulates the basic auction information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAuction.Symbol">
            <summary>
            Gets asset symbol.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAuction.Date">
            <summary>
            Gets auction date in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAuction.Openings">
            <summary>
            Gets daily auction openings.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAuction.Closings">
            <summary>
            Gets daily auction closings.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IAuctionEntry">
            <summary>
            Encapsulates the auction entry information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAuctionEntry.TimestampUtc">
            <summary>
            Gets auction timestamp in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAuctionEntry.Exchange">
            <summary>
            Gets identifier of auction source exchange.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAuctionEntry.Price">
            <summary>
            Gets auction price level.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAuctionEntry.Size">
            <summary>
            Gets auction quantity.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IAuctionEntry.Condition">
            <summary>
            Gets auction condition.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IBar">
            <summary>
            Encapsulates basic bar information for Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IBar.Symbol">
            <summary>
            Gets asset symbol.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IBar.TimeUtc">
            <summary>
            Gets the beginning time of this bar in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IBar.Open">
            <summary>
            Gets bar open price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IBar.High">
            <summary>
            Gets bar high price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IBar.Low">
            <summary>
            Gets bar low price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IBar.Close">
            <summary>
            Gets bar close price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IBar.Volume">
            <summary>
            Gets bar trading volume.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IBar.Vwap">
            <summary>
            Gets bar volume weighted average price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IBar.TradeCount">
            <summary>
            Gets total trades count for this bar.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ICalendar">
            <summary>
            Encapsulates single trading day information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICalendar.TradingDateEst">
            <summary>
            Gets trading date in EST time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICalendar.TradingDateUtc">
            <summary>
            Gets trading date in UTC time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICalendar.TradingOpenTimeEst">
            <summary>
            Gets trading date open time in EST time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICalendar.TradingOpenTimeUtc">
            <summary>
            Gets trading date open time in UTC time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICalendar.TradingCloseTimeEst">
            <summary>
            Gets trading date close time in EST time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICalendar.TradingCloseTimeUtc">
            <summary>
            Gets trading date close time in UTC time zone.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ICashDividend">
            <summary>
            Encapsulates the cash dividend information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICashDividend.Symbol">
            <summary>
            Gets the symbol
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICashDividend.Rate">
            <summary>
            Gets the dividend rate
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICashDividend.IsForeign">
            <summary>
            Gets the foreign flag
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICashDividend.IsSpecial">
            <summary>
            Gets te special flag
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICashDividend.ProcessDate">
            <summary>
            Gets the cash dividend process date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICashDividend.ExecutionDate">
            <summary>
            Gets the cash dividend execution date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICashDividend.RecordDate">
            <summary>
            Gets the cash dividend record date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICashDividend.PayableDate">
            <summary>
            Gets the cash dividend payable date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICashDividend.DueBillOffDate">
            <summary>
            Gets the cash dividend due bill off date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICashDividend.DueBillOnDate">
            <summary>
            Gets the cash dividend due bill on date
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ICashMerger">
            <summary>
            Encapsulates the cash merger information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICashMerger.AcquirerSymbol">
            <summary>
            Gets the acquirer symbol
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICashMerger.AcquireeSymbol">
            <summary>
            Gets the acquiree symbol
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICashMerger.Rate">
            <summary>
            Gets the cash merger rate
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICashMerger.ProcessDate">
            <summary>
            Gets the cash merger process date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICashMerger.EffectiveDate">
            <summary>
            Gets the cash merger effective date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICashMerger.PayableDate">
            <summary>
            Gets the cash merger payable date
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IClock">
            <summary>
            Encapsulates current trading date information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IClock.TimestampUtc">
            <summary>
            Gets current timestamp in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IClock.IsOpen">
            <summary>
            Returns <c>true</c> if trading day is open now.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IClock.NextOpenUtc">
            <summary>
            Gets nearest trading day open time in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IClock.NextCloseUtc">
            <summary>
            Gets nearest trading day close time in UTC.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ICorporateActionsResponse">
            <summary>
            Encapsulates the historical corporate action response page with different corporate action types inside.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICorporateActionsResponse.StockAndCashMergers">
            <summary>
            Gets list of <see cref="T:Alpaca.Markets.IStockAndCashMerger"/> items from the response page.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICorporateActionsResponse.RightsDistributions">
            <summary>
            Gets list of <see cref="T:Alpaca.Markets.IRightsDistribution"/> items from the response page.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICorporateActionsResponse.WorthlessRemovals">
            <summary>
            Gets list of <see cref="T:Alpaca.Markets.IWorthlessRemoval"/> items from the response page.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICorporateActionsResponse.StockDividends">
            <summary>
            Gets list of <see cref="T:Alpaca.Markets.IStockDividend"/> items from the response page.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICorporateActionsResponse.CashDividends">
            <summary>
            Gets list of <see cref="T:Alpaca.Markets.ICashDividend"/> items from the response page.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICorporateActionsResponse.ReverseSplits">
            <summary>
            Gets list of <see cref="T:Alpaca.Markets.IReverseSplit"/> items from the response page.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICorporateActionsResponse.ForwardSplits">
            <summary>
            Gets list of <see cref="T:Alpaca.Markets.IForwardSplit"/> items from the response page.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICorporateActionsResponse.StockMergers">
            <summary>
            Gets list of <see cref="T:Alpaca.Markets.IStockMerger"/> items from the response page.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICorporateActionsResponse.NameChanges">
            <summary>
            Gets list of <see cref="T:Alpaca.Markets.INameChange"/> items from the response page.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICorporateActionsResponse.CashMergers">
            <summary>
            Gets list of <see cref="T:Alpaca.Markets.ICashMerger"/> items from the response page.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICorporateActionsResponse.Redemptions">
            <summary>
            Gets list of <see cref="T:Alpaca.Markets.IRedemption"/> items from the response page.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICorporateActionsResponse.UnitSplits">
            <summary>
            Gets list of <see cref="T:Alpaca.Markets.IUnitSplit"/> items from the response page.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICorporateActionsResponse.SpinOffs">
            <summary>
            Gets list of <see cref="T:Alpaca.Markets.ISpinOff"/> items from the response page.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICorporateActionsResponse.NextPageToken">
            <summary>
            Gets the next page token for continuation. If value of this property
            equals to <c>null</c> this page is the last one and no more data is available.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ICorrection">
            <summary>
            Encapsulates trade correction information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICorrection.OriginalTrade">
            <summary>
            Gets information about the original trade.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ICorrection.CorrectedTrade">
            <summary>
            Gets information about the corrected trade.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IDictionaryPage`1">
            <summary>
            Encapsulates single page response in Alpaca Data API v2.
            </summary>
            <typeparam name="TItem">Type of paged item (bar, trade or quote)</typeparam>
        </member>
        <member name="P:Alpaca.Markets.IDictionaryPage`1.NextPageToken">
            <summary>
            Gets the next page token for continuation. If value of this property
            equals to <c>null</c> this page is the last one and no more data is available.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IDictionaryPage`1.Items">
            <summary>
            Gets list of items for this response grouped by asset symbols.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IErrorInformation">
            <summary>
            Encapsulates extended error information from Alpaca error REST response.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IErrorInformation.Symbol">
            <summary>
            Gets the symbol name related for the error.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IErrorInformation.OpenOrdersCount">
            <summary>
            Gets the number of opened orders if this value related to the error.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IErrorInformation.DayTradingBuyingPower">
            <summary>
            Gets the day trading buying power if this value related to the error.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IErrorInformation.MaxDayTradingBuyingPowerUsed">
            <summary>
            Gets the maximal day trading buying power if this value related to the error.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IErrorInformation.MaxDayTradingBuyingPowerUsedSoFar">
            <summary>
            Gets the used maximal day trading buying power if this value related to the error.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IForwardSplit">
            <summary>
            Encapsulates the forward split information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IForwardSplit.Symbol">
            <summary>
            Gets the symbol
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IForwardSplit.NewRate">
            <summary>
            Gets the forward split new rate
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IForwardSplit.OldRate">
            <summary>
            Gets the forward split old rate
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IForwardSplit.ProcessDate">
            <summary>
            Gets the forward split process date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IForwardSplit.ExecutionDate">
            <summary>
            Gets the forward split execution date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IForwardSplit.RecordDate">
            <summary>
            Gets the forward split record date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IForwardSplit.PayableDate">
            <summary>
            Gets the forward split payable date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IForwardSplit.DueBillRedemptionDate">
            <summary>
            Gets the forward split due bill redemption date
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IGreeks">
            <summary>
            Options Greeks are a set of risk measures that are used in the options market to evaluate the risk and reward of an option.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IGreeks.Delta">
            <summary>
            Gets the rate of change of an option's price relative to a change in the price of the underlying asset.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IGreeks.Gamma">
            <summary>
            Gets the rate of change in an option's delta relative to a change in the price of the underlying asset.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IGreeks.Rho">
            <summary>
            Gets the rate of change in an option's price relative to a change in the risk-free rate of interest.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IGreeks.Theta">
            <summary>
            Gets the rate of change in an option's price relative to a change in time.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IGreeks.Vega">
            <summary>
            Gets the rate of change in an option's price relative to a change in the volatility of the underlying asset.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IHistoricalBarsClient`1">
            <summary>
            Provides unified type-safe access for Alpaca Crypto Data API via HTTP/REST.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IHistoricalBarsClient`1.ListHistoricalBarsAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Gets historical bars list for single asset from Alpaca REST API endpoint.
            </summary>
            <param name="request">Historical bars request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only list of historical bars for specified asset (with pagination data).</returns>
        </member>
        <member name="M:Alpaca.Markets.IHistoricalBarsClient`1.GetHistoricalBarsAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Gets historical bars dictionary for several assets from Alpaca REST API endpoint.
            </summary>
            <param name="request">Historical bars request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only dictionary of historical bars for specified assets (with pagination data).</returns>
        </member>
        <member name="T:Alpaca.Markets.IHistoricalQuotesClient`1">
            <summary>
            Provides unified type-safe access for Alpaca Crypto Data API via HTTP/REST.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IHistoricalQuotesClient`1.ListHistoricalQuotesAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Gets historical quotes list for single asset from Alpaca REST API endpoint.
            </summary>
            <param name="request">Historical quotes request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only list of historical quotes for specified asset (with pagination data).</returns>
        </member>
        <member name="M:Alpaca.Markets.IHistoricalQuotesClient`1.GetHistoricalQuotesAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Gets historical quotes dictionary for several assets from Alpaca REST API endpoint.
            </summary>
            <param name="request">Historical quotes request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only dictionary of historical quotes for specified assets (with pagination data).</returns>
        </member>
        <member name="T:Alpaca.Markets.IHistoricalRequest">
            <summary>
            Provides unified type-safe access to the historical data request parameters.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IHistoricalRequest.Pagination">
            <summary>
            Gets the pagination parameters for the request (page size and token).
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IHistoricalRequest`2">
            <summary>
            Provides unified type-safe access to the historical data request parameters.
            </summary>
            <typeparam name="TRequest">Historical data request type.</typeparam>
            <typeparam name="TItem">Historical response data item type.</typeparam>
        </member>
        <member name="M:Alpaca.Markets.IHistoricalRequest`2.GetValidatedRequestWithoutPageToken">
            <summary>
            Gets copy of the current request without page token and max allowed page size.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IHistoricalTradesClient`1">
            <summary>
            Provides unified type-safe access for Alpaca Crypto Data API via HTTP/REST.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IHistoricalTradesClient`1.ListHistoricalTradesAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Gets historical trades list for single asset from Alpaca REST API endpoint.
            </summary>
            <param name="request">Historical trades request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only list of historical trades for specified asset (with pagination data).</returns>
        </member>
        <member name="M:Alpaca.Markets.IHistoricalTradesClient`1.GetHistoricalTradesAsync(`0,System.Threading.CancellationToken)">
            <summary>
            Gets historical trades dictionary for several assets from Alpaca REST API endpoint.
            </summary>
            <param name="request">Historical trades request parameters.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:Alpaca.Markets.RequestValidationException">
            The <paramref name="request"/> argument contains invalid data or some required data is missing, unable to create a valid HTTP request.
            </exception>
            <exception cref="T:System.Net.Http.HttpRequestException">
            The request failed due to an underlying issue such as network connectivity, DNS failure, server certificate validation or timeout.
            </exception>
            <exception cref="T:Alpaca.Markets.RestClientErrorException">
            The response contains an error message or the received response cannot be deserialized properly due to JSON schema mismatch.
            </exception>
            <exception cref="T:System.Net.Sockets.SocketException">
            The initial TPC socket connection failed due to an underlying low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Threading.Tasks.TaskCanceledException">
            .NET Core and .NET 5 and later only: The request failed due to timeout.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="request"/> argument is <c>null</c>.
            </exception>
            <returns>Read-only dictionary of historical trades for specified assets (with pagination data).</returns>
        </member>
        <member name="T:Alpaca.Markets.IIntervalCalendar">
            <summary>
            Encapsulates single trading day information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IIntervalCalendar.Trading">
            <summary>
            Gets trading open and close times in EST time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IIntervalCalendar.Session">
            <summary>
            Gets session open and close times in EST time zone.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ILimitUpLimitDown">
            <summary>
            Encapsulates the basic LULD update information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ILimitUpLimitDown.Symbol">
            <summary>
            Gets asset symbol.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ILimitUpLimitDown.TimestampUtc">
            <summary>
            Gets the LULD update timestamp in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ILimitUpLimitDown.LimitUpPrice">
            <summary>
            Gets the current limit up price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ILimitUpLimitDown.LimitDownPrice">
            <summary>
            Gets the current limit down price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ILimitUpLimitDown.Indicator">
            <summary>
            Gets the indicator name.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ILimitUpLimitDown.Tape">
            <summary>
            Gets tape.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IMarketMover">
            <summary>
            Encapsulates the single market mover information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IMarketMover.Symbol">
            <summary>
            Gets the instrument symbol name.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IMarketMover.Price">
            <summary>
            Gets the current instrument price value.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IMarketMover.Change">
            <summary>
            Gets the current instrument price change value.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IMarketMover.PercentChange">
            <summary>
            Gets the current instrument price change value in percents.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IMarketMovers">
            <summary>
            Encapsulates two lists of market movers from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IMarketMovers.Losers">
            <summary>
            Gets list of the top market losers.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IMarketMovers.Gainers">
            <summary>
            Gets list of the top market gainers.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IMultiPage`1">
            <summary>
            Encapsulates single page response in Alpaca Data API v2.
            </summary>
            <typeparam name="TItems">Type of paged item (bar, trade or quote)</typeparam>
        </member>
        <member name="P:Alpaca.Markets.IMultiPage`1.NextPageToken">
            <summary>
            Gets the next page token for continuation. If value of this property
            equals to <c>null</c> this page is the last one and no more data is available.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IMultiPage`1.Items">
            <summary>
            Gets list of items for this response grouped by asset symbols.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.INameChange">
            <summary>
            Encapsulates the name change information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.INameChange.OldSymbol">
            <summary>
            Gets the old symbol
            </summary>
        </member>
        <member name="P:Alpaca.Markets.INameChange.NewSymbol">
            <summary>
            Gets the new symbol
            </summary>
        </member>
        <member name="P:Alpaca.Markets.INameChange.ProcessDate">
            <summary>
            Gets the name change process date
            </summary>
        </member>
        <member name="T:Alpaca.Markets.INewsArticle">
            <summary>
            Encapsulates the basic news article information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.INewsArticle.Id">
            <summary>
            Gets news article unique identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.INewsArticle.Headline">
            <summary>
            Gets headline or title of the article.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.INewsArticle.CreatedAtUtc">
            <summary>
            Gets news article creation timestamp in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.INewsArticle.UpdatedAtUtc">
            <summary>
            Gets news article updating timestamp in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.INewsArticle.Author">
            <summary>
            Gets original author of news article.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.INewsArticle.Summary">
            <summary>
            Gets summary text for the article (may be first sentence of content).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.INewsArticle.Content">
            <summary>
            Gets content of the news article (might contain HTML).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.INewsArticle.ArticleUrl">
            <summary>
            Gets URL of article (if applicable).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.INewsArticle.Source">
            <summary>
            Gets source where the news originated from.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.INewsArticle.Symbols">
            <summary>
            Gets list of related or mentioned symbols.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.INewsArticle.ThumbImageUrl">
            <summary>
            Gets the thumbnail image URL for the news article.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.INewsArticle.SmallImageUrl">
            <summary>
            Gets the small image URL for the news article.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.INewsArticle.LargeImageUrl">
            <summary>
            Gets the large image URL for the news article.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IOptionContract">
            <summary>
            
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionContract.ContractId">
            <summary>
            Gets unique option contract identifier used by Alpaca.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionContract.Symbol">
            <summary>
            Get option contract symbol.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionContract.Name">
            <summary>
            Gets option contract name.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionContract.Status">
            <summary>
            Get option contract status in API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionContract.IsTradable">
            <summary>
            Returns <c>true</c> if asset is tradable.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionContract.Size">
            <summary>
            Get option contract size.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionContract.OptionType">
            <summary>
            Get option contract type.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionContract.StrikePrice">
            <summary>
            Get option contract strike price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionContract.ExpirationDate">
            <summary>
            Get option contract expiration date.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionContract.OptionStyle">
            <summary>
            Get option contract execution style.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionContract.RootSymbol">
            <summary>
            Get option contract root asset <see cref="P:Alpaca.Markets.IAsset.Symbol"/> property.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionContract.UnderlyingSymbol">
            <summary>
            Get option contract underlying asset <see cref="P:Alpaca.Markets.IAsset.Symbol"/> property.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionContract.UnderlyingAssetId">
            <summary>
            Get option contract underlying asset <see cref="P:Alpaca.Markets.IAsset.AssetId"/> property.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionContract.OpenInterest">
            <summary>
            Get option contract open interest.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionContract.OpenInterestDate">
            <summary>
            Get option contract open interest date.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionContract.ClosePrice">
            <summary>
            Get option contract close price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionContract.ClosePriceDate">
            <summary>
            Get option contract close price date.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IOptionSnapshot">
            <summary>
            Encapsulates option snapshot information from the Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionSnapshot.Symbol">
            <summary>
            Gets the snapshot's option symbol.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionSnapshot.Quote">
            <summary>
            Gets the latest quote information.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionSnapshot.Trade">
            <summary>
            Gets the latest trade information.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionSnapshot.Greeks">
            <summary>
            Gets the option greeks data.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOptionSnapshot.ImpliedVolatility">
            <summary>
            Gets the implied volatility of the option.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IOrder">
            <summary>
            Encapsulates order information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.OrderId">
            <summary>
            Gets unique server-side order identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.ClientOrderId">
            <summary>
            Gets client-side (user specified) order identifier. Client Order IDs must be unique.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.CreatedAtUtc">
            <summary>
            Gets order creation timestamp in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.UpdatedAtUtc">
            <summary>
            Gets last order update timestamp in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.SubmittedAtUtc">
            <summary>
            Gets order submission timestamp in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.FilledAtUtc">
            <summary>
            Gets order fill timestamp in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.ExpiredAtUtc">
            <summary>
            Gets order expiration timestamp in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.CancelledAtUtc">
            <summary>
            Gets order cancellation timestamp in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.FailedAtUtc">
            <summary>
            Gets order rejection timestamp in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.ReplacedAtUtc">
            <summary>
            Gets order replacement timestamp in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.AssetId">
            <summary>
            Gets unique asset identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.Symbol">
            <summary>
            Gets asset symbol.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.AssetClass">
            <summary>
            Gets asset class.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.Notional">
            <summary>
            Gets original notional order quantity (with the fractional part).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.Quantity">
            <summary>
            Gets original fractional order quantity (with the fractional part).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.FilledQuantity">
            <summary>
            Gets filled order quantity (with the fractional part).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.IntegerQuantity">
            <summary>
            Gets original order quantity (rounded to the nearest integer).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.IntegerFilledQuantity">
            <summary>
            Gets filled order quantity (rounded to the nearest integer).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.OrderType">
            <summary>
            Gets order type.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.OrderClass">
            <summary>
            Gets order class.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.OrderSide">
            <summary>
            Gets order side (buy or sell).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.TimeInForce">
            <summary>
            Gets order duration.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.LimitPrice">
            <summary>
            Gets order limit price for limit and stop-limit orders.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.StopPrice">
            <summary>
            Gets order stop price for stop and stop-limit orders.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.TrailOffsetInDollars">
            <summary>
            Gets the profit taking limit price for advanced order types.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.TrailOffsetInPercent">
            <summary>
            Gets the stop loss stop price for advanced order types.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.HighWaterMark">
            <summary>
            Gets the current high water mark price for trailing stop orders.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.AverageFillPrice">
            <summary>
            Gets order average fill price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.OrderStatus">
            <summary>
            Gets current order status.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.ReplacedByOrderId">
            <summary>
            Gets the order ID that this order was replaced by.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.ReplacesOrderId">
            <summary>
            Gets the order ID that this order replaces.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrder.Legs">
            <summary>
            Gets legs for this order.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IOrderActionStatus">
            <summary>
            Encapsulates order action status information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrderActionStatus.OrderId">
            <summary>
            Gets unique server-side order identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrderActionStatus.IsSuccess">
            <summary>
            Returns <c>true</c> if requested action completed successfully.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IOrderBook">
            <summary>
            Encapsulates the basic order book information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrderBook.Symbol">
            <summary>
            Gets asset name.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrderBook.TimestampUtc">
            <summary>
            Gets quote timestamp in UTC time zone.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrderBook.Exchange">
            <summary>
            Gets identifier of source exchange.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrderBook.Bids">
            <summary>
            Gets bids price/quantity pairs list.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrderBook.Asks">
            <summary>
            Gets asks price/quantity pairs list.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrderBook.IsReset">
            <summary>
            Gets the order book reset flag.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IOrderBookEntry">
            <summary>
            Encapsulates the order book price/size pair information.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrderBookEntry.Price">
            <summary>
            Gets price level.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IOrderBookEntry.Size">
            <summary>
            Gets quantity.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IPage`1">
            <summary>
            Encapsulates single page response in Alpaca Data API v2.
            </summary>
            <typeparam name="TItems">Type of paged item (bar, trade or quote)</typeparam>
        </member>
        <member name="P:Alpaca.Markets.IPage`1.Symbol">
            <summary>
            Gets the asset symbol for all items on page.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPage`1.NextPageToken">
            <summary>
            Gets the next page token for continuation. If value of this property
            equals to <c>null</c> this page is the last one and no more data is available.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPage`1.Items">
            <summary>
            Gets list of items for this response.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IPortfolioHistory">
            <summary>
            Encapsulates portfolio history information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPortfolioHistory.Items">
            <summary>
            Gets historical information items list with timestamps.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPortfolioHistory.TimeFrame">
            <summary>
            Gets time frame value for this historical view.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPortfolioHistory.BaseValue">
            <summary>
            Gets base value for this historical view.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IPortfolioHistoryItem">
            <summary>
            Encapsulates portfolio history information item from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPortfolioHistoryItem.Equity">
            <summary>
            Gets historical equity value.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPortfolioHistoryItem.ProfitLoss">
            <summary>
            Gets historical profit/loss value.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPortfolioHistoryItem.ProfitLossPercentage">
            <summary>
            Gets historical profit/loss value as percentages.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPortfolioHistoryItem.TimestampUtc">
            <summary>
            Gets historical timestamp value in UTC time zone.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IPosition">
            <summary>
            Encapsulates position information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.AssetId">
            <summary>
            Gets unique asset identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.Symbol">
            <summary>
            Gets asset symbol.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.Exchange">
            <summary>
            Gets asset exchange.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.AssetClass">
            <summary>
            Gets asset class.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.AverageEntryPrice">
            <summary>
            Gets average entry price for position.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.Quantity">
            <summary>
            Get position quantity (with the fractional part).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.IntegerQuantity">
            <summary>
            Get position quantity (rounded to the nearest integer).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.AvailableQuantity">
            <summary>
            Get total number of shares available minus open orders (with the fractional part).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.IntegerAvailableQuantity">
            <summary>
            Get total number of shares available minus open orders (rounded to the nearest integer).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.Side">
            <summary>
            Get position side (short or long).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.MarketValue">
            <summary>
            Get current position market value.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.CostBasis">
            <summary>
            Get position cost basis.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.UnrealizedProfitLoss">
            <summary>
            Get position unrealized profit loss.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.UnrealizedProfitLossPercent">
            <summary>
            Get position unrealized profit loss in percent.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.IntradayUnrealizedProfitLoss">
            <summary>
            Get position intraday unrealized profit loss.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.IntradayUnrealizedProfitLossPercent">
            <summary>
            Get position intraday unrealized profit loss in percent.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.AssetCurrentPrice">
            <summary>
            Gets position's asset current price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.AssetLastPrice">
            <summary>
            Gets position's asset last trade price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPosition.AssetChangePercent">
            <summary>
            Gets position's asset price change in percent.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IPositionActionStatus">
            <summary>
            Encapsulates position action status information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPositionActionStatus.Symbol">
            <summary>
            Gets processed position asset symbol.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IPositionActionStatus.IsSuccess">
            <summary>
            Returns <c>true</c> if requested action completed successfully.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IQuote">
            <summary>
            Encapsulates the basic quote information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IQuote.Symbol">
            <summary>
            Gets asset symbol.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IQuote.TimestampUtc">
            <summary>
            Gets quote timestamp in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IQuote.BidExchange">
            <summary>
            Gets identifier of bid source exchange.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IQuote.AskExchange">
            <summary>
            Gets identifier of ask source exchange.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IQuote.BidPrice">
            <summary>
            Gets bid price level (highest buy offer).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IQuote.AskPrice">
            <summary>
            Gets ask price level (lowest sell offer).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IQuote.BidSize">
            <summary>
            Gets bid quantity.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IQuote.AskSize">
            <summary>
            Gets ask quantity.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IQuote.Tape">
            <summary>
            Gets tape where trade occurred.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IQuote.Conditions">
            <summary>
            Gets trade conditions list.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IRedemption">
            <summary>
            Encapsulates the redemption information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IRedemption.Symbol">
            <summary>
            Gets the symbol
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IRedemption.Rate">
            <summary>
            Gets the dividend rate
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IRedemption.ProcessDate">
            <summary>
            Gets the redemption process date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IRedemption.PayableDate">
            <summary>
            Gets the redemption payable date
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IReverseSplit">
            <summary>
            Encapsulates the reverse split information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IReverseSplit.Symbol">
            <summary>
            Gets the symbol
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IReverseSplit.NewRate">
            <summary>
            Gets the reverse split new rate
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IReverseSplit.OldRate">
            <summary>
            Gets the reverse split old rate
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IReverseSplit.ProcessDate">
            <summary>
            Gets the reverse split process date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IReverseSplit.ExecutionDate">
            <summary>
            Gets the reverse split execution date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IReverseSplit.RecordDate">
            <summary>
            Gets the reverse split record date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IReverseSplit.PayableDate">
            <summary>
            Gets the reverse split payable date
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IRightsDistribution">
            <summary>
            Encapsulates the right distribution information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IRightsDistribution.SourceSymbol">
            <summary>
            Gets the source symbol
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IRightsDistribution.NewSymbol">
            <summary>
            Gets the new symbol
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IRightsDistribution.Rate">
            <summary>
            Gets the right distribution rate
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IRightsDistribution.ProcessDate">
            <summary>
            Gets the right distribution process date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IRightsDistribution.ExecutionDate">
            <summary>
            Gets the right distribution execution date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IRightsDistribution.PayableDate">
            <summary>
            Gets the right distribution payable date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IRightsDistribution.RecordDate">
            <summary>
            Gets the right distribution record date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IRightsDistribution.ExpirationDate">
            <summary>
            Gets the right distribution expiration date
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ISnapshot">
            <summary>
            Encapsulates snapshot information from the Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ISnapshot.Symbol">
            <summary>
            Gets the snapshot's asset symbol.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ISnapshot.Quote">
            <summary>
            Gets the latest quote information.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ISnapshot.Trade">
            <summary>
            Gets the latest trade information.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ISnapshot.MinuteBar">
            <summary>
            Gets the current minute bar information.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ISnapshot.CurrentDailyBar">
            <summary>
            Gets the current daily bar information.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ISnapshot.PreviousDailyBar">
            <summary>
            Gets the previous daily bar information.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ISpinOff">
            <summary>
            Encapsulates the spin-off information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ISpinOff.SourceSymbol">
            <summary>
            Gets the source symbol
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ISpinOff.NewSymbol">
            <summary>
            Gets the new symbol
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ISpinOff.SourceRate">
            <summary>
            Gets the spin-off source rate
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ISpinOff.NewRate">
            <summary>
            Gets the spin-off new rate
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ISpinOff.ProcessDate">
            <summary>
            Gets the spin-off process date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ISpinOff.ExecutionDate">
            <summary>
            Gets the spin-off execution date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ISpinOff.PayableDate">
            <summary>
            Gets the spin-off payable date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ISpinOff.RecordDate">
            <summary>
            Gets the spin-off record date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ISpinOff.DueBillRedemptionDate">
            <summary>
            Gets the spin-off due bill redemption date
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IStatus">
            <summary>
            Encapsulates the basic trading status update information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStatus.Symbol">
            <summary>
            Gets asset symbol.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStatus.TimestampUtc">
            <summary>
            Gets status timestamp in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStatus.StatusCode">
            <summary>
            Gets status code.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStatus.StatusMessage">
            <summary>
            Gets status message.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStatus.ReasonCode">
            <summary>
            Gets reason code.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStatus.ReasonMessage">
            <summary>
            Gets reason message.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStatus.Tape">
            <summary>
            Gets tape.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IStockAndCashMerger">
            <summary>
            Encapsulates the stock and cash merger information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStockAndCashMerger.AcquirerSymbol">
            <summary>
            Gets the acquirer symbol
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStockAndCashMerger.AcquireeSymbol">
            <summary>
            Gets the acquiree symbol
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStockAndCashMerger.AcquirerRate">
            <summary>
            Gets the acquirer rate
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStockAndCashMerger.AcquireeRate">
            <summary>
            Gets the acquiree rate
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStockAndCashMerger.CashRate">
            <summary>
            Gets the cash rate
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStockAndCashMerger.ProcessDate">
            <summary>
            Gets the stock and cash merger process date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStockAndCashMerger.EffectiveDate">
            <summary>
            Gets the stock and cash merger effective date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStockAndCashMerger.PayableDate">
            <summary>
            Gets the stock and cash merger payable date
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IStockDividend">
            <summary>
            Encapsulates the stock dividend information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStockDividend.Symbol">
            <summary>
            Gets the symbol
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStockDividend.Rate">
            <summary>
            Gets the dividend rate
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStockDividend.ProcessDate">
            <summary>
            Gets the stock dividend process date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStockDividend.ExecutionDate">
            <summary>
            Gets the stock dividend execution date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStockDividend.RecordDate">
            <summary>
            Gets the stock dividend record date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStockDividend.PayableDate">
            <summary>
            Gets the stock dividend payable date
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IStockMerger">
            <summary>
            Encapsulates the stock merger information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStockMerger.AcquirerSymbol">
            <summary>
            Gets the acquirer symbol
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStockMerger.AcquireeSymbol">
            <summary>
            Gets the acquiree symbol
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStockMerger.AcquirerRate">
            <summary>
            Gets the acquirer rate
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStockMerger.AcquireeRate">
            <summary>
            Gets the acquiree rate
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStockMerger.ProcessDate">
            <summary>
            Gets the stock merger process date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStockMerger.EffectiveDate">
            <summary>
            Gets the stock merger effective date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStockMerger.PayableDate">
            <summary>
            Gets the stock merger payable date
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IStreamingClient">
            <summary>
            Provides unified type-safe access for websocket streaming APIs.
            </summary>
        </member>
        <member name="E:Alpaca.Markets.IStreamingClient.Connected">
            <summary>
            Occurs when stream is successfully connected.
            </summary>
        </member>
        <member name="E:Alpaca.Markets.IStreamingClient.SocketOpened">
            <summary>
            Occurs when underlying web socket is successfully opened.
            </summary>
        </member>
        <member name="E:Alpaca.Markets.IStreamingClient.SocketClosed">
            <summary>
            Occurs when underlying web socket is successfully closed.
            </summary>
        </member>
        <member name="E:Alpaca.Markets.IStreamingClient.OnError">
            <summary>
            Occurs when any error occurs in stream.
            </summary>
        </member>
        <member name="E:Alpaca.Markets.IStreamingClient.OnWarning">
            <summary>
            Occurs in case of non-critical events.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IStreamingClient.ConnectAsync(System.Threading.CancellationToken)">
            <summary>
            Opens connection to a streaming API.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Sockets.SocketException">
            The underlying TPC socket connection failed due to an low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Net.WebSockets.WebSocketException">
            The WebSocket connection failed due to an high-level protocol or connection issue.
            </exception>
            <returns>Awaitable task object for handling action completion in asynchronous mode.</returns>
        </member>
        <member name="M:Alpaca.Markets.IStreamingClient.ConnectAndAuthenticateAsync(System.Threading.CancellationToken)">
            <summary>
            Opens connection to a streaming API and awaits for authentication response.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Sockets.SocketException">
            The underlying TPC socket connection failed due to an low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Net.WebSockets.WebSocketException">
            The WebSocket connection failed due to an high-level protocol or connection issue.
            </exception>
            <returns>Awaitable task object for handling client authentication event in asynchronous mode.</returns>
        </member>
        <member name="M:Alpaca.Markets.IStreamingClient.DisconnectAsync(System.Threading.CancellationToken)">
            <summary>
            Closes connection to a streaming API.
            </summary>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.Net.Sockets.SocketException">
            The underlying TPC socket connection failed due to an low-level network connectivity issue.
            </exception>
            <exception cref="T:System.Net.WebSockets.WebSocketException">
            The WebSocket connection failed due to an high-level protocol or connection issue.
            </exception>
            <returns>Awaitable task object for handling action completion in asynchronous mode.</returns>
        </member>
        <member name="T:Alpaca.Markets.IStreamingDataClient">
            <summary>
            Provides unified type-safe access for websocket streaming APIs with data subscriptions.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.IStreamingDataClient.GetTradeSubscription">
            <summary>
            Gets the trade updates subscription for all assets.
            </summary>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.IStreamingDataClient.GetTradeSubscription(System.String)">
            <summary>
            Gets the trade updates subscription for the <paramref name="symbol"/> asset.
            </summary>
            <param name="symbol">Alpaca asset symbol.</param>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.IStreamingDataClient.GetQuoteSubscription">
            <summary>
            Gets the quote updates subscription for all assets.
            </summary>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.IStreamingDataClient.GetQuoteSubscription(System.String)">
            <summary>
            Gets the quote updates subscription for the <paramref name="symbol"/> asset.
            </summary>
            <param name="symbol">Alpaca asset symbol.</param>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.IStreamingDataClient.GetMinuteBarSubscription">
            <summary>
            Gets the minute aggregate (bar) subscription for all assets.
            </summary>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.IStreamingDataClient.GetMinuteBarSubscription(System.String)">
            <summary>
            Gets the minute aggregate (bar) subscription for the <paramref name="symbol"/> asset.
            </summary>
            <param name="symbol">Alpaca asset symbol.</param>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.IStreamingDataClient.GetDailyBarSubscription(System.String)">
            <summary>
            Gets the daily aggregate (bar) subscription for the <paramref name="symbol"/> asset.
            </summary>
            <param name="symbol">Alpaca asset symbol.</param>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.IStreamingDataClient.GetUpdatedBarSubscription(System.String)">
            <summary>
            Gets the updated aggregate (bar) subscription for the <paramref name="symbol"/> asset.
            </summary>
            <param name="symbol">Alpaca asset symbol.</param>
            <exception cref="T:System.OverflowException">
            The underlying subscriptions dictionary contains too many elements.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>
            Subscription object for tracking updates via the <see cref="E:Alpaca.Markets.IAlpacaDataSubscription`1.Received"/> event.
            </returns>
        </member>
        <member name="T:Alpaca.Markets.ISubscriptionHandler">
            <summary>
            Provides unified type-safe access for subscribing/unsubscribing streaming events.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.ISubscriptionHandler.SubscribeAsync(Alpaca.Markets.IAlpacaDataSubscription)">
            <summary>
            Subscribes a single <paramref name="subscription"/> object for receiving data from the server.
            </summary>
            <param name="subscription">Subscription target - asset and update type holder.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="subscription"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.ISubscriptionHandler.SubscribeAsync(Alpaca.Markets.IAlpacaDataSubscription,System.Threading.CancellationToken)">
            <summary>
            Subscribes a single <paramref name="subscription"/> object for receiving data from the server.
            </summary>
            <param name="subscription">Subscription target - asset and update type holder.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="subscription"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.ISubscriptionHandler.SubscribeAsync(System.Collections.Generic.IEnumerable{Alpaca.Markets.IAlpacaDataSubscription})">
            <summary>
            Subscribes several <paramref name="subscriptions"/> objects for receiving data from the server.
            </summary>
            <param name="subscriptions">List of subscription targets - assets and update type holders.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="subscriptions"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.ISubscriptionHandler.SubscribeAsync(System.Collections.Generic.IEnumerable{Alpaca.Markets.IAlpacaDataSubscription},System.Threading.CancellationToken)">
            <summary>
            Subscribes several <paramref name="subscriptions"/> objects for receiving data from the server.
            </summary>
            <param name="subscriptions">List of subscription targets - assets and update type holders.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="subscriptions"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.ISubscriptionHandler.UnsubscribeAsync(Alpaca.Markets.IAlpacaDataSubscription)">
            <summary>
            Unsubscribes the single <paramref name="subscription"/> object for receiving data from the server.
            </summary>
            <param name="subscription">Subscription target - asset and update type holder.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="subscription"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.ISubscriptionHandler.UnsubscribeAsync(Alpaca.Markets.IAlpacaDataSubscription,System.Threading.CancellationToken)">
            <summary>
            Unsubscribes the single <paramref name="subscription"/> object for receiving data from the server.
            </summary>
            <param name="subscription">Subscription target - asset and update type holder.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="subscription"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.ISubscriptionHandler.UnsubscribeAsync(System.Collections.Generic.IEnumerable{Alpaca.Markets.IAlpacaDataSubscription})">
            <summary>
            Unsubscribes several <paramref name="subscriptions"/> objects for receiving data from the server.
            </summary>
            <param name="subscriptions">List of subscription targets - assets and update type holders.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="subscriptions"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.ISubscriptionHandler.UnsubscribeAsync(System.Collections.Generic.IEnumerable{Alpaca.Markets.IAlpacaDataSubscription},System.Threading.CancellationToken)">
            <summary>
            Unsubscribes several <paramref name="subscriptions"/> objects for receiving data from the server.
            </summary>
            <param name="subscriptions">List of subscription targets - assets and update type holders.</param>
            <param name="cancellationToken">A cancellation token that can be used by other objects or threads to receive notice of cancellation.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="subscriptions"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="T:Alpaca.Markets.ITrade">
            <summary>
            Encapsulates the basic trade information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITrade.Symbol">
            <summary>
            Gets asset symbol.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITrade.TimestampUtc">
            <summary>
            Gets trade timestamp in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITrade.Price">
            <summary>
            Gets trade price level.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITrade.Size">
            <summary>
            Gets trade quantity.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITrade.TradeId">
            <summary>
            Gets trade identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITrade.Exchange">
            <summary>
            Gets trade source exchange identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITrade.Tape">
            <summary>
            Gets tape where trade occurred.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITrade.Update">
            <summary>
            Gets trade update reason if any.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITrade.Conditions">
            <summary>
            Gets trade conditions list.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITrade.TakerSide">
            <summary>
            Gets crypto trade taker side.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ITradeUpdate">
            <summary>
            Encapsulates trade update information from Alpaca streaming API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITradeUpdate.Event">
            <summary>
            Gets trade update reason.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITradeUpdate.ExecutionId">
            <summary>
            Gets optional order execution identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITradeUpdate.Price">
            <summary>
            Gets updated trade price level.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITradeUpdate.PositionQuantity">
            <summary>
            Gets updated position quantity (with the fractional part).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITradeUpdate.PositionIntegerQuantity">
            <summary>
            Gets updated position quantity (rounded to the nearest integer).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITradeUpdate.TradeQuantity">
            <summary>
            Gets updated trade quantity (with the fractional part).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITradeUpdate.TradeIntegerQuantity">
            <summary>
            Gets updated trade quantity (rounded to the nearest integer).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITradeUpdate.TimestampUtc">
            <summary>
            Gets update timestamp in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITradeUpdate.Order">
            <summary>
            Gets related order object.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IUnitSplit">
            <summary>
            Encapsulates the unit split information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IUnitSplit.NewSymbol">
            <summary>
            Gets the new symbol
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IUnitSplit.OldSymbol">
            <summary>
            Gets the old symbol
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IUnitSplit.AlternateSymbol">
            <summary>
            Gets the alternate symbol
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IUnitSplit.NewRate">
            <summary>
            Gets the unit split new rate
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IUnitSplit.OldRate">
            <summary>
            Gets the unit split old rate
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IUnitSplit.AlternateRate">
            <summary>
            Gets the unit split alternate rate
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IUnitSplit.ProcessDate">
            <summary>
            Gets the unit split process date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IUnitSplit.EffectiveDate">
            <summary>
            Gets the unit split effective date
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IUnitSplit.PayableDate">
            <summary>
            Gets the unit split payable date
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IWatchList">
            <summary>
            Encapsulates watch list information from Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IWatchList.WatchListId">
            <summary>
            Gets unique watch list identifier.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IWatchList.CreatedUtc">
            <summary>
            Gets watch list creation time in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IWatchList.UpdatedUtc">
            <summary>
            Gets watch list last update time in UTC.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IWatchList.Name">
            <summary>
            Gets watch list user-defined name.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IWatchList.AccountId">
            <summary>
            Gets <see cref="P:Alpaca.Markets.IAccount.AccountId"/> for this watch list.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IWatchList.Assets">
            <summary>
            Gets the content of this watchlist, in the order as registered by the client.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IWorthlessRemoval">
            <summary>
            Encapsulates the worthless removal information from Alpaca APIs.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IWorthlessRemoval.Symbol">
            <summary>
            Gets the symbol
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IWorthlessRemoval.ProcessDate">
            <summary>
            Gets the worthless removal process date
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IRequestWithTimeInterval`1">
            <summary>
            Encapsulates access point for setting time interval filtering on request instance.
            </summary>
            <typeparam name="TInterval">The sort of time interval (inclusive or exclusive).</typeparam>
        </member>
        <member name="M:Alpaca.Markets.IRequestWithTimeInterval`1.SetInterval(`0)">
            <summary>
            Sets time interval value for the current request instance.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ITimeInterval">
            <summary>
            Encapsulates time interval (from and till date/time points) for filtering requires.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITimeInterval.From">
            <summary>
            Gets the starting date/time point of filtering interval.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITimeInterval.Into">
            <summary>
            Gets the ending date/time point of filtering interval.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IInclusiveTimeInterval">
            <summary>
            Represents the inclusive version of the <see cref="T:Alpaca.Markets.ITimeInterval"/> interface.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IExclusiveTimeInterval">
            <summary>
            Represents the exclusive version of the <see cref="T:Alpaca.Markets.ITimeInterval"/> interface.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.LatestBestBidOfferListRequest">
            <summary>
            Encapsulates data for latest crypto XBBO request on Alpaca Data API v2.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.LatestBestBidOfferListRequest.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{Alpaca.Markets.CryptoExchange})">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.LatestBestBidOfferListRequest"/> object.
            </summary>
            <param name="symbols">Asset symbols list for data retrieval.</param>
            <param name="exchanges">Crypto exchanges list for data retrieval.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbols"/> or <paramref name="exchanges"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.LatestBestBidOfferListRequest.#ctor(System.Collections.Generic.IEnumerable{System.String},Alpaca.Markets.CryptoExchange)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.LatestBestBidOfferListRequest"/> object.
            </summary>
            <param name="symbols">Asset symbols list for data retrieval.</param>
            <param name="exchange">Crypto exchange for data retrieval.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.LatestBestBidOfferListRequest.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.LatestBestBidOfferListRequest"/> object.
            </summary>
            <param name="symbols">Asset symbols list for data retrieval.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbols"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="P:Alpaca.Markets.LatestBestBidOfferListRequest.Symbols">
            <summary>
            Gets asset symbols for data retrieval.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.LatestBestBidOfferListRequest.Exchanges">
            <summary>
            Gets crypto exchanges list for data retrieval (empty list means 'all exchanges').
            </summary>
        </member>
        <member name="T:Alpaca.Markets.LatestBestBidOfferRequest">
            <summary>
            Encapsulates data for latest crypto XBBO request on Alpaca Data API v2.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.LatestBestBidOfferRequest.#ctor(System.String,System.Collections.Generic.IEnumerable{Alpaca.Markets.CryptoExchange})">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.LatestBestBidOfferRequest"/> object.
            </summary>
            <param name="symbol">Asset symbol for data retrieval.</param>
            <param name="exchanges">Crypto exchanges list for data retrieval.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> or <paramref name="exchanges"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.LatestBestBidOfferRequest.#ctor(System.String,Alpaca.Markets.CryptoExchange)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.LatestBestBidOfferRequest"/> object.
            </summary>
            <param name="symbol">Asset symbol for data retrieval.</param>
            <param name="exchange">Crypto exchange for data retrieval.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.LatestBestBidOfferRequest.#ctor(System.String)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.LatestBestBidOfferRequest"/> object.
            </summary>
            <param name="symbol">Asset symbol for data retrieval.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="P:Alpaca.Markets.LatestBestBidOfferRequest.Symbol">
            <summary>
            Gets asset symbol for data retrieval.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.LatestBestBidOfferRequest.Exchanges">
            <summary>
            Gets crypto exchanges list for data retrieval (empty list means 'all exchanges').
            </summary>
        </member>
        <member name="T:Alpaca.Markets.LatestDataRequest">
            <summary>
            Encapsulates data for latest crypto data requests on Alpaca Data API v2.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.LatestDataRequest.#ctor(System.String,Alpaca.Markets.CryptoExchange)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.LatestDataRequest"/> object.
            </summary>
            <param name="symbol">Asset symbol for data retrieval.</param>
            <param name="exchange">Crypto exchange for data retrieval.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="P:Alpaca.Markets.LatestDataRequest.Symbol">
            <summary>
            Gets asset symbol for data retrieval.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.LatestDataRequest.Exchange">
            <summary>
            Gets crypto exchange for data retrieval.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.SnapshotDataRequest">
            <summary>
            Encapsulates data for snapshot crypto data requests on Alpaca Data API v2.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.SnapshotDataRequest.#ctor(System.String,Alpaca.Markets.CryptoExchange)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.SnapshotDataRequest"/> object.
            </summary>
            <param name="symbol">Asset symbol for data retrieval.</param>
            <param name="exchange">Crypto exchange for data retrieval.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="P:Alpaca.Markets.SnapshotDataRequest.Symbol">
            <summary>
            Gets asset symbol for data retrieval.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.SnapshotDataRequest.Exchange">
            <summary>
            Gets crypto exchange for data retrieval.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.TimeInterval">
            <summary>
            Encapsulates implementations of the <see cref="T:Alpaca.Markets.ITimeInterval"/> interface and helper methods for it.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.IsEmpty(Alpaca.Markets.ITimeInterval)">
            <summary>
            Gets boolean flag signals that time interval is empty (both start and end date equal to <c>null</c>).
            </summary>
            <param name="interval">Target time interval for checking.</param>
            <returns>
            Returns <c>true</c> if both <see cref="P:Alpaca.Markets.ITimeInterval.From"/> and <see cref="P:Alpaca.Markets.ITimeInterval.Into"/> equal to <c>null</c>.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.IsOpen(Alpaca.Markets.ITimeInterval)">
            <summary>
            Gets boolean flag signals that time interval is open (both start or end date equal to <c>null</c>).
            </summary>
            <param name="interval">Target time interval for checking.</param>
            <returns>
            Returns <c>true</c> if both <see cref="P:Alpaca.Markets.ITimeInterval.From"/> or <see cref="P:Alpaca.Markets.ITimeInterval.Into"/> equal to <c>null</c>.
            </returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.GetExclusiveIntervalTillThat(System.DateTime)">
            <summary>
            Gets exclusive open time interval ending at the <paramref name="value"/> date/time point.
            </summary>
            <param name="value">Ending date/time point for filtering.</param>
            <returns>Inclusive open time interval.</returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.GetInclusiveIntervalTillThat(System.DateTime)">
            <summary>
            Gets inclusive open time interval ending at the <paramref name="value"/> date/time point.
            </summary>
            <param name="value">Ending date/time point for filtering.</param>
            <returns>Inclusive open time interval.</returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.GetExclusiveIntervalFromThat(System.DateTime)">
            <summary>
            Gets exclusive open time interval starting from the <paramref name="value"/> date/time point.
            </summary>
            <param name="value">Starting date/time point for filtering.</param>
            <returns>Inclusive open time interval.</returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.GetInclusiveIntervalFromThat(System.DateTime)">
            <summary>
            Gets inclusive open time interval starting from the <paramref name="value"/> date/time point.
            </summary>
            <param name="value">Starting date/time point for filtering.</param>
            <returns>Inclusive open time interval.</returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.WithInto(Alpaca.Markets.IExclusiveTimeInterval,System.DateTime)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.IExclusiveTimeInterval"/> object
            with the modified <see cref="P:Alpaca.Markets.ITimeInterval.Into"/> property value.
            </summary>
            <param name="interval">Original time interval.</param>
            <param name="into">New ending date/time point for interval.</param>
            <returns>The new instance of <see cref="T:Alpaca.Markets.IExclusiveTimeInterval"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.WithInto(Alpaca.Markets.IInclusiveTimeInterval,System.DateTime)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.IInclusiveTimeInterval"/> object
            with the modified <see cref="P:Alpaca.Markets.ITimeInterval.Into"/> property value.
            </summary>
            <param name="interval">Original time interval.</param>
            <param name="into">New ending date/time point for interval.</param>
            <returns>The new instance of <see cref="T:Alpaca.Markets.IInclusiveTimeInterval"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.WithFrom(Alpaca.Markets.IExclusiveTimeInterval,System.DateTime)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.IExclusiveTimeInterval"/> object
            with the modified <see cref="P:Alpaca.Markets.ITimeInterval.From"/> property value.
            </summary>
            <param name="interval">Original time interval.</param>
            <param name="from">New starting date/time point for interval.</param>
            <returns>The new instance of <see cref="T:Alpaca.Markets.IExclusiveTimeInterval"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.WithFrom(Alpaca.Markets.IInclusiveTimeInterval,System.DateTime)">
            <summary>
            Creates new instance of <see cref="T:Alpaca.Markets.IInclusiveTimeInterval"/> object
            with the modified <see cref="P:Alpaca.Markets.ITimeInterval.From"/> property value.
            </summary>
            <param name="interval">Original time interval.</param>
            <param name="from">New starting date/time point for interval.</param>
            <returns>The new instance of <see cref="T:Alpaca.Markets.IInclusiveTimeInterval"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.SetTimeInterval``1(``0,Alpaca.Markets.IExclusiveTimeInterval)">
            <summary>
            Set exclusive time interval for <paramref name="request"/> object.
            </summary>
            <param name="request">Target request for setting filtering interval.</param>
            <param name="interval">Time interval (date/time pair) for filtering.</param>
            <returns>Fluent interface - returns <paramref name="request"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.SetTimeInterval``1(``0,Alpaca.Markets.IInclusiveTimeInterval)">
            <summary>
            Set inclusive time interval for <paramref name="request"/> object.
            </summary>
            <param name="request">Target request for setting filtering interval.</param>
            <param name="interval">Time interval (date/time pair) for filtering.</param>
            <returns>Fluent interface - returns <paramref name="request"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.SetExclusiveTimeInterval``1(``0,System.DateTime,System.DateTime)">
            <summary>
            Set exclusive time interval for <paramref name="request"/> object.
            </summary>
            <param name="request">Target request for setting filtering interval.</param>
            <param name="from">Starting date/time point for filtering.</param>
            <param name="into">Ending date/time point for filtering.</param>
            <returns>Fluent interface - returns <paramref name="request"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.SetInclusiveTimeInterval``1(``0,System.DateTime,System.DateTime)">
            <summary>
            Set inclusive time interval for <paramref name="request"/> object.
            </summary>
            <param name="request">Target request for setting filtering interval.</param>
            <param name="from">Starting date/time point for filtering.</param>
            <param name="into">Ending date/time point for filtering.</param>
            <returns>Fluent interface - returns <paramref name="request"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.Deconstruct(Alpaca.Markets.IExclusiveTimeInterval,System.Nullable{System.DateTime}@,System.Nullable{System.DateTime}@)">
            <summary>
            Deconstructs the <see cref="T:Alpaca.Markets.IExclusiveTimeInterval"/> instance
            into two <see cref="T:System.Nullable`1"/> values (tuple).
            </summary>
            <param name="interval">Original time interval.</param>
            <param name="from">Time interval starting point.</param>
            <param name="into">Time interval ending point.</param>
        </member>
        <member name="M:Alpaca.Markets.TimeInterval.Deconstruct(Alpaca.Markets.IInclusiveTimeInterval,System.Nullable{System.DateTime}@,System.Nullable{System.DateTime}@)">
            <summary>
            Deconstructs the <see cref="T:Alpaca.Markets.IInclusiveTimeInterval"/> instance
            into two <see cref="T:System.Nullable`1"/> values (tuple).
            </summary>
            <param name="interval">Original time interval.</param>
            <param name="from">Time interval starting point.</param>
            <param name="into">Time interval ending point.</param>
        </member>
        <member name="T:Alpaca.Markets.AdvancedOrderBase">
            <summary>
            Encapsulates base data for advanced order types, never used directly by any code.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.AdvancedOrderBase.#ctor(Alpaca.Markets.SimpleOrderBase,Alpaca.Markets.OrderClass)">
            <summary>
            Creates new instance of the <see cref="T:Alpaca.Markets.AdvancedOrderBase"/> class.
            </summary>
            <param name="baseOrder">Base order object for creating advanced one.</param>
            <param name="orderClass">Advanced order class for new smart order.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="baseOrder"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="P:Alpaca.Markets.AdvancedOrderBase.OrderClass">
            <summary>
            Gets or sets the order class for advanced order types.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.BracketOrder">
            <summary>
            A bracket order is a chain of three orders that can be used to manage your position entry and exit.
            It is a common use case of an OTOCO (One Triggers OCO {One Cancels Other}) order.
            </summary>
            <remarks>
            See <a href="https://alpaca.markets/docs/trading/orders/#bracket-orders">Alpaca Order Documentation</a> for more information.
            </remarks>
        </member>
        <member name="P:Alpaca.Markets.BracketOrder.TakeProfit">
            <summary>
            Gets prices for take profit order for the bracket order.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.BracketOrder.StopLoss">
            <summary>
            Gets prices for stop loss order for the bracket order.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.IStopLoss">
            <summary>
            Encapsulates the price information about the stop loss order.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStopLoss.StopPrice">
            <summary>
            Gets the stop loss stop price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.IStopLoss.LimitPrice">
            <summary>
            Gets the stop loss limit price.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.ITakeProfit">
            <summary>
            Encapsulates the price information about the take profit order.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.ITakeProfit.LimitPrice">
            <summary>
            Gets the profit taking limit price.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.LimitOrder">
            <summary>
            A limit order is an order to buy or sell at a specified price or better.
            </summary>
            <remarks>See <a href="https://alpaca.markets/docs/trading/orders/#limit-order">Alpaca Order Documentation</a> for more information.</remarks>
        </member>
        <member name="P:Alpaca.Markets.LimitOrder.LimitPrice">
            <summary>
            Gets or sets the new order limit price.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.LimitOrder.Buy(System.String,Alpaca.Markets.OrderQuantity,System.Decimal)">
            <summary>
            Creates new buy market order using specified symbol and quantity.
            </summary>
            <param name="symbol">Order asset symbol.</param>
            <param name="quantity">Order quantity.</param>
            <param name="limitPrice">Order limit price.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>The new <see cref="T:Alpaca.Markets.LimitOrder"/> object instance.</returns>
        </member>
        <member name="M:Alpaca.Markets.LimitOrder.Sell(System.String,Alpaca.Markets.OrderQuantity,System.Decimal)">
            <summary>
            Creates new sell market order using specified symbol and quantity.
            </summary>
            <param name="symbol">Order asset symbol.</param>
            <param name="quantity">Order quantity.</param>
            <param name="limitPrice">Order limit price.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>The new <see cref="T:Alpaca.Markets.LimitOrder"/> object instance.</returns>
        </member>
        <member name="M:Alpaca.Markets.LimitOrder.OneCancelsOther(System.Decimal)">
            <summary>
            Creates a new instance of the <see cref="T:Alpaca.Markets.OneCancelsOtherOrder"/> order from the current order.
            </summary>
            <param name="stopLossStopPrice">Stop loss order stop price.</param>
            <returns>New advanced order representing pair of original order and stop loss order.</returns>
        </member>
        <member name="M:Alpaca.Markets.LimitOrder.OneCancelsOther(System.Decimal,System.Decimal)">
            <summary>
            Creates a new instance of the <see cref="T:Alpaca.Markets.OneCancelsOtherOrder"/> order from the current order.
            </summary>
            <param name="stopLossStopPrice">Stop loss order stop price.</param>
            <param name="stopLossLimitPrice">Stop loss order limit price.</param>
            <returns>New advanced order representing pair of original order and stop loss order.</returns>
        </member>
        <member name="T:Alpaca.Markets.MarketOrder">
            <summary>
            A market order is a request to buy or sell a security at the currently available market price.
            </summary>
            <remarks>See <a href="https://alpaca.markets/docs/trading/orders/#market-order">Alpaca Order Documentation</a> for more information.</remarks>
        </member>
        <member name="M:Alpaca.Markets.MarketOrder.Buy(System.String,Alpaca.Markets.OrderQuantity)">
            <summary>
            Creates new buy market order using specified symbol and quantity.
            </summary>
            <param name="symbol">Order asset symbol.</param>
            <param name="quantity">Order quantity.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>The new <see cref="T:Alpaca.Markets.MarketOrder"/> object instance.</returns>
        </member>
        <member name="M:Alpaca.Markets.MarketOrder.Sell(System.String,Alpaca.Markets.OrderQuantity)">
            <summary>
            Creates new sell market order using specified symbol and quantity.
            </summary>
            <param name="symbol">Order asset symbol.</param>
            <param name="quantity">Order quantity.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>The new <see cref="T:Alpaca.Markets.MarketOrder"/> object instance.</returns>
        </member>
        <member name="T:Alpaca.Markets.OneCancelsOtherOrder">
            <summary>
            OCO (One-Cancels-Other) is another type of advanced order type.
            This is a set of two orders with the same side (buy/buy or sell/sell) and currently only exit order is supported.
            In other words, this is the second part of the bracket orders where the entry order is already filled,
            and you can submit the take-profit and stop-loss in one order submission.
            </summary>
            <remarks>See <a href="https://alpaca.markets/docs/trading/orders/#oco-orders">Alpaca Order Documentation</a> for more information.</remarks>
        </member>
        <member name="P:Alpaca.Markets.OneCancelsOtherOrder.TakeProfit">
            <summary>
            Gets prices for take profit order for the OCO order.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.OneCancelsOtherOrder.StopLoss">
            <summary>
            Gets prices for stop loss order for the OCO order.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.OrderBase">
            <summary>
            Encapsulates base data for any order types, never used directly by any code.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.OrderBase.#ctor(System.String,Alpaca.Markets.OrderQuantity,Alpaca.Markets.OrderSide,Alpaca.Markets.OrderType)">
            <summary>
            Creates new instance of the <see cref="T:Alpaca.Markets.OrderBase"/> class.
            </summary>
            <param name="symbol">Alpaca symbol for order.</param>
            <param name="quantity">Order quantity (absolute value).</param>
            <param name="side">Order side (buy or sell).</param>
            <param name="type">Order type (market, limit, stop, stop-limit).</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.OrderBase.#ctor(Alpaca.Markets.OrderBase)">
            <summary>
            Creates new instance of the <see cref="T:Alpaca.Markets.OrderBase"/> class.
            </summary>
            <param name="baseOrder">Base order for getting parameters.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="baseOrder"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="P:Alpaca.Markets.OrderBase.Symbol">
            <summary>
            Gets the new order asset symbol.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.OrderBase.Quantity">
            <summary>
            Gets the new order quantity.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.OrderBase.Side">
            <summary>
            Gets the new order side (buy or sell).
            </summary>
        </member>
        <member name="P:Alpaca.Markets.OrderBase.Type">
            <summary>
            Gets the new order type.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.OrderBase.Duration">
            <summary>
            Gets the new order duration.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.OrderBase.ClientOrderId">
            <summary>
            Gets or sets the client order ID. This is a user-specified ID that must be unique if provided.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.OrderBase.ExtendedHours">
            <summary>
            Gets or sets flag indicating that order should be allowed to execute during extended hours trading.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.OrderBase.PositionIntent">
            <summary>
            Gets or sets the optional position intent for order placement.
            </summary>
        </member>
        <member name="T:Alpaca.Markets.OrderBaseExtensions">
            <summary>
            Set of extensions methods for implementing the fluent interface for the <see cref="T:Alpaca.Markets.OrderBase"/> inheritors.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.OrderBaseExtensions.WithDuration``1(``0,Alpaca.Markets.TimeInForce)">
            <summary>
            Sets the new value for the <see cref="P:Alpaca.Markets.OrderBase.Duration"/> property of the target order.
            </summary>
            <param name="order">Target order for changing <see cref="P:Alpaca.Markets.OrderBase.Duration"/> property.</param>
            <param name="duration">The new <see cref="P:Alpaca.Markets.OrderBase.Duration"/> property value.</param>
            <typeparam name="TOrder">Type of target order for altering.</typeparam>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="order"/> argument is <c>null</c>.
            </exception>
            <returns>Fluent interface - returns the <paramref name="order"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.OrderBaseExtensions.WithClientOrderId``1(``0,System.String)">
            <summary>
            Sets the new value for the <see cref="P:Alpaca.Markets.OrderBase.ClientOrderId"/> property of the target order.
            </summary>
            <param name="order">Target order for changing <see cref="P:Alpaca.Markets.OrderBase.ClientOrderId"/> property.</param>
            <param name="clientOrderId">The new <see cref="P:Alpaca.Markets.OrderBase.ClientOrderId"/> property value.</param>
            <typeparam name="TOrder">Type of target order for altering.</typeparam>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="order"/> argument is <c>null</c>.
            </exception>
            <returns>Fluent interface - returns the <paramref name="order"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.OrderBaseExtensions.WithExtendedHours``1(``0,System.Boolean)">
            <summary>
            Sets the new value for the <see cref="P:Alpaca.Markets.OrderBase.ExtendedHours"/> property of the target order.
            </summary>
            <param name="order">Target order for changing <see cref="P:Alpaca.Markets.OrderBase.ExtendedHours"/> property.</param>
            <param name="extendedHours">The new <see cref="P:Alpaca.Markets.OrderBase.ExtendedHours"/> property value.</param>
            <typeparam name="TOrder">Type of target order for altering.</typeparam>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="order"/> argument is <c>null</c>.
            </exception>
            <returns>Fluent interface - returns the <paramref name="order"/> object.</returns>
        </member>
        <member name="M:Alpaca.Markets.OrderBaseExtensions.WithPositionIntent``1(``0,Alpaca.Markets.PositionIntent)">
            <summary>
            Sets the new value for the <see cref="P:Alpaca.Markets.OrderBase.PositionIntent"/> property of the target order.
            </summary>
            <param name="order">Target order for changing <see cref="P:Alpaca.Markets.OrderBase.PositionIntent"/> property.</param>
            <param name="positionIntent">The new <see cref="P:Alpaca.Markets.OrderBase.PositionIntent"/> property value.</param>
            <typeparam name="TOrder">Type of target order for altering.</typeparam>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="order"/> argument is <c>null</c>.
            </exception>
            <returns>Fluent interface - returns the <paramref name="order"/> object.</returns>
        </member>
        <member name="T:Alpaca.Markets.OrderSideExtensions">
            <summary>
            Set of extensions methods for creating the <see cref="T:Alpaca.Markets.OrderBase"/> inheritors.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.OrderSideExtensions.Market(Alpaca.Markets.OrderSide,System.String,Alpaca.Markets.OrderQuantity)">
            <summary>
            Creates new market order using specified side, symbol, and quantity.
            </summary>
            <param name="orderSide">Order side (buy or sell).</param>
            <param name="symbol">Order asset symbol.</param>
            <param name="quantity">Order quantity.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>The new <see cref="T:Alpaca.Markets.MarketOrder"/> object instance.</returns>
        </member>
        <member name="M:Alpaca.Markets.OrderSideExtensions.Stop(Alpaca.Markets.OrderSide,System.String,Alpaca.Markets.OrderQuantity,System.Decimal)">
            <summary>
            Creates new stop order using specified side, symbol, quantity, and stop price.
            </summary>
            <param name="orderSide">Order side (buy or sell).</param>
            <param name="symbol">Order asset symbol.</param>
            <param name="quantity">Order quantity.</param>
            <param name="stopPrice">Order stop price.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>The new <see cref="T:Alpaca.Markets.StopOrder"/> object instance.</returns>
        </member>
        <member name="M:Alpaca.Markets.OrderSideExtensions.Limit(Alpaca.Markets.OrderSide,System.String,Alpaca.Markets.OrderQuantity,System.Decimal)">
            <summary>
            Creates new limit order using specified side, symbol, quantity, and limit price.
            </summary>
            <param name="orderSide">Order side (buy or sell).</param>
            <param name="symbol">Order asset symbol.</param>
            <param name="quantity">Order quantity.</param>
            <param name="limitPrice">Order limit price.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>The new <see cref="T:Alpaca.Markets.LimitOrder"/> object instance.</returns>
        </member>
        <member name="M:Alpaca.Markets.OrderSideExtensions.StopLimit(Alpaca.Markets.OrderSide,System.String,Alpaca.Markets.OrderQuantity,System.Decimal,System.Decimal)">
            <summary>
            Creates new limit order using specified side, symbol, quantity, stop, and limit prices.
            </summary>
            <param name="orderSide">Order side (buy or sell).</param>
            <param name="symbol">Order asset symbol.</param>
            <param name="quantity">Order quantity.</param>
            <param name="stopPrice">Order stop price.</param>
            <param name="limitPrice">Order limit price.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>The new <see cref="T:Alpaca.Markets.StopLimitOrder"/> object instance.</returns>
        </member>
        <member name="M:Alpaca.Markets.OrderSideExtensions.TrailingStop(Alpaca.Markets.OrderSide,System.String,Alpaca.Markets.OrderQuantity,Alpaca.Markets.TrailOffset)">
            <summary>
            Creates new trailing stop order using specified side, symbol, quantity, and trail offset.
            </summary>
            <param name="orderSide">Order side (buy or sell).</param>
            <param name="symbol">Order asset symbol.</param>
            <param name="quantity">Order quantity.</param>
            <param name="trailOffset">Order trail offset.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>The new <see cref="T:Alpaca.Markets.TrailingStopOrder"/> object instance.</returns>
        </member>
        <member name="T:Alpaca.Markets.SimpleOrderBase">
            <summary>
            Encapsulates base data for ordinal order types, never used directly by any code.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.SimpleOrderBase.#ctor(System.String,Alpaca.Markets.OrderQuantity,Alpaca.Markets.OrderSide,Alpaca.Markets.OrderType)">
            <summary>
            Creates new instance of the <see cref="T:Alpaca.Markets.SimpleOrderBase"/> class.
            </summary>
            <param name="symbol">Alpaca symbol for order.</param>
            <param name="quantity">Order quantity (absolute value).</param>
            <param name="side">Order side (buy or sell).</param>
            <param name="type">Order type (market, limit, stop, stop-limit).</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
        </member>
        <member name="M:Alpaca.Markets.SimpleOrderBase.TakeProfit(System.Decimal)">
            <summary>
            Creates a new instance of the <see cref="T:Alpaca.Markets.TakeProfitOrder"/> order from the current order.
            </summary>
            <param name="takeProfitLimitPrice">Take profit order limit price.</param>
            <returns>New advanced order representing pair of original order and take profit order.</returns>
        </member>
        <member name="M:Alpaca.Markets.SimpleOrderBase.StopLoss(System.Decimal)">
            <summary>
            Creates a new instance of the <see cref="T:Alpaca.Markets.StopLossOrder"/> order from the current order.
            </summary>
            <param name="stopLossStopPrice">Stop loss order stop price.</param>
            <returns>New advanced order representing pair of original order and stop loss order.</returns>
        </member>
        <member name="M:Alpaca.Markets.SimpleOrderBase.StopLoss(System.Decimal,System.Decimal)">
            <summary>
            Creates a new instance of the <see cref="T:Alpaca.Markets.StopLossOrder"/> order from the current order.
            </summary>
            <param name="stopLossStopPrice">Stop loss order stop price.</param>
            <param name="stopLossLimitPrice">Stop loss order limit price.</param>
            <returns>New advanced order representing pair of original order and stop loss order.</returns>
        </member>
        <member name="M:Alpaca.Markets.SimpleOrderBase.Bracket(System.Decimal,System.Decimal)">
            <summary>
            Creates a new instance of the <see cref="T:Alpaca.Markets.BracketOrder"/> order from the current order.
            </summary>
            <param name="takeProfitLimitPrice">Take profit order limit price.</param>
            <param name="stopLossStopPrice">Stop loss order stop price.</param>
            <returns>New advanced order representing an original order plus pair of take profit and stop loss orders.</returns>
        </member>
        <member name="M:Alpaca.Markets.SimpleOrderBase.Bracket(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Creates a new instance of the <see cref="T:Alpaca.Markets.BracketOrder"/> order from the current order.
            </summary>
            <param name="takeProfitLimitPrice">Take profit order limit price.</param>
            <param name="stopLossStopPrice">Stop loss order stop price.</param>
            <param name="stopLossLimitPrice">Stop loss order limit price.</param>
            <returns>New advanced order representing an original order plus pair of take profit and stop loss orders.</returns>
        </member>
        <member name="T:Alpaca.Markets.StopLimitOrder">
            <summary>
            A stop-limit order is a conditional trade over a set time frame that combines the features of a stop order with
            those of a limit order and is used to mitigate risk.
            The stop-limit order will be executed at a specified limit price, or better, after a given stop price has been reached.
            <para>See https://alpaca.markets/docs/trading/orders/#stop-limit-order</para>
            </summary>
        </member>
        <member name="P:Alpaca.Markets.StopLimitOrder.StopPrice">
            <summary>
            Gets or sets the new order stop price.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.StopLimitOrder.LimitPrice">
            <summary>
            Gets or sets the new order limit price.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.StopLimitOrder.Buy(System.String,Alpaca.Markets.OrderQuantity,System.Decimal,System.Decimal)">
            <summary>
            Creates new buy stop limit order using specified symbol and quantity.
            </summary>
            <param name="symbol">Order asset symbol.</param>
            <param name="quantity">Order quantity.</param>
            <param name="stopPrice">Order stop price.</param>
            <param name="limitPrice">Order limit price.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>The new <see cref="T:Alpaca.Markets.StopLimitOrder"/> object instance.</returns>
        </member>
        <member name="M:Alpaca.Markets.StopLimitOrder.Sell(System.String,Alpaca.Markets.OrderQuantity,System.Decimal,System.Decimal)">
            <summary>
            Creates new sell stop limit order using specified symbol and quantity.
            </summary>
            <param name="symbol">Order asset symbol.</param>
            <param name="quantity">Order quantity.</param>
            <param name="stopPrice">Order stop price.</param>
            <param name="limitPrice">Order limit price.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>The new <see cref="T:Alpaca.Markets.StopLimitOrder"/> object instance.</returns>
        </member>
        <member name="T:Alpaca.Markets.StopLossOrder">
            <summary>
            Encapsulates data required for placing stop loss order on the Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.StopLossOrder.StopPrice">
            <inheritdoc />
        </member>
        <member name="P:Alpaca.Markets.StopLossOrder.LimitPrice">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.StopLossOrder.TakeProfit(System.Decimal)">
            <summary>
            Creates a new instance of the <see cref="T:Alpaca.Markets.BracketOrder"/> order from the current order.
            </summary>
            <param name="takeProfitLimitPrice">Take profit order limit price.</param>
            <returns>New advanced order representing pair of original order and take profit order.</returns>
        </member>
        <member name="T:Alpaca.Markets.StopOrder">
            <summary>
            A stop (market) order is an order to buy or sell a security when its price moves past a particular point,
            ensuring a higher probability of achieving a predetermined entry or exit price.
            <para>See https://alpaca.markets/docs/trading/orders/#stop-order</para>
            </summary>
        </member>
        <member name="P:Alpaca.Markets.StopOrder.StopPrice">
            <summary>
            Gets or sets the new order stop price.
            </summary>
        </member>
        <member name="M:Alpaca.Markets.StopOrder.Buy(System.String,Alpaca.Markets.OrderQuantity,System.Decimal)">
            <summary>
            Creates new buy stop order using specified symbol and quantity.
            </summary>
            <param name="symbol">Order asset symbol.</param>
            <param name="quantity">Order quantity.</param>
            <param name="stopPrice">Order stop price.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>The new <see cref="T:Alpaca.Markets.StopOrder"/> object instance.</returns>
        </member>
        <member name="M:Alpaca.Markets.StopOrder.Sell(System.String,Alpaca.Markets.OrderQuantity,System.Decimal)">
            <summary>
            Creates new sell buy order using specified symbol and quantity.
            </summary>
            <param name="symbol">Order asset symbol.</param>
            <param name="quantity">Order quantity.</param>
            <param name="stopPrice">Order stop price.</param>
            <exception cref="T:System.ArgumentNullException">
            The <paramref name="symbol"/> argument is <c>null</c>.
            </exception>
            <returns>The new <see cref="T:Alpaca.Markets.StopOrder"/> object instance.</returns>
        </member>
        <member name="T:Alpaca.Markets.TakeProfitOrder">
            <summary>
            Encapsulates data required for placing take profit order on the Alpaca REST API.
            </summary>
        </member>
        <member name="P:Alpaca.Markets.TakeProfitOrder.LimitPrice">
            <inheritdoc />
        </member>
        <member name="M:Alpaca.Markets.TakeProfitOrder.StopLoss(System.Decimal)">
            <summary>
            Creates a new instance of th